;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2019-09-09 02:14:26
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .text
; data inside code section at 0x0 -- 0x12
0x0:      0f 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x10:     0e 00                                              |..              |
; function: function_12 at 0x12 -- 0xeb
0x12:     00 00                              	add byte ptr [rax], al
0x14:     00 00                              	add byte ptr [rax], al
0x16:     00 00                              	add byte ptr [rax], al
0x18:     48 8d 4d f0                        	lea rcx, [rbp - 0x10]
0x1c:     4c 39 f9                           	cmp rcx, r15
0x1f:     0f 82 a2 00 00 00                  	jb 0xc7 <function_12+0xb5>
0x25:     48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x2d:     4c 89 75 f8                        	mov qword ptr [rbp - 8], r14
0x31:     40 f6 c6 07                        	test sil, 7
0x35:     0f 84 81 00 00 00                  	je 0xbc <function_12+0xaa>
0x3b:     49 8d 84 24 88 00 00 00            	lea rax, [r12 + 0x88]
0x43:     49 39 85 58 03 00 00               	cmp qword ptr [r13 + 0x358], rax
0x4a:     0f 82 82 00 00 00                  	jb 0xd2 <function_12+0xc0>
0x50:     49 c7 44 24 08 00 00 00 00         	mov qword ptr [r12 + 8], 0
0x59:     4d 89 74 24 10                     	mov qword ptr [r12 + 0x10], r14
0x5e:     4d 89 74 24 18                     	mov qword ptr [r12 + 0x18], r14
0x63:     4d 89 74 24 20                     	mov qword ptr [r12 + 0x20], r14
0x68:     4d 89 74 24 28                     	mov qword ptr [r12 + 0x28], r14
0x6d:     4d 89 74 24 30                     	mov qword ptr [r12 + 0x30], r14
0x72:     4d 89 74 24 38                     	mov qword ptr [r12 + 0x38], r14
0x77:     4d 89 74 24 40                     	mov qword ptr [r12 + 0x40], r14
0x7c:     4d 89 74 24 48                     	mov qword ptr [r12 + 0x48], r14
0x81:     4d 89 74 24 50                     	mov qword ptr [r12 + 0x50], r14
0x86:     4d 89 74 24 58                     	mov qword ptr [r12 + 0x58], r14
0x8b:     4d 89 74 24 60                     	mov qword ptr [r12 + 0x60], r14
0x90:     4d 89 74 24 68                     	mov qword ptr [r12 + 0x68], r14
0x95:     4d 89 74 24 70                     	mov qword ptr [r12 + 0x70], r14
0x9a:     4d 89 74 24 78                     	mov qword ptr [r12 + 0x78], r14
0x9f:     4d 89 b4 24 80 00 00 00            	mov qword ptr [r12 + 0x80], r14
0xa7:     4d 89 b4 24 88 00 00 00            	mov qword ptr [r12 + 0x88], r14
0xaf:     48 8b 4d 00                        	mov rcx, qword ptr [rbp]
0xb3:     48 8d 58 81                        	lea rbx, [rax - 0x7f]
0xb7:     49 89 c4                           	mov r12, rax
0xba:     ff e1                              	jmp rcx
0xbc:     48 8b 06                           	mov rax, qword ptr [rsi]
0xbf:     48 89 cd                           	mov rbp, rcx
0xc2:     48 89 f3                           	mov rbx, rsi
0xc5:     ff e0                              	jmp rax
0xc7:     49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0xcb:     bb 00 00 00 00                     	mov ebx, 0
0xd0:     ff e0                              	jmp rax
0xd2:     49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0xdd:     48 89 cd                           	mov rbp, rcx
0xe0:     49 89 c4                           	mov r12, rax
0xe3:     48 89 f3                           	mov rbx, rsi
0xe6:     e9 83 4b 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0xeb -- 0xf1
0xeb:     0f 1f 44 00 00 01                                  |..D...          |
; function: function_f1 at 0xf1 -- 0x185
0xf1:     00 00                              	add byte ptr [rax], al
0xf3:     00 00                              	add byte ptr [rax], al
0xf5:     00 00                              	add byte ptr [rax], al
0xf7:     00 1e                              	add byte ptr [rsi], bl
0xf9:     00 00                              	add byte ptr [rax], al
0xfb:     00 00                              	add byte ptr [rax], al
0xfd:     00 00                              	add byte ptr [rax], al
0xff:     00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x103:    4d 8d a4 24 88 00 00 00            	lea r12, [r12 + 0x88]
0x10b:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x112:    72 61                              	jb 0x175 <function_f1+0x84>
0x114:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x11c:    48 8b 4d 08                        	mov rcx, qword ptr [rbp + 8]
0x120:    48 89 48 10                        	mov qword ptr [rax + 0x10], rcx
0x124:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x128:    48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0x12c:    48 89 48 28                        	mov qword ptr [rax + 0x28], rcx
0x130:    48 89 48 30                        	mov qword ptr [rax + 0x30], rcx
0x134:    48 89 48 38                        	mov qword ptr [rax + 0x38], rcx
0x138:    48 89 48 40                        	mov qword ptr [rax + 0x40], rcx
0x13c:    48 89 48 48                        	mov qword ptr [rax + 0x48], rcx
0x140:    48 89 48 50                        	mov qword ptr [rax + 0x50], rcx
0x144:    48 89 48 58                        	mov qword ptr [rax + 0x58], rcx
0x148:    48 89 48 60                        	mov qword ptr [rax + 0x60], rcx
0x14c:    48 89 48 68                        	mov qword ptr [rax + 0x68], rcx
0x150:    48 89 48 70                        	mov qword ptr [rax + 0x70], rcx
0x154:    48 89 48 78                        	mov qword ptr [rax + 0x78], rcx
0x158:    48 89 88 80 00 00 00               	mov qword ptr [rax + 0x80], rcx
0x15f:    48 89 88 88 00 00 00               	mov qword ptr [rax + 0x88], rcx
0x166:    48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x16a:    48 83 c5 10                        	add rbp, 0x10
0x16e:    49 8d 5c 24 81                     	lea rbx, [r12 - 0x7f]
0x173:    ff e0                              	jmp rax
0x175:    49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0x180:    e9 e9 4a 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0x185 -- 0x190
0x185:    66 66 2e 0f 1f 84 00 00  00 00 00                  |ff.........     |
; function: function_190 at 0x190 -- 0x1e1
0x190:    0f 00 00                           	sldt word ptr [rax]
0x193:    00 02                              	add byte ptr [rdx], al
0x195:    00 00                              	add byte ptr [rax], al
0x197:    00 00                              	add byte ptr [rax], al
0x199:    00 00                              	add byte ptr [rax], al
0x19b:    00 00                              	add byte ptr [rax], al
0x19d:    00 00                              	add byte ptr [rax], al
0x19f:    00 0e                              	add byte ptr [rsi], cl
0x1a1:    00 00                              	add byte ptr [rax], al
0x1a3:    00 00                              	add byte ptr [rax], al
0x1a5:    00 00                              	add byte ptr [rax], al
0x1a7:    00 48 89                           	add byte ptr [rax - 0x77], cl
0x1aa:    e8 48 8d 6d f0                     	call 0xfffffffff06d8ef7 <unknown_fffffffff06d8ef7>
0x1af:    4c 39 fd                           	cmp rbp, r15
0x1b2:    72 1f                              	jb 0x1d3 <function_190+0x43>
0x1b4:    48 c7 40 f0 00 00 00 00            	mov qword ptr [rax - 0x10], 0
0x1bc:    4c 89 70 f8                        	mov qword ptr [rax - 8], r14
0x1c0:    40 f6 c6 07                        	test sil, 7
0x1c4:    74 05                              	je 0x1cb <function_190+0x3b>
0x1c6:    48 89 f3                           	mov rbx, rsi
0x1c9:    eb 35                              	jmp 0x200 <c4Bk_info$def>
0x1cb:    48 8b 06                           	mov rax, qword ptr [rsi]
0x1ce:    48 89 f3                           	mov rbx, rsi
0x1d1:    ff e0                              	jmp rax
0x1d3:    49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x1d7:    bb 00 00 00 00                     	mov ebx, 0
0x1dc:    48 89 c5                           	mov rbp, rax
0x1df:    ff e1                              	jmp rcx
; data inside code section at 0x1e1 -- 0x1fa
0x1e1:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 01   |ff...........@..|
0x1f1:    00 00 00 00 00 00 00 1e  00                        |.........       |
; function: function_1fa at 0x1fa -- 0x200
0x1fa:    00 00                              	add byte ptr [rax], al
0x1fc:    00 00                              	add byte ptr [rax], al
0x1fe:    00 00                              	add byte ptr [rax], al
; function: c4Bk_info$def at 0x200 -- 0x50f
0x200:    4c 89 e0                           	mov rax, r12
0x203:    4d 8d a4 24 88 02 00 00            	lea r12, [r12 + 0x288]
0x20b:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x212:    0f 82 e7 02 00 00                  	jb 0x4ff <c4Bk_info$def+0x2ff>
0x218:    48 8b 4b 07                        	mov rcx, qword ptr [rbx + 7]
0x21c:    48 89 4c 24 e8                     	mov qword ptr [rsp - 0x18], rcx
0x221:    48 8b 4b 0f                        	mov rcx, qword ptr [rbx + 0xf]
0x225:    48 89 4c 24 e0                     	mov qword ptr [rsp - 0x20], rcx
0x22a:    48 8b 4b 17                        	mov rcx, qword ptr [rbx + 0x17]
0x22e:    48 89 4c 24 d8                     	mov qword ptr [rsp - 0x28], rcx
0x233:    48 8b 4b 1f                        	mov rcx, qword ptr [rbx + 0x1f]
0x237:    48 89 4c 24 d0                     	mov qword ptr [rsp - 0x30], rcx
0x23c:    48 8b 4b 27                        	mov rcx, qword ptr [rbx + 0x27]
0x240:    48 89 4c 24 c8                     	mov qword ptr [rsp - 0x38], rcx
0x245:    4c 89 6c 24 f0                     	mov qword ptr [rsp - 0x10], r13
0x24a:    4c 8b 6b 2f                        	mov r13, qword ptr [rbx + 0x2f]
0x24e:    4c 89 7c 24 f8                     	mov qword ptr [rsp - 8], r15
0x253:    4c 8b 7b 37                        	mov r15, qword ptr [rbx + 0x37]
0x257:    4c 8b 73 3f                        	mov r14, qword ptr [rbx + 0x3f]
0x25b:    4c 8b 5b 47                        	mov r11, qword ptr [rbx + 0x47]
0x25f:    4c 8b 53 4f                        	mov r10, qword ptr [rbx + 0x4f]
0x263:    4c 8b 4b 57                        	mov r9, qword ptr [rbx + 0x57]
0x267:    4c 8b 43 5f                        	mov r8, qword ptr [rbx + 0x5f]
0x26b:    48 8b 7b 67                        	mov rdi, qword ptr [rbx + 0x67]
0x26f:    48 8b 73 6f                        	mov rsi, qword ptr [rbx + 0x6f]
0x273:    48 8b 53 77                        	mov rdx, qword ptr [rbx + 0x77]
0x277:    48 8b 4b 7f                        	mov rcx, qword ptr [rbx + 0x7f]
0x27b:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x283:    48 8b 5d 08                        	mov rbx, qword ptr [rbp + 8]
0x287:    48 89 58 18                        	mov qword ptr [rax + 0x18], rbx
0x28b:    48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0x28f:    48 c7 40 28 00 00 00 00            	mov qword ptr [rax + 0x28], 0
0x297:    48 89 58 38                        	mov qword ptr [rax + 0x38], rbx
0x29b:    48 89 50 40                        	mov qword ptr [rax + 0x40], rdx
0x29f:    48 c7 40 48 00 00 00 00            	mov qword ptr [rax + 0x48], 0
0x2a7:    48 89 58 58                        	mov qword ptr [rax + 0x58], rbx
0x2ab:    48 89 70 60                        	mov qword ptr [rax + 0x60], rsi
0x2af:    48 c7 40 68 00 00 00 00            	mov qword ptr [rax + 0x68], 0
0x2b7:    48 89 58 78                        	mov qword ptr [rax + 0x78], rbx
0x2bb:    48 89 b8 80 00 00 00               	mov qword ptr [rax + 0x80], rdi
0x2c2:    48 c7 80 88 00 00 00 00 00 00 00   	mov qword ptr [rax + 0x88], 0
0x2cd:    48 89 98 98 00 00 00               	mov qword ptr [rax + 0x98], rbx
0x2d4:    4c 89 80 a0 00 00 00               	mov qword ptr [rax + 0xa0], r8
0x2db:    48 c7 80 a8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xa8], 0
0x2e6:    48 89 98 b8 00 00 00               	mov qword ptr [rax + 0xb8], rbx
0x2ed:    4c 89 88 c0 00 00 00               	mov qword ptr [rax + 0xc0], r9
0x2f4:    48 c7 80 c8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xc8], 0
0x2ff:    48 89 98 d8 00 00 00               	mov qword ptr [rax + 0xd8], rbx
0x306:    4c 89 90 e0 00 00 00               	mov qword ptr [rax + 0xe0], r10
0x30d:    48 c7 80 e8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xe8], 0
0x318:    48 89 98 f8 00 00 00               	mov qword ptr [rax + 0xf8], rbx
0x31f:    4c 89 98 00 01 00 00               	mov qword ptr [rax + 0x100], r11
0x326:    48 c7 80 08 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x108], 0
0x331:    48 89 98 18 01 00 00               	mov qword ptr [rax + 0x118], rbx
0x338:    4c 89 b0 20 01 00 00               	mov qword ptr [rax + 0x120], r14
0x33f:    48 c7 80 28 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x128], 0
0x34a:    48 89 98 38 01 00 00               	mov qword ptr [rax + 0x138], rbx
0x351:    4c 89 b8 40 01 00 00               	mov qword ptr [rax + 0x140], r15
0x358:    48 c7 80 48 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x148], 0
0x363:    48 89 98 58 01 00 00               	mov qword ptr [rax + 0x158], rbx
0x36a:    4c 89 a8 60 01 00 00               	mov qword ptr [rax + 0x160], r13
0x371:    48 c7 80 68 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x168], 0
0x37c:    48 89 98 78 01 00 00               	mov qword ptr [rax + 0x178], rbx
0x383:    48 8b 4c 24 c8                     	mov rcx, qword ptr [rsp - 0x38]
0x388:    48 89 88 80 01 00 00               	mov qword ptr [rax + 0x180], rcx
0x38f:    48 c7 80 88 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x188], 0
0x39a:    48 89 98 98 01 00 00               	mov qword ptr [rax + 0x198], rbx
0x3a1:    48 8b 4c 24 d0                     	mov rcx, qword ptr [rsp - 0x30]
0x3a6:    48 89 88 a0 01 00 00               	mov qword ptr [rax + 0x1a0], rcx
0x3ad:    48 c7 80 a8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1a8], 0
0x3b8:    48 89 98 b8 01 00 00               	mov qword ptr [rax + 0x1b8], rbx
0x3bf:    48 8b 4c 24 d8                     	mov rcx, qword ptr [rsp - 0x28]
0x3c4:    48 89 88 c0 01 00 00               	mov qword ptr [rax + 0x1c0], rcx
0x3cb:    48 c7 80 c8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1c8], 0
0x3d6:    48 89 98 d8 01 00 00               	mov qword ptr [rax + 0x1d8], rbx
0x3dd:    48 8b 4c 24 e0                     	mov rcx, qword ptr [rsp - 0x20]
0x3e2:    48 89 88 e0 01 00 00               	mov qword ptr [rax + 0x1e0], rcx
0x3e9:    48 c7 80 e8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1e8], 0
0x3f4:    48 89 98 f8 01 00 00               	mov qword ptr [rax + 0x1f8], rbx
0x3fb:    48 8b 4c 24 e8                     	mov rcx, qword ptr [rsp - 0x18]
0x400:    48 89 88 00 02 00 00               	mov qword ptr [rax + 0x200], rcx
0x407:    48 8d 88 e8 01 00 00               	lea rcx, [rax + 0x1e8]
0x40e:    48 c7 80 08 02 00 00 00 00 00 00   	mov qword ptr [rax + 0x208], 0
0x419:    48 89 88 10 02 00 00               	mov qword ptr [rax + 0x210], rcx
0x420:    48 8d 88 c8 01 00 00               	lea rcx, [rax + 0x1c8]
0x427:    48 89 88 18 02 00 00               	mov qword ptr [rax + 0x218], rcx
0x42e:    48 8d 88 a8 01 00 00               	lea rcx, [rax + 0x1a8]
0x435:    48 89 88 20 02 00 00               	mov qword ptr [rax + 0x220], rcx
0x43c:    48 8d 88 88 01 00 00               	lea rcx, [rax + 0x188]
0x443:    48 89 88 28 02 00 00               	mov qword ptr [rax + 0x228], rcx
0x44a:    48 8d 88 68 01 00 00               	lea rcx, [rax + 0x168]
0x451:    48 89 88 30 02 00 00               	mov qword ptr [rax + 0x230], rcx
0x458:    48 8d 88 48 01 00 00               	lea rcx, [rax + 0x148]
0x45f:    48 89 88 38 02 00 00               	mov qword ptr [rax + 0x238], rcx
0x466:    48 8d 88 28 01 00 00               	lea rcx, [rax + 0x128]
0x46d:    48 89 88 40 02 00 00               	mov qword ptr [rax + 0x240], rcx
0x474:    48 8d 88 08 01 00 00               	lea rcx, [rax + 0x108]
0x47b:    48 89 88 48 02 00 00               	mov qword ptr [rax + 0x248], rcx
0x482:    48 8d 88 e8 00 00 00               	lea rcx, [rax + 0xe8]
0x489:    48 89 88 50 02 00 00               	mov qword ptr [rax + 0x250], rcx
0x490:    48 8d 88 c8 00 00 00               	lea rcx, [rax + 0xc8]
0x497:    48 89 88 58 02 00 00               	mov qword ptr [rax + 0x258], rcx
0x49e:    48 8d 88 a8 00 00 00               	lea rcx, [rax + 0xa8]
0x4a5:    48 89 88 60 02 00 00               	mov qword ptr [rax + 0x260], rcx
0x4ac:    48 8d 88 88 00 00 00               	lea rcx, [rax + 0x88]
0x4b3:    48 89 88 68 02 00 00               	mov qword ptr [rax + 0x268], rcx
0x4ba:    48 8d 48 68                        	lea rcx, [rax + 0x68]
0x4be:    48 89 88 70 02 00 00               	mov qword ptr [rax + 0x270], rcx
0x4c5:    48 8d 48 48                        	lea rcx, [rax + 0x48]
0x4c9:    48 89 88 78 02 00 00               	mov qword ptr [rax + 0x278], rcx
0x4d0:    48 8d 48 28                        	lea rcx, [rax + 0x28]
0x4d4:    48 89 88 80 02 00 00               	mov qword ptr [rax + 0x280], rcx
0x4db:    48 8d 48 08                        	lea rcx, [rax + 8]
0x4df:    48 89 88 88 02 00 00               	mov qword ptr [rax + 0x288], rcx
0x4e6:    48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x4ea:    48 83 c5 10                        	add rbp, 0x10
0x4ee:    49 8d 5c 24 81                     	lea rbx, [r12 - 0x7f]
0x4f3:    4c 8b 6c 24 f0                     	mov r13, qword ptr [rsp - 0x10]
0x4f8:    4c 8b 7c 24 f8                     	mov r15, qword ptr [rsp - 8]
0x4fd:    ff e0                              	jmp rax
0x4ff:    49 c7 85 88 03 00 00 88 02 00 00   	mov qword ptr [r13 + 0x388], 0x288
0x50a:    e9 5f 47 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0x50f -- 0x510
0x50f:    90                                                 |.               |
; function: DataziUArr_foldr_slow at 0x510 -- 0x52d
0x510:    4c 8b 4d 20                        	mov r9, qword ptr [rbp + 0x20]
0x514:    4c 8b 45 18                        	mov r8, qword ptr [rbp + 0x18]
0x518:    48 8b 7d 10                        	mov rdi, qword ptr [rbp + 0x10]
0x51c:    4c 8b 75 00                        	mov r14, qword ptr [rbp]
0x520:    48 8b 75 08                        	mov rsi, qword ptr [rbp + 8]
0x524:    48 83 c5 28                        	add rbp, 0x28
0x528:    e9 2b 0c 00 00                     	jmp 0x1158 <DataziUArr_foldr_info>
; data inside code section at 0x52d -- 0x530
0x52d:    0f 1f 00                                           |...             |
; function: function_530 at 0x530 -- 0x5b2
0x530:    04 00                              	add al, 0
0x532:    00 00                              	add byte ptr [rax], al
0x534:    00 00                              	add byte ptr [rax], al
0x536:    00 00                              	add byte ptr [rax], al
0x538:    0f 00 00                           	sldt word ptr [rax]
0x53b:    00 00                              	add byte ptr [rax], al
0x53d:    00 00                              	add byte ptr [rax], al
0x53f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x543:    48 8d 4d f0                        	lea rcx, [rbp - 0x10]
0x547:    4c 39 f9                           	cmp rcx, r15
0x54a:    72 4c                              	jb 0x598 <function_530+0x68>
0x54c:    4c 8d 60 28                        	lea r12, [rax + 0x28]
0x550:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x557:    72 48                              	jb 0x5a1 <function_530+0x71>
0x559:    48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x561:    48 89 5d f8                        	mov qword ptr [rbp - 8], rbx
0x565:    48 8b 53 10                        	mov rdx, qword ptr [rbx + 0x10]
0x569:    48 8b 73 18                        	mov rsi, qword ptr [rbx + 0x18]
0x56d:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x571:    48 8b 7b 28                        	mov rdi, qword ptr [rbx + 0x28]
0x575:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x57d:    48 89 50 18                        	mov qword ptr [rax + 0x18], rdx
0x581:    48 89 78 20                        	mov qword ptr [rax + 0x20], rdi
0x585:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x589:    48 8d 70 08                        	lea rsi, [rax + 8]
0x58d:    48 89 cd                           	mov rbp, rcx
0x590:    48 89 d3                           	mov rbx, rdx
0x593:    e9 f6 46 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x598:    49 89 c4                           	mov r12, rax
0x59b:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x59f:    ff e0                              	jmp rax
0x5a1:    49 c7 85 88 03 00 00 28 00 00 00   	mov qword ptr [r13 + 0x388], 0x28
0x5ac:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x5b0:    ff e0                              	jmp rax
; data inside code section at 0x5b2 -- 0x5c0
0x5b2:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: function_5c0 at 0x5c0 -- 0x649
0x5c0:    05 00 00 00 00                     	add eax, 0
0x5c5:    00 00                              	add byte ptr [rax], al
0x5c7:    00 0f                              	add byte ptr [rdi], cl
0x5c9:    00 00                              	add byte ptr [rax], al
0x5cb:    00 00                              	add byte ptr [rax], al
0x5cd:    00 00                              	add byte ptr [rax], al
0x5cf:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x5d3:    48 89 e9                           	mov rcx, rbp
0x5d6:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x5da:    4c 39 fd                           	cmp rbp, r15
0x5dd:    72 51                              	jb 0x630 <function_5c0+0x70>
0x5df:    4c 8d 60 30                        	lea r12, [rax + 0x30]
0x5e3:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x5ea:    72 49                              	jb 0x635 <function_5c0+0x75>
0x5ec:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x5f4:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x5f8:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x5fc:    48 8b 53 18                        	mov rdx, qword ptr [rbx + 0x18]
0x600:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x604:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x608:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x60c:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x614:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x618:    48 89 50 20                        	mov qword ptr [rax + 0x20], rdx
0x61c:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x620:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x624:    48 8d 70 08                        	lea rsi, [rax + 8]
0x628:    48 89 cb                           	mov rbx, rcx
0x62b:    e9 5e 46 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x630:    49 89 c4                           	mov r12, rax
0x633:    eb 0b                              	jmp 0x640 <function_5c0+0x80>
0x635:    49 c7 85 88 03 00 00 30 00 00 00   	mov qword ptr [r13 + 0x388], 0x30
0x640:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x644:    48 89 cd                           	mov rbp, rcx
0x647:    ff e0                              	jmp rax
; data inside code section at 0x649 -- 0x651
0x649:    0f 1f 80 00 00 00 00 06                            |........        |
; function: function_651 at 0x651 -- 0x6e1
0x651:    00 00                              	add byte ptr [rax], al
0x653:    00 00                              	add byte ptr [rax], al
0x655:    00 00                              	add byte ptr [rax], al
0x657:    00 0f                              	add byte ptr [rdi], cl
0x659:    00 00                              	add byte ptr [rax], al
0x65b:    00 00                              	add byte ptr [rax], al
0x65d:    00 00                              	add byte ptr [rax], al
0x65f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x663:    48 89 e9                           	mov rcx, rbp
0x666:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x66a:    4c 39 fd                           	cmp rbp, r15
0x66d:    72 59                              	jb 0x6c8 <function_651+0x77>
0x66f:    4c 8d 60 38                        	lea r12, [rax + 0x38]
0x673:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x67a:    72 51                              	jb 0x6cd <function_651+0x7c>
0x67c:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x684:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x688:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x68c:    48 8b 53 18                        	mov rdx, qword ptr [rbx + 0x18]
0x690:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x694:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x698:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x69c:    48 8b 5b 38                        	mov rbx, qword ptr [rbx + 0x38]
0x6a0:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x6a8:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x6ac:    48 89 50 20                        	mov qword ptr [rax + 0x20], rdx
0x6b0:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x6b4:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x6b8:    48 89 58 38                        	mov qword ptr [rax + 0x38], rbx
0x6bc:    48 8d 70 08                        	lea rsi, [rax + 8]
0x6c0:    48 89 cb                           	mov rbx, rcx
0x6c3:    e9 c6 45 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x6c8:    49 89 c4                           	mov r12, rax
0x6cb:    eb 0b                              	jmp 0x6d8 <function_651+0x87>
0x6cd:    49 c7 85 88 03 00 00 38 00 00 00   	mov qword ptr [r13 + 0x388], 0x38
0x6d8:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x6dc:    48 89 cd                           	mov rbp, rcx
0x6df:    ff e0                              	jmp rax
; data inside code section at 0x6e1 -- 0x6f1
0x6e1:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 07   |ff...........@..|
; function: function_6f1 at 0x6f1 -- 0x789
0x6f1:    00 00                              	add byte ptr [rax], al
0x6f3:    00 00                              	add byte ptr [rax], al
0x6f5:    00 00                              	add byte ptr [rax], al
0x6f7:    00 0f                              	add byte ptr [rdi], cl
0x6f9:    00 00                              	add byte ptr [rax], al
0x6fb:    00 00                              	add byte ptr [rax], al
0x6fd:    00 00                              	add byte ptr [rax], al
0x6ff:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x703:    48 89 e9                           	mov rcx, rbp
0x706:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x70a:    4c 39 fd                           	cmp rbp, r15
0x70d:    72 61                              	jb 0x770 <function_6f1+0x7f>
0x70f:    4c 8d 60 40                        	lea r12, [rax + 0x40]
0x713:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x71a:    72 59                              	jb 0x775 <function_6f1+0x84>
0x71c:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x724:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x728:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x72c:    4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x730:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x734:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x738:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x73c:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x740:    48 8b 5b 40                        	mov rbx, qword ptr [rbx + 0x40]
0x744:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x74c:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x750:    4c 89 40 20                        	mov qword ptr [rax + 0x20], r8
0x754:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x758:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x75c:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0x760:    48 89 58 40                        	mov qword ptr [rax + 0x40], rbx
0x764:    48 8d 70 08                        	lea rsi, [rax + 8]
0x768:    48 89 cb                           	mov rbx, rcx
0x76b:    e9 1e 45 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x770:    49 89 c4                           	mov r12, rax
0x773:    eb 0b                              	jmp 0x780 <function_6f1+0x8f>
0x775:    49 c7 85 88 03 00 00 40 00 00 00   	mov qword ptr [r13 + 0x388], 0x40
0x780:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x784:    48 89 cd                           	mov rbp, rcx
0x787:    ff e0                              	jmp rax
; data inside code section at 0x789 -- 0x790
0x789:    0f 1f 80 00 00 00 00                               |.......         |
; function: function_790 at 0x790 -- 0x831
0x790:    08 00                              	or byte ptr [rax], al
0x792:    00 00                              	add byte ptr [rax], al
0x794:    00 00                              	add byte ptr [rax], al
0x796:    00 00                              	add byte ptr [rax], al
0x798:    0f 00 00                           	sldt word ptr [rax]
0x79b:    00 00                              	add byte ptr [rax], al
0x79d:    00 00                              	add byte ptr [rax], al
0x79f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x7a3:    48 89 e9                           	mov rcx, rbp
0x7a6:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x7aa:    4c 39 fd                           	cmp rbp, r15
0x7ad:    72 69                              	jb 0x818 <function_790+0x88>
0x7af:    4c 8d 60 48                        	lea r12, [rax + 0x48]
0x7b3:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x7ba:    72 61                              	jb 0x81d <function_790+0x8d>
0x7bc:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x7c4:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x7c8:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x7cc:    4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x7d0:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x7d4:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x7d8:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x7dc:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x7e0:    4c 8b 4b 40                        	mov r9, qword ptr [rbx + 0x40]
0x7e4:    48 8b 5b 48                        	mov rbx, qword ptr [rbx + 0x48]
0x7e8:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x7f0:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x7f4:    4c 89 40 20                        	mov qword ptr [rax + 0x20], r8
0x7f8:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x7fc:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x800:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0x804:    4c 89 48 40                        	mov qword ptr [rax + 0x40], r9
0x808:    48 89 58 48                        	mov qword ptr [rax + 0x48], rbx
0x80c:    48 8d 70 08                        	lea rsi, [rax + 8]
0x810:    48 89 cb                           	mov rbx, rcx
0x813:    e9 76 44 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x818:    49 89 c4                           	mov r12, rax
0x81b:    eb 0b                              	jmp 0x828 <function_790+0x98>
0x81d:    49 c7 85 88 03 00 00 48 00 00 00   	mov qword ptr [r13 + 0x388], 0x48
0x828:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x82c:    48 89 cd                           	mov rbp, rcx
0x82f:    ff e0                              	jmp rax
; data inside code section at 0x831 -- 0x840
0x831:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_840 at 0x840 -- 0x8e9
0x840:    09 00                              	or dword ptr [rax], eax
0x842:    00 00                              	add byte ptr [rax], al
0x844:    00 00                              	add byte ptr [rax], al
0x846:    00 00                              	add byte ptr [rax], al
0x848:    0f 00 00                           	sldt word ptr [rax]
0x84b:    00 00                              	add byte ptr [rax], al
0x84d:    00 00                              	add byte ptr [rax], al
0x84f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x853:    48 89 e9                           	mov rcx, rbp
0x856:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x85a:    4c 39 fd                           	cmp rbp, r15
0x85d:    72 71                              	jb 0x8d0 <function_840+0x90>
0x85f:    4c 8d 60 50                        	lea r12, [rax + 0x50]
0x863:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x86a:    72 69                              	jb 0x8d5 <function_840+0x95>
0x86c:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x874:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x878:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x87c:    4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x880:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x884:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x888:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x88c:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x890:    4c 8b 4b 40                        	mov r9, qword ptr [rbx + 0x40]
0x894:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0x898:    48 8b 5b 50                        	mov rbx, qword ptr [rbx + 0x50]
0x89c:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x8a4:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x8a8:    4c 89 40 20                        	mov qword ptr [rax + 0x20], r8
0x8ac:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x8b0:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x8b4:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0x8b8:    4c 89 48 40                        	mov qword ptr [rax + 0x40], r9
0x8bc:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0x8c0:    48 89 58 50                        	mov qword ptr [rax + 0x50], rbx
0x8c4:    48 8d 70 08                        	lea rsi, [rax + 8]
0x8c8:    48 89 cb                           	mov rbx, rcx
0x8cb:    e9 be 43 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x8d0:    49 89 c4                           	mov r12, rax
0x8d3:    eb 0b                              	jmp 0x8e0 <function_840+0xa0>
0x8d5:    49 c7 85 88 03 00 00 50 00 00 00   	mov qword ptr [r13 + 0x388], 0x50
0x8e0:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x8e4:    48 89 cd                           	mov rbp, rcx
0x8e7:    ff e0                              	jmp rax
; data inside code section at 0x8e9 -- 0x8f0
0x8e9:    0f 1f 80 00 00 00 00                               |.......         |
; function: function_8f0 at 0x8f0 -- 0x9a1
0x8f0:    0a 00                              	or al, byte ptr [rax]
0x8f2:    00 00                              	add byte ptr [rax], al
0x8f4:    00 00                              	add byte ptr [rax], al
0x8f6:    00 00                              	add byte ptr [rax], al
0x8f8:    0f 00 00                           	sldt word ptr [rax]
0x8fb:    00 00                              	add byte ptr [rax], al
0x8fd:    00 00                              	add byte ptr [rax], al
0x8ff:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x903:    48 89 e9                           	mov rcx, rbp
0x906:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x90a:    4c 39 fd                           	cmp rbp, r15
0x90d:    72 79                              	jb 0x988 <function_8f0+0x98>
0x90f:    4c 8d 60 58                        	lea r12, [rax + 0x58]
0x913:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x91a:    72 71                              	jb 0x98d <function_8f0+0x9d>
0x91c:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x924:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x928:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x92c:    4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x930:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0x934:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x938:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x93c:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x940:    4c 8b 4b 40                        	mov r9, qword ptr [rbx + 0x40]
0x944:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0x948:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0x94c:    48 8b 5b 58                        	mov rbx, qword ptr [rbx + 0x58]
0x950:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x958:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x95c:    4c 89 40 20                        	mov qword ptr [rax + 0x20], r8
0x960:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x964:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x968:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0x96c:    4c 89 48 40                        	mov qword ptr [rax + 0x40], r9
0x970:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0x974:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0x978:    48 89 58 58                        	mov qword ptr [rax + 0x58], rbx
0x97c:    48 8d 70 08                        	lea rsi, [rax + 8]
0x980:    48 89 cb                           	mov rbx, rcx
0x983:    e9 06 43 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x988:    49 89 c4                           	mov r12, rax
0x98b:    eb 0b                              	jmp 0x998 <function_8f0+0xa8>
0x98d:    49 c7 85 88 03 00 00 58 00 00 00   	mov qword ptr [r13 + 0x388], 0x58
0x998:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x99c:    48 89 cd                           	mov rbp, rcx
0x99f:    ff e0                              	jmp rax
; data inside code section at 0x9a1 -- 0x9b0
0x9a1:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_9b0 at 0x9b0 -- 0xa7b
0x9b0:    0b 00                              	or eax, dword ptr [rax]
0x9b2:    00 00                              	add byte ptr [rax], al
0x9b4:    00 00                              	add byte ptr [rax], al
0x9b6:    00 00                              	add byte ptr [rax], al
0x9b8:    0f 00 00                           	sldt word ptr [rax]
0x9bb:    00 00                              	add byte ptr [rax], al
0x9bd:    00 00                              	add byte ptr [rax], al
0x9bf:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x9c3:    48 89 e9                           	mov rcx, rbp
0x9c6:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x9ca:    4c 39 fd                           	cmp rbp, r15
0x9cd:    0f 82 8f 00 00 00                  	jb 0xa62 <function_9b0+0xb2>
0x9d3:    4c 8d 60 60                        	lea r12, [rax + 0x60]
0x9d7:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x9de:    0f 82 83 00 00 00                  	jb 0xa67 <function_9b0+0xb7>
0x9e4:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x9ec:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x9f0:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x9f4:    4c 89 7c 24 f8                     	mov qword ptr [rsp - 8], r15
0x9f9:    4c 8b 7b 18                        	mov r15, qword ptr [rbx + 0x18]
0x9fd:    4c 8b 73 20                        	mov r14, qword ptr [rbx + 0x20]
0xa01:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xa05:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xa09:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0xa0d:    4c 8b 4b 40                        	mov r9, qword ptr [rbx + 0x40]
0xa11:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xa15:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xa19:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xa1d:    48 8b 5b 60                        	mov rbx, qword ptr [rbx + 0x60]
0xa21:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xa29:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xa2d:    4c 89 78 20                        	mov qword ptr [rax + 0x20], r15
0xa31:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xa35:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xa39:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0xa3d:    4c 89 48 40                        	mov qword ptr [rax + 0x40], r9
0xa41:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xa45:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xa49:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xa4d:    48 89 58 60                        	mov qword ptr [rax + 0x60], rbx
0xa51:    48 8d 70 08                        	lea rsi, [rax + 8]
0xa55:    4c 8b 7c 24 f8                     	mov r15, qword ptr [rsp - 8]
0xa5a:    48 89 cb                           	mov rbx, rcx
0xa5d:    e9 2c 42 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xa62:    49 89 c4                           	mov r12, rax
0xa65:    eb 0b                              	jmp 0xa72 <function_9b0+0xc2>
0xa67:    49 c7 85 88 03 00 00 60 00 00 00   	mov qword ptr [r13 + 0x388], 0x60
0xa72:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xa76:    48 89 cd                           	mov rbp, rcx
0xa79:    ff e0                              	jmp rax
; data inside code section at 0xa7b -- 0xa80
0xa7b:    0f 1f 44 00 00                                     |..D..           |
; function: function_a80 at 0xa80 -- 0xb5d
0xa80:    0c 00                              	or al, 0
0xa82:    00 00                              	add byte ptr [rax], al
0xa84:    00 00                              	add byte ptr [rax], al
0xa86:    00 00                              	add byte ptr [rax], al
0xa88:    0f 00 00                           	sldt word ptr [rax]
0xa8b:    00 00                              	add byte ptr [rax], al
0xa8d:    00 00                              	add byte ptr [rax], al
0xa8f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xa93:    48 89 e9                           	mov rcx, rbp
0xa96:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0xa9a:    4c 39 fd                           	cmp rbp, r15
0xa9d:    0f 82 a1 00 00 00                  	jb 0xb44 <function_a80+0xc4>
0xaa3:    4c 8d 60 68                        	lea r12, [rax + 0x68]
0xaa7:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0xaae:    0f 82 95 00 00 00                  	jb 0xb49 <function_a80+0xc9>
0xab4:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0xabc:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0xac0:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0xac4:    4c 89 7c 24 f8                     	mov qword ptr [rsp - 8], r15
0xac9:    4c 8b 7b 18                        	mov r15, qword ptr [rbx + 0x18]
0xacd:    48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0xad1:    48 89 54 24 f0                     	mov qword ptr [rsp - 0x10], rdx
0xad6:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xada:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xade:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0xae2:    4c 8b 73 40                        	mov r14, qword ptr [rbx + 0x40]
0xae6:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xaea:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xaee:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xaf2:    4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0xaf6:    48 8b 5b 68                        	mov rbx, qword ptr [rbx + 0x68]
0xafa:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xb02:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xb06:    4c 89 78 20                        	mov qword ptr [rax + 0x20], r15
0xb0a:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xb0e:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xb12:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0xb16:    4c 89 70 40                        	mov qword ptr [rax + 0x40], r14
0xb1a:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xb1e:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xb22:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xb26:    4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0xb2a:    48 89 58 68                        	mov qword ptr [rax + 0x68], rbx
0xb2e:    48 8d 70 08                        	lea rsi, [rax + 8]
0xb32:    4c 8b 74 24 f0                     	mov r14, qword ptr [rsp - 0x10]
0xb37:    4c 8b 7c 24 f8                     	mov r15, qword ptr [rsp - 8]
0xb3c:    48 89 cb                           	mov rbx, rcx
0xb3f:    e9 4a 41 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xb44:    49 89 c4                           	mov r12, rax
0xb47:    eb 0b                              	jmp 0xb54 <function_a80+0xd4>
0xb49:    49 c7 85 88 03 00 00 68 00 00 00   	mov qword ptr [r13 + 0x388], 0x68
0xb54:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xb58:    48 89 cd                           	mov rbp, rcx
0xb5b:    ff e0                              	jmp rax
; data inside code section at 0xb5d -- 0xb60
0xb5d:    0f 1f 00                                           |...             |
; function: function_b60 at 0xb60 -- 0xc4f
0xb60:    0d 00 00 00 00                     	or eax, 0
0xb65:    00 00                              	add byte ptr [rax], al
0xb67:    00 0f                              	add byte ptr [rdi], cl
0xb69:    00 00                              	add byte ptr [rax], al
0xb6b:    00 00                              	add byte ptr [rax], al
0xb6d:    00 00                              	add byte ptr [rax], al
0xb6f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xb73:    48 89 e9                           	mov rcx, rbp
0xb76:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0xb7a:    4c 39 fd                           	cmp rbp, r15
0xb7d:    0f 82 b3 00 00 00                  	jb 0xc36 <function_b60+0xd6>
0xb83:    4c 8d 60 70                        	lea r12, [rax + 0x70]
0xb87:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0xb8e:    0f 82 a7 00 00 00                  	jb 0xc3b <function_b60+0xdb>
0xb94:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0xb9c:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0xba0:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0xba4:    4c 89 7c 24 f8                     	mov qword ptr [rsp - 8], r15
0xba9:    4c 89 6c 24 e8                     	mov qword ptr [rsp - 0x18], r13
0xbae:    4c 8b 6b 18                        	mov r13, qword ptr [rbx + 0x18]
0xbb2:    48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0xbb6:    48 89 54 24 f0                     	mov qword ptr [rsp - 0x10], rdx
0xbbb:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xbbf:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xbc3:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0xbc7:    4c 8b 7b 40                        	mov r15, qword ptr [rbx + 0x40]
0xbcb:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xbcf:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xbd3:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xbd7:    4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0xbdb:    4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0xbdf:    48 8b 5b 70                        	mov rbx, qword ptr [rbx + 0x70]
0xbe3:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xbeb:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xbef:    4c 89 68 20                        	mov qword ptr [rax + 0x20], r13
0xbf3:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xbf7:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xbfb:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0xbff:    4c 89 78 40                        	mov qword ptr [rax + 0x40], r15
0xc03:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xc07:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xc0b:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xc0f:    4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0xc13:    4c 89 70 68                        	mov qword ptr [rax + 0x68], r14
0xc17:    48 89 58 70                        	mov qword ptr [rax + 0x70], rbx
0xc1b:    48 8d 70 08                        	lea rsi, [rax + 8]
0xc1f:    4c 8b 6c 24 e8                     	mov r13, qword ptr [rsp - 0x18]
0xc24:    4c 8b 74 24 f0                     	mov r14, qword ptr [rsp - 0x10]
0xc29:    4c 8b 7c 24 f8                     	mov r15, qword ptr [rsp - 8]
0xc2e:    48 89 cb                           	mov rbx, rcx
0xc31:    e9 58 40 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xc36:    49 89 c4                           	mov r12, rax
0xc39:    eb 0b                              	jmp 0xc46 <function_b60+0xe6>
0xc3b:    49 c7 85 88 03 00 00 70 00 00 00   	mov qword ptr [r13 + 0x388], 0x70
0xc46:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xc4a:    48 89 cd                           	mov rbp, rcx
0xc4d:    ff e0                              	jmp rax
; data inside code section at 0xc4f -- 0xc51
0xc4f:    90 0e                                              |..              |
; function: function_c51 at 0xc51 -- 0xd51
0xc51:    00 00                              	add byte ptr [rax], al
0xc53:    00 00                              	add byte ptr [rax], al
0xc55:    00 00                              	add byte ptr [rax], al
0xc57:    00 0f                              	add byte ptr [rdi], cl
0xc59:    00 00                              	add byte ptr [rax], al
0xc5b:    00 00                              	add byte ptr [rax], al
0xc5d:    00 00                              	add byte ptr [rax], al
0xc5f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xc63:    48 89 e9                           	mov rcx, rbp
0xc66:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0xc6a:    4c 39 fd                           	cmp rbp, r15
0xc6d:    0f 82 c5 00 00 00                  	jb 0xd38 <function_c51+0xe7>
0xc73:    4c 8d 60 78                        	lea r12, [rax + 0x78]
0xc77:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0xc7e:    0f 82 b9 00 00 00                  	jb 0xd3d <function_c51+0xec>
0xc84:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0xc8c:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0xc90:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0xc94:    4c 89 6c 24 f0                     	mov qword ptr [rsp - 0x10], r13
0xc99:    4c 8b 6b 18                        	mov r13, qword ptr [rbx + 0x18]
0xc9d:    48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0xca1:    48 89 54 24 f8                     	mov qword ptr [rsp - 8], rdx
0xca6:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xcaa:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xcae:    48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0xcb2:    4c 89 64 24 e8                     	mov qword ptr [rsp - 0x18], r12
0xcb7:    4c 8b 63 40                        	mov r12, qword ptr [rbx + 0x40]
0xcbb:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xcbf:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xcc3:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xcc7:    4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0xccb:    4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0xccf:    4c 89 7c 24 e0                     	mov qword ptr [rsp - 0x20], r15
0xcd4:    4c 8b 7b 70                        	mov r15, qword ptr [rbx + 0x70]
0xcd8:    48 8b 5b 78                        	mov rbx, qword ptr [rbx + 0x78]
0xcdc:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xce4:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xce8:    4c 89 68 20                        	mov qword ptr [rax + 0x20], r13
0xcec:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xcf0:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xcf4:    48 89 50 38                        	mov qword ptr [rax + 0x38], rdx
0xcf8:    4c 89 60 40                        	mov qword ptr [rax + 0x40], r12
0xcfc:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xd00:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xd04:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xd08:    4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0xd0c:    4c 89 70 68                        	mov qword ptr [rax + 0x68], r14
0xd10:    4c 89 78 70                        	mov qword ptr [rax + 0x70], r15
0xd14:    48 89 58 78                        	mov qword ptr [rax + 0x78], rbx
0xd18:    48 8d 70 08                        	lea rsi, [rax + 8]
0xd1c:    4c 8b 6c 24 f0                     	mov r13, qword ptr [rsp - 0x10]
0xd21:    4c 8b 64 24 e8                     	mov r12, qword ptr [rsp - 0x18]
0xd26:    4c 8b 74 24 f8                     	mov r14, qword ptr [rsp - 8]
0xd2b:    4c 8b 7c 24 e0                     	mov r15, qword ptr [rsp - 0x20]
0xd30:    48 89 cb                           	mov rbx, rcx
0xd33:    e9 56 3f 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xd38:    49 89 c4                           	mov r12, rax
0xd3b:    eb 0b                              	jmp 0xd48 <function_c51+0xf7>
0xd3d:    49 c7 85 88 03 00 00 78 00 00 00   	mov qword ptr [r13 + 0x388], 0x78
0xd48:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xd4c:    48 89 cd                           	mov rbp, rcx
0xd4f:    ff e0                              	jmp rax
; data inside code section at 0xd51 -- 0xd60
0xd51:    66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_d60 at 0xd60 -- 0xe83
0xd60:    0f 00 00                           	sldt word ptr [rax]
0xd63:    00 00                              	add byte ptr [rax], al
0xd65:    00 00                              	add byte ptr [rax], al
0xd67:    00 0f                              	add byte ptr [rdi], cl
0xd69:    00 00                              	add byte ptr [rax], al
0xd6b:    00 00                              	add byte ptr [rax], al
0xd6d:    00 00                              	add byte ptr [rax], al
0xd6f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xd73:    48 89 e9                           	mov rcx, rbp
0xd76:    48 8d 55 f0                        	lea rdx, [rbp - 0x10]
0xd7a:    4c 39 fa                           	cmp rdx, r15
0xd7d:    0f 82 e7 00 00 00                  	jb 0xe6a <function_d60+0x10a>
0xd83:    49 89 c4                           	mov r12, rax
0xd86:    49 83 ec 80                        	sub r12, -0x80
0xd8a:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0xd91:    0f 82 d8 00 00 00                  	jb 0xe6f <function_d60+0x10f>
0xd97:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0xd9f:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0xda3:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0xda7:    48 89 4c 24 d0                     	mov qword ptr [rsp - 0x30], rcx
0xdac:    48 89 54 24 f0                     	mov qword ptr [rsp - 0x10], rdx
0xdb1:    48 8b 53 18                        	mov rdx, qword ptr [rbx + 0x18]
0xdb5:    48 89 54 24 d8                     	mov qword ptr [rsp - 0x28], rdx
0xdba:    48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0xdbe:    48 89 54 24 f8                     	mov qword ptr [rsp - 8], rdx
0xdc3:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xdc7:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xdcb:    48 8b 6b 38                        	mov rbp, qword ptr [rbx + 0x38]
0xdcf:    48 8b 53 40                        	mov rdx, qword ptr [rbx + 0x40]
0xdd3:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xdd7:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xddb:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xddf:    4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0xde3:    4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0xde7:    4c 89 7c 24 e8                     	mov qword ptr [rsp - 0x18], r15
0xdec:    4c 8b 7b 70                        	mov r15, qword ptr [rbx + 0x70]
0xdf0:    4c 89 6c 24 e0                     	mov qword ptr [rsp - 0x20], r13
0xdf5:    4c 8b 6b 78                        	mov r13, qword ptr [rbx + 0x78]
0xdf9:    48 8b 9b 80 00 00 00               	mov rbx, qword ptr [rbx + 0x80]
0xe00:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xe08:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xe0c:    48 8b 4c 24 d8                     	mov rcx, qword ptr [rsp - 0x28]
0xe11:    48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0xe15:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xe19:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xe1d:    48 89 68 38                        	mov qword ptr [rax + 0x38], rbp
0xe21:    48 89 50 40                        	mov qword ptr [rax + 0x40], rdx
0xe25:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xe29:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xe2d:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xe31:    4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0xe35:    4c 89 70 68                        	mov qword ptr [rax + 0x68], r14
0xe39:    4c 89 78 70                        	mov qword ptr [rax + 0x70], r15
0xe3d:    4c 89 68 78                        	mov qword ptr [rax + 0x78], r13
0xe41:    48 89 98 80 00 00 00               	mov qword ptr [rax + 0x80], rbx
0xe48:    48 8d 70 08                        	lea rsi, [rax + 8]
0xe4c:    4c 8b 6c 24 e0                     	mov r13, qword ptr [rsp - 0x20]
0xe51:    48 8b 6c 24 f0                     	mov rbp, qword ptr [rsp - 0x10]
0xe56:    4c 8b 74 24 f8                     	mov r14, qword ptr [rsp - 8]
0xe5b:    4c 8b 7c 24 e8                     	mov r15, qword ptr [rsp - 0x18]
0xe60:    48 8b 5c 24 d0                     	mov rbx, qword ptr [rsp - 0x30]
0xe65:    e9 24 3e 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xe6a:    49 89 c4                           	mov r12, rax
0xe6d:    eb 0b                              	jmp 0xe7a <function_d60+0x11a>
0xe6f:    49 c7 85 88 03 00 00 80 00 00 00   	mov qword ptr [r13 + 0x388], 0x80
0xe7a:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xe7e:    48 89 cd                           	mov rbp, rcx
0xe81:    ff e0                              	jmp rax
; data inside code section at 0xe83 -- 0xe90
0xe83:    66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: function_e90 at 0xe90 -- 0xfcb
0xe90:    10 00                              	adc byte ptr [rax], al
0xe92:    00 00                              	add byte ptr [rax], al
0xe94:    00 00                              	add byte ptr [rax], al
0xe96:    00 00                              	add byte ptr [rax], al
0xe98:    0f 00 00                           	sldt word ptr [rax]
0xe9b:    00 00                              	add byte ptr [rax], al
0xe9d:    00 00                              	add byte ptr [rax], al
0xe9f:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xea3:    48 89 e9                           	mov rcx, rbp
0xea6:    48 8d 55 f0                        	lea rdx, [rbp - 0x10]
0xeaa:    4c 39 fa                           	cmp rdx, r15
0xead:    0f 82 ff 00 00 00                  	jb 0xfb2 <function_e90+0x122>
0xeb3:    4c 8d a0 88 00 00 00               	lea r12, [rax + 0x88]
0xeba:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0xec1:    0f 82 f0 00 00 00                  	jb 0xfb7 <function_e90+0x127>
0xec7:    48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0xecf:    48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0xed3:    48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0xed7:    48 89 4c 24 c8                     	mov qword ptr [rsp - 0x38], rcx
0xedc:    48 89 54 24 f0                     	mov qword ptr [rsp - 0x10], rdx
0xee1:    48 8b 53 18                        	mov rdx, qword ptr [rbx + 0x18]
0xee5:    48 89 54 24 d0                     	mov qword ptr [rsp - 0x30], rdx
0xeea:    48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0xeee:    48 89 54 24 f8                     	mov qword ptr [rsp - 8], rdx
0xef3:    48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0xef7:    48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0xefb:    48 8b 6b 38                        	mov rbp, qword ptr [rbx + 0x38]
0xeff:    48 8b 53 40                        	mov rdx, qword ptr [rbx + 0x40]
0xf03:    4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0xf07:    4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0xf0b:    4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0xf0f:    4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0xf13:    4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0xf17:    4c 89 7c 24 e8                     	mov qword ptr [rsp - 0x18], r15
0xf1c:    4c 8b 7b 70                        	mov r15, qword ptr [rbx + 0x70]
0xf20:    4c 89 64 24 e0                     	mov qword ptr [rsp - 0x20], r12
0xf25:    4c 8b 63 78                        	mov r12, qword ptr [rbx + 0x78]
0xf29:    4c 89 6c 24 d8                     	mov qword ptr [rsp - 0x28], r13
0xf2e:    4c 8b ab 80 00 00 00               	mov r13, qword ptr [rbx + 0x80]
0xf35:    48 8b 9b 88 00 00 00               	mov rbx, qword ptr [rbx + 0x88]
0xf3c:    48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0xf44:    48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0xf48:    48 8b 4c 24 d0                     	mov rcx, qword ptr [rsp - 0x30]
0xf4d:    48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0xf51:    48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0xf55:    48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0xf59:    48 89 68 38                        	mov qword ptr [rax + 0x38], rbp
0xf5d:    48 89 50 40                        	mov qword ptr [rax + 0x40], rdx
0xf61:    4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0xf65:    4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0xf69:    4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0xf6d:    4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0xf71:    4c 89 70 68                        	mov qword ptr [rax + 0x68], r14
0xf75:    4c 89 78 70                        	mov qword ptr [rax + 0x70], r15
0xf79:    4c 89 60 78                        	mov qword ptr [rax + 0x78], r12
0xf7d:    4c 89 a8 80 00 00 00               	mov qword ptr [rax + 0x80], r13
0xf84:    48 89 98 88 00 00 00               	mov qword ptr [rax + 0x88], rbx
0xf8b:    48 8d 70 08                        	lea rsi, [rax + 8]
0xf8f:    4c 8b 6c 24 d8                     	mov r13, qword ptr [rsp - 0x28]
0xf94:    48 8b 6c 24 f0                     	mov rbp, qword ptr [rsp - 0x10]
0xf99:    4c 8b 64 24 e0                     	mov r12, qword ptr [rsp - 0x20]
0xf9e:    4c 8b 74 24 f8                     	mov r14, qword ptr [rsp - 8]
0xfa3:    4c 8b 7c 24 e8                     	mov r15, qword ptr [rsp - 0x18]
0xfa8:    48 8b 5c 24 c8                     	mov rbx, qword ptr [rsp - 0x38]
0xfad:    e9 dc 3c 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0xfb2:    49 89 c4                           	mov r12, rax
0xfb5:    eb 0b                              	jmp 0xfc2 <function_e90+0x132>
0xfb7:    49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0xfc2:    49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0xfc6:    48 89 cd                           	mov rbp, rcx
0xfc9:    ff e0                              	jmp rax
; data inside code section at 0xfcb -- 0xfd0
0xfcb:    0f 1f 44 00 00                                     |..D..           |
; function: function_fd0 at 0xfd0 -- 0x1123
0xfd0:    11 00                              	adc dword ptr [rax], eax
0xfd2:    00 00                              	add byte ptr [rax], al
0xfd4:    00 00                              	add byte ptr [rax], al
0xfd6:    00 00                              	add byte ptr [rax], al
0xfd8:    0f 00 00                           	sldt word ptr [rax]
0xfdb:    00 00                              	add byte ptr [rax], al
0xfdd:    00 00                              	add byte ptr [rax], al
0xfdf:    00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0xfe3:    48 89 e9                           	mov rcx, rbp
0xfe6:    48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0xfea:    4c 39 fd                           	cmp rbp, r15
0xfed:    0f 82 17 01 00 00                  	jb 0x110a <function_fd0+0x13a>
0xff3:    4c 8d a0 90 00 00 00               	lea r12, [rax + 0x90]
0xffa:    4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1001:   0f 82 08 01 00 00                  	jb 0x110f <function_fd0+0x13f>
0x1007:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x100f:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x1013:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x1017:   48 89 4c 24 c8                     	mov qword ptr [rsp - 0x38], rcx
0x101c:   48 8b 53 18                        	mov rdx, qword ptr [rbx + 0x18]
0x1020:   48 89 54 24 d0                     	mov qword ptr [rsp - 0x30], rdx
0x1025:   48 8b 53 20                        	mov rdx, qword ptr [rbx + 0x20]
0x1029:   48 89 54 24 f8                     	mov qword ptr [rsp - 8], rdx
0x102e:   48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x1032:   48 8b 7b 30                        	mov rdi, qword ptr [rbx + 0x30]
0x1036:   48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x103a:   48 89 54 24 c0                     	mov qword ptr [rsp - 0x40], rdx
0x103f:   48 8b 53 40                        	mov rdx, qword ptr [rbx + 0x40]
0x1043:   4c 8b 53 48                        	mov r10, qword ptr [rbx + 0x48]
0x1047:   4c 8b 5b 50                        	mov r11, qword ptr [rbx + 0x50]
0x104b:   4c 8b 43 58                        	mov r8, qword ptr [rbx + 0x58]
0x104f:   4c 8b 4b 60                        	mov r9, qword ptr [rbx + 0x60]
0x1053:   4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0x1057:   4c 89 7c 24 f0                     	mov qword ptr [rsp - 0x10], r15
0x105c:   4c 8b 7b 70                        	mov r15, qword ptr [rbx + 0x70]
0x1060:   4c 89 64 24 e8                     	mov qword ptr [rsp - 0x18], r12
0x1065:   4c 8b 63 78                        	mov r12, qword ptr [rbx + 0x78]
0x1069:   4c 89 6c 24 e0                     	mov qword ptr [rsp - 0x20], r13
0x106e:   4c 8b ab 80 00 00 00               	mov r13, qword ptr [rbx + 0x80]
0x1075:   48 89 6c 24 d8                     	mov qword ptr [rsp - 0x28], rbp
0x107a:   48 8b ab 88 00 00 00               	mov rbp, qword ptr [rbx + 0x88]
0x1081:   48 8b 9b 90 00 00 00               	mov rbx, qword ptr [rbx + 0x90]
0x1088:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1090:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x1094:   48 8b 4c 24 d0                     	mov rcx, qword ptr [rsp - 0x30]
0x1099:   48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0x109d:   48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x10a1:   48 89 78 30                        	mov qword ptr [rax + 0x30], rdi
0x10a5:   48 8b 4c 24 c0                     	mov rcx, qword ptr [rsp - 0x40]
0x10aa:   48 89 48 38                        	mov qword ptr [rax + 0x38], rcx
0x10ae:   48 89 50 40                        	mov qword ptr [rax + 0x40], rdx
0x10b2:   4c 89 50 48                        	mov qword ptr [rax + 0x48], r10
0x10b6:   4c 89 58 50                        	mov qword ptr [rax + 0x50], r11
0x10ba:   4c 89 40 58                        	mov qword ptr [rax + 0x58], r8
0x10be:   4c 89 48 60                        	mov qword ptr [rax + 0x60], r9
0x10c2:   4c 89 70 68                        	mov qword ptr [rax + 0x68], r14
0x10c6:   4c 89 78 70                        	mov qword ptr [rax + 0x70], r15
0x10ca:   4c 89 60 78                        	mov qword ptr [rax + 0x78], r12
0x10ce:   4c 89 a8 80 00 00 00               	mov qword ptr [rax + 0x80], r13
0x10d5:   48 89 a8 88 00 00 00               	mov qword ptr [rax + 0x88], rbp
0x10dc:   48 89 98 90 00 00 00               	mov qword ptr [rax + 0x90], rbx
0x10e3:   48 8d 70 08                        	lea rsi, [rax + 8]
0x10e7:   4c 8b 6c 24 e0                     	mov r13, qword ptr [rsp - 0x20]
0x10ec:   48 8b 6c 24 d8                     	mov rbp, qword ptr [rsp - 0x28]
0x10f1:   4c 8b 64 24 e8                     	mov r12, qword ptr [rsp - 0x18]
0x10f6:   4c 8b 74 24 f8                     	mov r14, qword ptr [rsp - 8]
0x10fb:   4c 8b 7c 24 f0                     	mov r15, qword ptr [rsp - 0x10]
0x1100:   48 8b 5c 24 c8                     	mov rbx, qword ptr [rsp - 0x38]
0x1105:   e9 84 3b 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x110a:   49 89 c4                           	mov r12, rax
0x110d:   eb 0b                              	jmp 0x111a <function_fd0+0x14a>
0x110f:   49 c7 85 88 03 00 00 90 00 00 00   	mov qword ptr [r13 + 0x388], 0x90
0x111a:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x111e:   48 89 cd                           	mov rbp, rcx
0x1121:   ff e0                              	jmp rax
; data inside code section at 0x1123 -- 0x1158
0x1123:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 b8 f3 ff   |ff.........f....|
0x1133:   ff ff ff ff ff 12 00 00  00 00 00 00 00 00 00 00   |................|
0x1143:   00 12 00 00 00 00 00 00  00 00 00 00 00 0e 00 00   |................|
0x1153:   00 00 00 00 00                                     |.....           |
; function: DataziUArr_foldr_info at 0x1158 -- 0x1203
0x1158:   4c 89 e0                           	mov rax, r12
0x115b:   4d 8d a4 24 98 00 00 00            	lea r12, [r12 + 0x98]
0x1163:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x116a:   72 69                              	jb 0x11d5 <DataziUArr_foldr_info+0x7d>
0x116c:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1174:   4c 89 70 18                        	mov qword ptr [rax + 0x18], r14
0x1178:   48 89 70 20                        	mov qword ptr [rax + 0x20], rsi
0x117c:   4c 89 40 28                        	mov qword ptr [rax + 0x28], r8
0x1180:   4c 89 48 30                        	mov qword ptr [rax + 0x30], r9
0x1184:   0f 10 45 00                        	movups xmm0, xmmword ptr [rbp]
0x1188:   0f 11 40 38                        	movups xmmword ptr [rax + 0x38], xmm0
0x118c:   0f 10 45 10                        	movups xmm0, xmmword ptr [rbp + 0x10]
0x1190:   0f 11 40 48                        	movups xmmword ptr [rax + 0x48], xmm0
0x1194:   0f 10 45 20                        	movups xmm0, xmmword ptr [rbp + 0x20]
0x1198:   0f 11 40 58                        	movups xmmword ptr [rax + 0x58], xmm0
0x119c:   0f 10 45 30                        	movups xmm0, xmmword ptr [rbp + 0x30]
0x11a0:   0f 11 40 68                        	movups xmmword ptr [rax + 0x68], xmm0
0x11a4:   0f 10 45 40                        	movups xmm0, xmmword ptr [rbp + 0x40]
0x11a8:   0f 11 40 78                        	movups xmmword ptr [rax + 0x78], xmm0
0x11ac:   48 8b 4d 50                        	mov rcx, qword ptr [rbp + 0x50]
0x11b0:   48 89 88 88 00 00 00               	mov qword ptr [rax + 0x88], rcx
0x11b7:   0f 10 45 58                        	movups xmm0, xmmword ptr [rbp + 0x58]
0x11bb:   0f 11 80 90 00 00 00               	movups xmmword ptr [rax + 0x90], xmm0
0x11c2:   48 8d 70 08                        	lea rsi, [rax + 8]
0x11c6:   48 83 c5 68                        	add rbp, 0x68
0x11ca:   4c 89 f3                           	mov rbx, r14
0x11cd:   49 89 fe                           	mov r14, rdi
0x11d0:   e9 b9 3a 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x11d5:   49 c7 85 88 03 00 00 98 00 00 00   	mov qword ptr [r13 + 0x388], 0x98
0x11e0:   4c 89 75 d8                        	mov qword ptr [rbp - 0x28], r14
0x11e4:   48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0x11e8:   48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0x11ec:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x11f0:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x11f4:   48 8d 6d d8                        	lea rbp, [rbp - 0x28]
0x11f8:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x11fc:   bb 00 00 00 00                     	mov ebx, 0
0x1201:   ff e0                              	jmp rax
; data inside code section at 0x1203 -- 0x1210
0x1203:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: DataziUArr_toList_slow at 0x1210 -- 0x1243
0x1210:   48 8d 45 18                        	lea rax, [rbp + 0x18]
0x1214:   4c 39 f8                           	cmp rax, r15
0x1217:   72 1f                              	jb 0x1238 <DataziUArr_toList_slow+0x28>
0x1219:   48 8b 7d 00                        	mov rdi, qword ptr [rbp]
0x121d:   4c 8b 45 08                        	mov r8, qword ptr [rbp + 8]
0x1221:   4c 8b 4d 10                        	mov r9, qword ptr [rbp + 0x10]
0x1225:   41 be 00 00 00 00                  	mov r14d, 0
0x122b:   be 00 00 00 00                     	mov esi, 0
0x1230:   48 89 c5                           	mov rbp, rax
0x1233:   e9 20 ff ff ff                     	jmp 0x1158 <DataziUArr_foldr_info>
0x1238:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x123c:   bb 00 00 00 00                     	mov ebx, 0
0x1241:   ff e0                              	jmp rax
; data inside code section at 0x1243 -- 0x1257
0x1243:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 98 ff ff   |ff.........f....|
0x1253:   ff ff ff ff                                        |....            |
; function: function_1257 at 0x1257 -- 0x12d1
0x1257:   ff 10                              	call qword ptr [rax]
0x1259:   00 00                              	add byte ptr [rax], al
0x125b:   00 00                              	add byte ptr [rax], al
0x125d:   00 00                              	add byte ptr [rax], al
0x125f:   00 00                              	add byte ptr [rax], al
0x1261:   00 00                              	add byte ptr [rax], al
0x1263:   00 10                              	add byte ptr [rax], dl
0x1265:   00 00                              	add byte ptr [rax], al
0x1267:   00 00                              	add byte ptr [rax], al
0x1269:   00 00                              	add byte ptr [rax], al
0x126b:   00 00                              	add byte ptr [rax], al
0x126d:   00 00                              	add byte ptr [rax], al
0x126f:   00 0e                              	add byte ptr [rsi], cl
0x1271:   00 00                              	add byte ptr [rax], al
0x1273:   00 00                              	add byte ptr [rax], al
0x1275:   00 00                              	add byte ptr [rax], al
0x1277:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x127a:   f8                                 	clc 
0x127b:   48 89 f1                           	mov rcx, rsi
0x127e:   4c 89 f7                           	mov rdi, r14
0x1281:   48 8d 55 f0                        	lea rdx, [rbp - 0x10]
0x1285:   4c 39 fa                           	cmp rdx, r15
0x1288:   72 21                              	jb 0x12ab <function_1257+0x54>
0x128a:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x128e:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x1292:   41 be 00 00 00 00                  	mov r14d, 0
0x1298:   be 00 00 00 00                     	mov esi, 0
0x129d:   48 89 d5                           	mov rbp, rdx
0x12a0:   49 89 c8                           	mov r8, rcx
0x12a3:   49 89 c1                           	mov r9, rax
0x12a6:   e9 ad fe ff ff                     	jmp 0x1158 <DataziUArr_foldr_info>
0x12ab:   48 8d 55 d8                        	lea rdx, [rbp - 0x28]
0x12af:   48 89 7d d8                        	mov qword ptr [rbp - 0x28], rdi
0x12b3:   48 89 4d e0                        	mov qword ptr [rbp - 0x20], rcx
0x12b7:   48 89 45 e8                        	mov qword ptr [rbp - 0x18], rax
0x12bb:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x12bf:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x12c3:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x12c7:   bb 00 00 00 00                     	mov ebx, 0
0x12cc:   48 89 d5                           	mov rbp, rdx
0x12cf:   ff e0                              	jmp rax
; data inside code section at 0x12d1 -- 0x12e0
0x12d1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_12e0 at 0x12e0 -- 0x139f
0x12e0:   10 00                              	adc byte ptr [rax], al
0x12e2:   00 00                              	add byte ptr [rax], al
0x12e4:   00 00                              	add byte ptr [rax], al
0x12e6:   00 00                              	add byte ptr [rax], al
0x12e8:   0f 00 00                           	sldt word ptr [rax]
0x12eb:   00 00                              	add byte ptr [rax], al
0x12ed:   00 00                              	add byte ptr [rax], al
0x12ef:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x12f2:   e8 48 8d 6d 88                     	call 0xffffffff886da03f <unknown_ffffffff886da03f>
0x12f7:   4c 39 fd                           	cmp rbp, r15
0x12fa:   0f 82 96 00 00 00                  	jb 0x1396 <function_12e0+0xb6>
0x1300:   48 c7 40 f0 00 00 00 00            	mov qword ptr [rax - 0x10], 0
0x1308:   48 89 58 f8                        	mov qword ptr [rax - 8], rbx
0x130c:   4c 8b 4b 20                        	mov r9, qword ptr [rbx + 0x20]
0x1310:   48 8b 7b 10                        	mov rdi, qword ptr [rbx + 0x10]
0x1314:   4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x1318:   48 8b 4b 28                        	mov rcx, qword ptr [rbx + 0x28]
0x131c:   48 89 48 88                        	mov qword ptr [rax - 0x78], rcx
0x1320:   48 8b 4b 30                        	mov rcx, qword ptr [rbx + 0x30]
0x1324:   48 89 48 90                        	mov qword ptr [rax - 0x70], rcx
0x1328:   48 8b 4b 38                        	mov rcx, qword ptr [rbx + 0x38]
0x132c:   48 89 48 98                        	mov qword ptr [rax - 0x68], rcx
0x1330:   48 8b 4b 40                        	mov rcx, qword ptr [rbx + 0x40]
0x1334:   48 89 48 a0                        	mov qword ptr [rax - 0x60], rcx
0x1338:   48 8b 4b 48                        	mov rcx, qword ptr [rbx + 0x48]
0x133c:   48 89 48 a8                        	mov qword ptr [rax - 0x58], rcx
0x1340:   48 8b 4b 50                        	mov rcx, qword ptr [rbx + 0x50]
0x1344:   48 89 48 b0                        	mov qword ptr [rax - 0x50], rcx
0x1348:   48 8b 4b 58                        	mov rcx, qword ptr [rbx + 0x58]
0x134c:   48 89 48 b8                        	mov qword ptr [rax - 0x48], rcx
0x1350:   48 8b 4b 60                        	mov rcx, qword ptr [rbx + 0x60]
0x1354:   48 89 48 c0                        	mov qword ptr [rax - 0x40], rcx
0x1358:   48 8b 4b 68                        	mov rcx, qword ptr [rbx + 0x68]
0x135c:   48 89 48 c8                        	mov qword ptr [rax - 0x38], rcx
0x1360:   48 8b 4b 70                        	mov rcx, qword ptr [rbx + 0x70]
0x1364:   48 89 48 d0                        	mov qword ptr [rax - 0x30], rcx
0x1368:   48 8b 4b 78                        	mov rcx, qword ptr [rbx + 0x78]
0x136c:   48 89 48 d8                        	mov qword ptr [rax - 0x28], rcx
0x1370:   48 8b 8b 80 00 00 00               	mov rcx, qword ptr [rbx + 0x80]
0x1377:   48 89 48 e0                        	mov qword ptr [rax - 0x20], rcx
0x137b:   48 8b 8b 88 00 00 00               	mov rcx, qword ptr [rbx + 0x88]
0x1382:   48 89 48 e8                        	mov qword ptr [rax - 0x18], rcx
0x1386:   41 be 00 00 00 00                  	mov r14d, 0
0x138c:   be 00 00 00 00                     	mov esi, 0
0x1391:   e9 c2 fd ff ff                     	jmp 0x1158 <DataziUArr_foldr_info>
0x1396:   49 8b 4d f0                        	mov rcx, qword ptr [r13 - 0x10]
0x139a:   48 89 c5                           	mov rbp, rax
0x139d:   ff e1                              	jmp rcx
; data inside code section at 0x139f -- 0x13a0
0x139f:   90                                                 |.               |
; function: function_13a0 at 0x13a0 -- 0x13e4
0x13a0:   0f 00 00                           	sldt word ptr [rax]
0x13a3:   00 02                              	add byte ptr [rdx], al
0x13a5:   00 00                              	add byte ptr [rax], al
0x13a7:   00 00                              	add byte ptr [rax], al
0x13a9:   00 00                              	add byte ptr [rax], al
0x13ab:   00 00                              	add byte ptr [rax], al
0x13ad:   00 00                              	add byte ptr [rax], al
0x13af:   00 0e                              	add byte ptr [rsi], cl
0x13b1:   00 00                              	add byte ptr [rax], al
0x13b3:   00 00                              	add byte ptr [rax], al
0x13b5:   00 00                              	add byte ptr [rax], al
0x13b7:   00 48 8d                           	add byte ptr [rax - 0x73], cl
0x13ba:   45 e8 4c 39 f8 72                  	call 0x72f84d0c <unknown_72f84d0c>
0x13c0:   23 48 c7                           	and ecx, dword ptr [rax - 0x39]
0x13c3:   45 f0 00 00                        	lock add byte ptr [rax], al
0x13c7:   00 00                              	add byte ptr [rax], al
0x13c9:   4c 89 75 f8                        	mov qword ptr [rbp - 8], r14
0x13cd:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x13d1:   40 f6 c6 07                        	test sil, 7
0x13d5:   74 05                              	je 0x13dc <function_13a0+0x3c>
0x13d7:   48 89 f3                           	mov rbx, rsi
0x13da:   eb 24                              	jmp 0x1400 <c5g9_info$def>
0x13dc:   48 8b 06                           	mov rax, qword ptr [rsi]
0x13df:   48 89 f3                           	mov rbx, rsi
0x13e2:   ff e0                              	jmp rax
; function: function_13e4 at 0x13e4 -- 0x13ef
0x13e4:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x13e8:   bb 00 00 00 00                     	mov ebx, 0
0x13ed:   ff e0                              	jmp rax
; data inside code section at 0x13ef -- 0x1400
0x13ef:   90 01 00 00 00 00 00 00  00 1e 00 00 00 00 00 00   |................|
0x13ff:   00                                                 |.               |
; function: c5g9_info$def at 0x1400 -- 0x1494
0x1400:   4c 89 e0                           	mov rax, r12
0x1403:   4d 8d a4 24 90 00 00 00            	lea r12, [r12 + 0x90]
0x140b:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1412:   72 70                              	jb 0x1484 <c5g9_info$def+0x84>
0x1414:   0f 10 43 07                        	movups xmm0, xmmword ptr [rbx + 7]
0x1418:   0f 10 4b 17                        	movups xmm1, xmmword ptr [rbx + 0x17]
0x141c:   0f 10 53 27                        	movups xmm2, xmmword ptr [rbx + 0x27]
0x1420:   0f 10 5b 37                        	movups xmm3, xmmword ptr [rbx + 0x37]
0x1424:   0f 10 63 47                        	movups xmm4, xmmword ptr [rbx + 0x47]
0x1428:   0f 10 6b 57                        	movups xmm5, xmmword ptr [rbx + 0x57]
0x142c:   0f 10 73 67                        	movups xmm6, xmmword ptr [rbx + 0x67]
0x1430:   0f 10 7b 77                        	movups xmm7, xmmword ptr [rbx + 0x77]
0x1434:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x143c:   0f 11 40 18                        	movups xmmword ptr [rax + 0x18], xmm0
0x1440:   0f 11 48 28                        	movups xmmword ptr [rax + 0x28], xmm1
0x1444:   0f 11 50 38                        	movups xmmword ptr [rax + 0x38], xmm2
0x1448:   0f 11 58 48                        	movups xmmword ptr [rax + 0x48], xmm3
0x144c:   0f 11 60 58                        	movups xmmword ptr [rax + 0x58], xmm4
0x1450:   0f 11 68 68                        	movups xmmword ptr [rax + 0x68], xmm5
0x1454:   0f 11 70 78                        	movups xmmword ptr [rax + 0x78], xmm6
0x1458:   0f 11 b8 88 00 00 00               	movups xmmword ptr [rax + 0x88], xmm7
0x145f:   48 8d 40 08                        	lea rax, [rax + 8]
0x1463:   4c 8b 75 08                        	mov r14, qword ptr [rbp + 8]
0x1467:   48 c7 45 f8 00 00 00 00            	mov qword ptr [rbp - 8], 0
0x146f:   48 89 45 00                        	mov qword ptr [rbp], rax
0x1473:   48 c7 45 08 00 00 00 00            	mov qword ptr [rbp + 8], 0
0x147b:   48 8d 6d f8                        	lea rbp, [rbp - 8]
0x147f:   e9 2a 38 00 00                     	jmp 0x4cae <base_GHCziShow_showList_info>
0x1484:   49 c7 85 88 03 00 00 90 00 00 00   	mov qword ptr [r13 + 0x388], 0x90
0x148f:   e9 da 37 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0x1494 -- 0x14a0
0x1494:   66 66 2e 0f 1f 84 00 00  00 00 00 90               |ff..........    |
; function: DataziUArr_zdwzdcshowsPrec_slow at 0x14a0 -- 0x14bd
0x14a0:   4c 8b 4d 20                        	mov r9, qword ptr [rbp + 0x20]
0x14a4:   4c 8b 45 18                        	mov r8, qword ptr [rbp + 0x18]
0x14a8:   48 8b 7d 10                        	mov rdi, qword ptr [rbp + 0x10]
0x14ac:   4c 8b 75 00                        	mov r14, qword ptr [rbp]
0x14b0:   48 8b 75 08                        	mov rsi, qword ptr [rbp + 8]
0x14b4:   48 83 c5 28                        	add rbp, 0x28
0x14b8:   e9 eb 00 00 00                     	jmp 0x15a8 <DataziUArr_zdwzdcshowsPrec_info>
; data inside code section at 0x14bd -- 0x14c0
0x14bd:   0f 1f 00                                           |...             |
; function: function_14c0 at 0x14c0 -- 0x157f
0x14c0:   10 00                              	adc byte ptr [rax], al
0x14c2:   00 00                              	add byte ptr [rax], al
0x14c4:   00 00                              	add byte ptr [rax], al
0x14c6:   00 00                              	add byte ptr [rax], al
0x14c8:   0f 00 00                           	sldt word ptr [rax]
0x14cb:   00 00                              	add byte ptr [rax], al
0x14cd:   00 00                              	add byte ptr [rax], al
0x14cf:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x14d2:   e8 48 8d 6d 88                     	call 0xffffffff886da21f <unknown_ffffffff886da21f>
0x14d7:   4c 39 fd                           	cmp rbp, r15
0x14da:   0f 82 96 00 00 00                  	jb 0x1576 <function_14c0+0xb6>
0x14e0:   48 c7 40 f0 00 00 00 00            	mov qword ptr [rax - 0x10], 0
0x14e8:   48 89 58 f8                        	mov qword ptr [rax - 8], rbx
0x14ec:   4c 8b 4b 20                        	mov r9, qword ptr [rbx + 0x20]
0x14f0:   48 8b 7b 10                        	mov rdi, qword ptr [rbx + 0x10]
0x14f4:   4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x14f8:   48 8b 4b 28                        	mov rcx, qword ptr [rbx + 0x28]
0x14fc:   48 89 48 88                        	mov qword ptr [rax - 0x78], rcx
0x1500:   48 8b 4b 30                        	mov rcx, qword ptr [rbx + 0x30]
0x1504:   48 89 48 90                        	mov qword ptr [rax - 0x70], rcx
0x1508:   48 8b 4b 38                        	mov rcx, qword ptr [rbx + 0x38]
0x150c:   48 89 48 98                        	mov qword ptr [rax - 0x68], rcx
0x1510:   48 8b 4b 40                        	mov rcx, qword ptr [rbx + 0x40]
0x1514:   48 89 48 a0                        	mov qword ptr [rax - 0x60], rcx
0x1518:   48 8b 4b 48                        	mov rcx, qword ptr [rbx + 0x48]
0x151c:   48 89 48 a8                        	mov qword ptr [rax - 0x58], rcx
0x1520:   48 8b 4b 50                        	mov rcx, qword ptr [rbx + 0x50]
0x1524:   48 89 48 b0                        	mov qword ptr [rax - 0x50], rcx
0x1528:   48 8b 4b 58                        	mov rcx, qword ptr [rbx + 0x58]
0x152c:   48 89 48 b8                        	mov qword ptr [rax - 0x48], rcx
0x1530:   48 8b 4b 60                        	mov rcx, qword ptr [rbx + 0x60]
0x1534:   48 89 48 c0                        	mov qword ptr [rax - 0x40], rcx
0x1538:   48 8b 4b 68                        	mov rcx, qword ptr [rbx + 0x68]
0x153c:   48 89 48 c8                        	mov qword ptr [rax - 0x38], rcx
0x1540:   48 8b 4b 70                        	mov rcx, qword ptr [rbx + 0x70]
0x1544:   48 89 48 d0                        	mov qword ptr [rax - 0x30], rcx
0x1548:   48 8b 4b 78                        	mov rcx, qword ptr [rbx + 0x78]
0x154c:   48 89 48 d8                        	mov qword ptr [rax - 0x28], rcx
0x1550:   48 8b 8b 80 00 00 00               	mov rcx, qword ptr [rbx + 0x80]
0x1557:   48 89 48 e0                        	mov qword ptr [rax - 0x20], rcx
0x155b:   48 8b 8b 88 00 00 00               	mov rcx, qword ptr [rbx + 0x88]
0x1562:   48 89 48 e8                        	mov qword ptr [rax - 0x18], rcx
0x1566:   41 be 00 00 00 00                  	mov r14d, 0
0x156c:   be 00 00 00 00                     	mov esi, 0
0x1571:   e9 e2 fb ff ff                     	jmp 0x1158 <DataziUArr_foldr_info>
0x1576:   49 8b 4d f0                        	mov rcx, qword ptr [r13 - 0x10]
0x157a:   48 89 c5                           	mov rbp, rax
0x157d:   ff e1                              	jmp rcx
; data inside code section at 0x157f -- 0x15a8
0x157f:   90 f8 fe ff ff ff ff ff  ff 12 00 00 00 00 00 00   |................|
0x158f:   00 00 00 00 00 12 00 00  00 00 00 00 00 00 00 00   |................|
0x159f:   00 0e 00 00 00 00 00 00  00                        |.........       |
; function: DataziUArr_zdwzdcshowsPrec_info at 0x15a8 -- 0x1660
0x15a8:   4c 89 e0                           	mov rax, r12
0x15ab:   4d 8d a4 24 90 00 00 00            	lea r12, [r12 + 0x90]
0x15b3:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x15ba:   72 76                              	jb 0x1632 <DataziUArr_zdwzdcshowsPrec_info+0x8a>
0x15bc:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x15c4:   48 89 70 18                        	mov qword ptr [rax + 0x18], rsi
0x15c8:   48 89 78 20                        	mov qword ptr [rax + 0x20], rdi
0x15cc:   4c 89 40 28                        	mov qword ptr [rax + 0x28], r8
0x15d0:   4c 89 48 30                        	mov qword ptr [rax + 0x30], r9
0x15d4:   0f 10 45 00                        	movups xmm0, xmmword ptr [rbp]
0x15d8:   0f 11 40 38                        	movups xmmword ptr [rax + 0x38], xmm0
0x15dc:   0f 10 45 10                        	movups xmm0, xmmword ptr [rbp + 0x10]
0x15e0:   0f 11 40 48                        	movups xmmword ptr [rax + 0x48], xmm0
0x15e4:   0f 10 45 20                        	movups xmm0, xmmword ptr [rbp + 0x20]
0x15e8:   0f 11 40 58                        	movups xmmword ptr [rax + 0x58], xmm0
0x15ec:   0f 10 45 30                        	movups xmm0, xmmword ptr [rbp + 0x30]
0x15f0:   0f 11 40 68                        	movups xmmword ptr [rax + 0x68], xmm0
0x15f4:   0f 10 45 40                        	movups xmm0, xmmword ptr [rbp + 0x40]
0x15f8:   0f 11 40 78                        	movups xmmword ptr [rax + 0x78], xmm0
0x15fc:   48 8b 4d 50                        	mov rcx, qword ptr [rbp + 0x50]
0x1600:   48 89 88 88 00 00 00               	mov qword ptr [rax + 0x88], rcx
0x1607:   48 8b 4d 58                        	mov rcx, qword ptr [rbp + 0x58]
0x160b:   48 89 88 90 00 00 00               	mov qword ptr [rax + 0x90], rcx
0x1612:   48 8d 40 08                        	lea rax, [rax + 8]
0x1616:   48 c7 45 58 00 00 00 00            	mov qword ptr [rbp + 0x58], 0
0x161e:   48 8d 6d 58                        	lea rbp, [rbp + 0x58]
0x1622:   be 00 00 00 00                     	mov esi, 0
0x1627:   4c 89 f3                           	mov rbx, r14
0x162a:   49 89 c6                           	mov r14, rax
0x162d:   e9 5c 36 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1632:   49 c7 85 88 03 00 00 90 00 00 00   	mov qword ptr [r13 + 0x388], 0x90
0x163d:   4c 89 75 d8                        	mov qword ptr [rbp - 0x28], r14
0x1641:   48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0x1645:   48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0x1649:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x164d:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x1651:   48 8d 6d d8                        	lea rbp, [rbp - 0x28]
0x1655:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1659:   bb 00 00 00 00                     	mov ebx, 0
0x165e:   ff e0                              	jmp rax
; data inside code section at 0x1660 -- 0x1661
0x1660:   01                                                 |.               |
; function: function_1661 at 0x1661 -- 0x1690
0x1661:   00 00                              	add byte ptr [rax], al
0x1663:   00 00                              	add byte ptr [rax], al
0x1665:   00 00                              	add byte ptr [rax], al
0x1667:   00 1e                              	add byte ptr [rsi], bl
0x1669:   00 00                              	add byte ptr [rax], al
0x166b:   00 00                              	add byte ptr [rax], al
0x166d:   00 00                              	add byte ptr [rax], al
0x166f:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x1672:   75 08                              	jne 0x167c <function_1661+0x1b>
0x1674:   48 83 c5 10                        	add rbp, 0x10
0x1678:   49 89 de                           	mov r14, rbx
; data inside code section at 0x167b -- 0x167c
0x167b:   e9                                                 |.               |
0x167c:   36 36 00 00                        	add byte ptr ss:[rax], al
0x1680:   18 00                              	sbb byte ptr [rax], al
0x1682:   00 00                              	add byte ptr [rax], al
0x1684:   04 00                              	add al, 0
0x1686:   00 00                              	add byte ptr [rax], al
0x1688:   00 00                              	add byte ptr [rax], al
0x168a:   00 00                              	add byte ptr [rax], al
0x168c:   00 00                              	add byte ptr [rax], al
0x168e:   00 00                              	add byte ptr [rax], al
; data inside code section at 0x1690 -- 0x1691
0x1690:   0e                                                 |.               |
; function: function_1691 at 0x1691 -- 0x1779
0x1691:   00 00                              	add byte ptr [rax], al
0x1693:   00 00                              	add byte ptr [rax], al
0x1695:   00 00                              	add byte ptr [rax], al
0x1697:   00 48 8d                           	add byte ptr [rax - 0x73], cl
0x169a:   45 98                              	cwde 
0x169c:   4c 39 f8                           	cmp rax, r15
0x169f:   0f 82 c9 00 00 00                  	jb 0x176e <function_1691+0xdd>
0x16a5:   48 8d 4d e8                        	lea rcx, [rbp - 0x18]
0x16a9:   48 c7 45 e8 00 00 00 00            	mov qword ptr [rbp - 0x18], 0
0x16b1:   48 89 7d f0                        	mov qword ptr [rbp - 0x10], rdi
0x16b5:   4c 89 45 f8                        	mov qword ptr [rbp - 8], r8
0x16b9:   41 f6 c6 07                        	test r14b, 7
0x16bd:   0f 84 95 00 00 00                  	je 0x1758 <function_1691+0xc7>
0x16c3:   48 c7 45 e8 00 00 00 00            	mov qword ptr [rbp - 0x18], 0
0x16cb:   4d 8b 76 17                        	mov r14, qword ptr [r14 + 0x17]
0x16cf:   4c 89 75 f0                        	mov qword ptr [rbp - 0x10], r14
0x16d3:   40 f6 c7 07                        	test dil, 7
0x16d7:   0f 84 86 00 00 00                  	je 0x1763 <function_1691+0xd2>
0x16dd:   4c 8b 4f 1f                        	mov r9, qword ptr [rdi + 0x1f]
0x16e1:   4c 8b 47 17                        	mov r8, qword ptr [rdi + 0x17]
0x16e5:   48 8b 77 07                        	mov rsi, qword ptr [rdi + 7]
0x16e9:   48 8b 4f 0f                        	mov rcx, qword ptr [rdi + 0xf]
0x16ed:   48 8b 57 27                        	mov rdx, qword ptr [rdi + 0x27]
0x16f1:   48 89 55 98                        	mov qword ptr [rbp - 0x68], rdx
0x16f5:   48 8b 57 2f                        	mov rdx, qword ptr [rdi + 0x2f]
0x16f9:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x16fd:   48 8b 57 37                        	mov rdx, qword ptr [rdi + 0x37]
0x1701:   48 89 55 a8                        	mov qword ptr [rbp - 0x58], rdx
0x1705:   48 8b 57 3f                        	mov rdx, qword ptr [rdi + 0x3f]
0x1709:   48 89 55 b0                        	mov qword ptr [rbp - 0x50], rdx
0x170d:   48 8b 57 47                        	mov rdx, qword ptr [rdi + 0x47]
0x1711:   48 89 55 b8                        	mov qword ptr [rbp - 0x48], rdx
0x1715:   48 8b 57 4f                        	mov rdx, qword ptr [rdi + 0x4f]
0x1719:   48 89 55 c0                        	mov qword ptr [rbp - 0x40], rdx
0x171d:   48 8b 57 57                        	mov rdx, qword ptr [rdi + 0x57]
0x1721:   48 89 55 c8                        	mov qword ptr [rbp - 0x38], rdx
0x1725:   48 8b 57 5f                        	mov rdx, qword ptr [rdi + 0x5f]
0x1729:   48 89 55 d0                        	mov qword ptr [rbp - 0x30], rdx
0x172d:   48 8b 57 67                        	mov rdx, qword ptr [rdi + 0x67]
0x1731:   48 89 55 d8                        	mov qword ptr [rbp - 0x28], rdx
0x1735:   48 8b 57 6f                        	mov rdx, qword ptr [rdi + 0x6f]
0x1739:   48 89 55 e0                        	mov qword ptr [rbp - 0x20], rdx
0x173d:   48 8b 57 77                        	mov rdx, qword ptr [rdi + 0x77]
0x1741:   48 89 55 e8                        	mov qword ptr [rbp - 0x18], rdx
0x1745:   48 8b 57 7f                        	mov rdx, qword ptr [rdi + 0x7f]
0x1749:   48 89 55 f0                        	mov qword ptr [rbp - 0x10], rdx
0x174d:   48 89 c5                           	mov rbp, rax
0x1750:   48 89 cf                           	mov rdi, rcx
0x1753:   e9 50 fe ff ff                     	jmp 0x15a8 <DataziUArr_zdwzdcshowsPrec_info>
0x1758:   49 8b 06                           	mov rax, qword ptr [r14]
0x175b:   48 89 cd                           	mov rbp, rcx
0x175e:   4c 89 f3                           	mov rbx, r14
0x1761:   ff e0                              	jmp rax
0x1763:   48 8b 07                           	mov rax, qword ptr [rdi]
0x1766:   48 89 cd                           	mov rbp, rcx
0x1769:   48 89 fb                           	mov rbx, rdi
0x176c:   ff e0                              	jmp rax
0x176e:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1772:   bb 00 00 00 00                     	mov ebx, 0
0x1777:   ff e0                              	jmp rax
; data inside code section at 0x1779 -- 0x178a
0x1779:   0f 1f 80 00 00 00 00 02  00 00 00 00 00 00 00 1e   |................|
0x1789:   00                                                 |.               |
; function: function_178a at 0x178a -- 0x17b0
0x178a:   00 00                              	add byte ptr [rax], al
0x178c:   00 00                              	add byte ptr [rax], al
0x178e:   00 00                              	add byte ptr [rax], al
0x1790:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x1798:   48 8b 43 17                        	mov rax, qword ptr [rbx + 0x17]
0x179c:   48 8b 5d 08                        	mov rbx, qword ptr [rbp + 8]
0x17a0:   48 89 45 08                        	mov qword ptr [rbp + 8], rax
0x17a4:   f6 c3 07                           	test bl, 7
0x17a7:   74 02                              	je 0x17ab <function_178a+0x21>
0x17a9:   eb 15                              	jmp 0x17c0 <c5sG_info$def>
0x17ab:   48 8b 03                           	mov rax, qword ptr [rbx]
0x17ae:   ff e0                              	jmp rax
; data inside code section at 0x17b0 -- 0x17ba
0x17b0:   02 00 00 00 00 00 00 00  1e 00                     |..........      |
; function: function_17ba at 0x17ba -- 0x17c0
0x17ba:   00 00                              	add byte ptr [rax], al
0x17bc:   00 00                              	add byte ptr [rax], al
0x17be:   00 00                              	add byte ptr [rax], al
; function: c5sG_info$def at 0x17c0 -- 0x183d
0x17c0:   4c 8b 4b 1f                        	mov r9, qword ptr [rbx + 0x1f]
0x17c4:   4c 8b 43 17                        	mov r8, qword ptr [rbx + 0x17]
0x17c8:   48 8b 73 07                        	mov rsi, qword ptr [rbx + 7]
0x17cc:   48 8b 7b 0f                        	mov rdi, qword ptr [rbx + 0xf]
0x17d0:   4c 8b 75 08                        	mov r14, qword ptr [rbp + 8]
0x17d4:   48 8b 43 27                        	mov rax, qword ptr [rbx + 0x27]
0x17d8:   48 89 45 b0                        	mov qword ptr [rbp - 0x50], rax
0x17dc:   48 8b 43 2f                        	mov rax, qword ptr [rbx + 0x2f]
0x17e0:   48 89 45 b8                        	mov qword ptr [rbp - 0x48], rax
0x17e4:   48 8b 43 37                        	mov rax, qword ptr [rbx + 0x37]
0x17e8:   48 89 45 c0                        	mov qword ptr [rbp - 0x40], rax
0x17ec:   48 8b 43 3f                        	mov rax, qword ptr [rbx + 0x3f]
0x17f0:   48 89 45 c8                        	mov qword ptr [rbp - 0x38], rax
0x17f4:   48 8b 43 47                        	mov rax, qword ptr [rbx + 0x47]
0x17f8:   48 89 45 d0                        	mov qword ptr [rbp - 0x30], rax
0x17fc:   48 8b 43 4f                        	mov rax, qword ptr [rbx + 0x4f]
0x1800:   48 89 45 d8                        	mov qword ptr [rbp - 0x28], rax
0x1804:   48 8b 43 57                        	mov rax, qword ptr [rbx + 0x57]
0x1808:   48 89 45 e0                        	mov qword ptr [rbp - 0x20], rax
0x180c:   48 8b 43 5f                        	mov rax, qword ptr [rbx + 0x5f]
0x1810:   48 89 45 e8                        	mov qword ptr [rbp - 0x18], rax
0x1814:   48 8b 43 67                        	mov rax, qword ptr [rbx + 0x67]
0x1818:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x181c:   48 8b 43 6f                        	mov rax, qword ptr [rbx + 0x6f]
0x1820:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x1824:   48 8b 43 77                        	mov rax, qword ptr [rbx + 0x77]
0x1828:   48 89 45 00                        	mov qword ptr [rbp], rax
0x182c:   48 8b 43 7f                        	mov rax, qword ptr [rbx + 0x7f]
0x1830:   48 89 45 08                        	mov qword ptr [rbp + 8], rax
0x1834:   48 8d 6d b0                        	lea rbp, [rbp - 0x50]
0x1838:   e9 6b fd ff ff                     	jmp 0x15a8 <DataziUArr_zdwzdcshowsPrec_info>
; data inside code section at 0x183d -- 0x1840
0x183d:   0f 1f 00                                           |...             |
; function: function_1840 at 0x1840 -- 0x18ff
0x1840:   10 00                              	adc byte ptr [rax], al
0x1842:   00 00                              	add byte ptr [rax], al
0x1844:   00 00                              	add byte ptr [rax], al
0x1846:   00 00                              	add byte ptr [rax], al
0x1848:   0f 00 00                           	sldt word ptr [rax]
0x184b:   00 00                              	add byte ptr [rax], al
0x184d:   00 00                              	add byte ptr [rax], al
0x184f:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x1852:   e8 48 8d 6d 88                     	call 0xffffffff886da59f <unknown_ffffffff886da59f>
0x1857:   4c 39 fd                           	cmp rbp, r15
0x185a:   0f 82 96 00 00 00                  	jb 0x18f6 <function_1840+0xb6>
0x1860:   48 c7 40 f0 00 00 00 00            	mov qword ptr [rax - 0x10], 0
0x1868:   48 89 58 f8                        	mov qword ptr [rax - 8], rbx
0x186c:   4c 8b 4b 20                        	mov r9, qword ptr [rbx + 0x20]
0x1870:   48 8b 7b 10                        	mov rdi, qword ptr [rbx + 0x10]
0x1874:   4c 8b 43 18                        	mov r8, qword ptr [rbx + 0x18]
0x1878:   48 8b 4b 28                        	mov rcx, qword ptr [rbx + 0x28]
0x187c:   48 89 48 88                        	mov qword ptr [rax - 0x78], rcx
0x1880:   48 8b 4b 30                        	mov rcx, qword ptr [rbx + 0x30]
0x1884:   48 89 48 90                        	mov qword ptr [rax - 0x70], rcx
0x1888:   48 8b 4b 38                        	mov rcx, qword ptr [rbx + 0x38]
0x188c:   48 89 48 98                        	mov qword ptr [rax - 0x68], rcx
0x1890:   48 8b 4b 40                        	mov rcx, qword ptr [rbx + 0x40]
0x1894:   48 89 48 a0                        	mov qword ptr [rax - 0x60], rcx
0x1898:   48 8b 4b 48                        	mov rcx, qword ptr [rbx + 0x48]
0x189c:   48 89 48 a8                        	mov qword ptr [rax - 0x58], rcx
0x18a0:   48 8b 4b 50                        	mov rcx, qword ptr [rbx + 0x50]
0x18a4:   48 89 48 b0                        	mov qword ptr [rax - 0x50], rcx
0x18a8:   48 8b 4b 58                        	mov rcx, qword ptr [rbx + 0x58]
0x18ac:   48 89 48 b8                        	mov qword ptr [rax - 0x48], rcx
0x18b0:   48 8b 4b 60                        	mov rcx, qword ptr [rbx + 0x60]
0x18b4:   48 89 48 c0                        	mov qword ptr [rax - 0x40], rcx
0x18b8:   48 8b 4b 68                        	mov rcx, qword ptr [rbx + 0x68]
0x18bc:   48 89 48 c8                        	mov qword ptr [rax - 0x38], rcx
0x18c0:   48 8b 4b 70                        	mov rcx, qword ptr [rbx + 0x70]
0x18c4:   48 89 48 d0                        	mov qword ptr [rax - 0x30], rcx
0x18c8:   48 8b 4b 78                        	mov rcx, qword ptr [rbx + 0x78]
0x18cc:   48 89 48 d8                        	mov qword ptr [rax - 0x28], rcx
0x18d0:   48 8b 8b 80 00 00 00               	mov rcx, qword ptr [rbx + 0x80]
0x18d7:   48 89 48 e0                        	mov qword ptr [rax - 0x20], rcx
0x18db:   48 8b 8b 88 00 00 00               	mov rcx, qword ptr [rbx + 0x88]
0x18e2:   48 89 48 e8                        	mov qword ptr [rax - 0x18], rcx
0x18e6:   41 be 00 00 00 00                  	mov r14d, 0
0x18ec:   be 00 00 00 00                     	mov esi, 0
0x18f1:   e9 62 f8 ff ff                     	jmp 0x1158 <DataziUArr_foldr_info>
0x18f6:   49 8b 4d f0                        	mov rcx, qword ptr [r13 - 0x10]
0x18fa:   48 89 c5                           	mov rbp, rax
0x18fd:   ff e1                              	jmp rcx
; data inside code section at 0x18ff -- 0x1900
0x18ff:   90                                                 |.               |
; function: function_1900 at 0x1900 -- 0x1952
0x1900:   0f 00 00                           	sldt word ptr [rax]
0x1903:   00 02                              	add byte ptr [rdx], al
0x1905:   00 00                              	add byte ptr [rax], al
0x1907:   00 01                              	add byte ptr [rcx], al
0x1909:   00 00                              	add byte ptr [rax], al
0x190b:   00 00                              	add byte ptr [rax], al
0x190d:   00 00                              	add byte ptr [rax], al
0x190f:   00 09                              	add byte ptr [rcx], cl
0x1911:   00 00                              	add byte ptr [rax], al
0x1913:   00 00                              	add byte ptr [rax], al
0x1915:   00 00                              	add byte ptr [rax], al
0x1917:   00 48 8d                           	add byte ptr [rax - 0x73], cl
0x191a:   45 d8 4c 39 f8                     	fmul dword ptr [r9 + rdi - 8]
0x191f:   72 2b                              	jb 0x194c <function_1900+0x4c>
0x1921:   48 c7 45 e8 00 00 00 00            	mov qword ptr [rbp - 0x18], 0
0x1929:   48 8b 43 06                        	mov rax, qword ptr [rbx + 6]
0x192d:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x1931:   48 89 75 f8                        	mov qword ptr [rbp - 8], rsi
0x1935:   48 8d 6d e8                        	lea rbp, [rbp - 0x18]
0x1939:   41 f6 c6 07                        	test r14b, 7
0x193d:   74 05                              	je 0x1944 <function_1900+0x44>
0x193f:   4c 89 f3                           	mov rbx, r14
0x1942:   eb 2c                              	jmp 0x1970 <c5vy_info$def>
0x1944:   49 8b 06                           	mov rax, qword ptr [r14]
0x1947:   4c 89 f3                           	mov rbx, r14
0x194a:   ff e0                              	jmp rax
0x194c:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1950:   ff e0                              	jmp rax
; data inside code section at 0x1952 -- 0x196a
0x1952:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00 02 00   |ff..............|
0x1962:   00 00 00 00 00 00 1e 00                            |........        |
; function: function_196a at 0x196a -- 0x1970
0x196a:   00 00                              	add byte ptr [rax], al
0x196c:   00 00                              	add byte ptr [rax], al
0x196e:   00 00                              	add byte ptr [rax], al
; function: c5vy_info$def at 0x1970 -- 0x1a1d
0x1970:   4c 89 e0                           	mov rax, r12
0x1973:   4d 8d a4 24 90 00 00 00            	lea r12, [r12 + 0x90]
0x197b:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1982:   0f 82 85 00 00 00                  	jb 0x1a0d <c5vy_info$def+0x9d>
0x1988:   0f 10 43 07                        	movups xmm0, xmmword ptr [rbx + 7]
0x198c:   0f 10 4b 17                        	movups xmm1, xmmword ptr [rbx + 0x17]
0x1990:   0f 10 53 27                        	movups xmm2, xmmword ptr [rbx + 0x27]
0x1994:   0f 10 5b 37                        	movups xmm3, xmmword ptr [rbx + 0x37]
0x1998:   0f 10 63 47                        	movups xmm4, xmmword ptr [rbx + 0x47]
0x199c:   0f 10 6b 57                        	movups xmm5, xmmword ptr [rbx + 0x57]
0x19a0:   0f 10 73 67                        	movups xmm6, xmmword ptr [rbx + 0x67]
0x19a4:   0f 10 7b 77                        	movups xmm7, xmmword ptr [rbx + 0x77]
0x19a8:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x19b0:   0f 11 40 18                        	movups xmmword ptr [rax + 0x18], xmm0
0x19b4:   0f 11 48 28                        	movups xmmword ptr [rax + 0x28], xmm1
0x19b8:   0f 11 50 38                        	movups xmmword ptr [rax + 0x38], xmm2
0x19bc:   0f 11 58 48                        	movups xmmword ptr [rax + 0x48], xmm3
0x19c0:   0f 11 60 58                        	movups xmmword ptr [rax + 0x58], xmm4
0x19c4:   0f 11 68 68                        	movups xmmword ptr [rax + 0x68], xmm5
0x19c8:   0f 11 70 78                        	movups xmmword ptr [rax + 0x78], xmm6
0x19cc:   0f 11 b8 88 00 00 00               	movups xmmword ptr [rax + 0x88], xmm7
0x19d3:   48 8d 40 08                        	lea rax, [rax + 8]
0x19d7:   4c 8b 75 08                        	mov r14, qword ptr [rbp + 8]
0x19db:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x19e3:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x19e7:   b8 00 00 00 00                     	mov eax, 0
0x19ec:   66 48 0f 6e c0                     	movq xmm0, rax
0x19f1:   b8 00 00 00 00                     	mov eax, 0
0x19f6:   66 48 0f 6e c8                     	movq xmm1, rax
0x19fb:   66 0f 6c c8                        	punpcklqdq xmm1, xmm0
0x19ff:   f3 0f 7f 4d 00                     	movdqu xmmword ptr [rbp], xmm1
0x1a04:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1a08:   e9 a1 32 00 00                     	jmp 0x4cae <base_GHCziShow_showList_info>
0x1a0d:   49 c7 85 88 03 00 00 90 00 00 00   	mov qword ptr [r13 + 0x388], 0x90
0x1a18:   e9 51 32 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0x1a1d -- 0x1a21
0x1a1d:   0f 1f 00 01                                        |....            |
; function: function_1a21 at 0x1a21 -- 0x1aff
0x1a21:   00 00                              	add byte ptr [rax], al
0x1a23:   00 00                              	add byte ptr [rax], al
0x1a25:   00 00                              	add byte ptr [rax], al
0x1a27:   00 1e                              	add byte ptr [rsi], bl
0x1a29:   00 00                              	add byte ptr [rax], al
0x1a2b:   00 00                              	add byte ptr [rax], al
0x1a2d:   00 00                              	add byte ptr [rax], al
0x1a2f:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x1a32:   75 08                              	jne 0x1a3c <function_1a21+0x1b>
0x1a34:   48 83 c5 10                        	add rbp, 0x10
0x1a38:   49 89 de                           	mov r14, rbx
; data inside code section at 0x1a3b -- 0x1a3c
0x1a3b:   e9                                                 |.               |
0x1a3c:   76 32                              	jbe 0x1a70 <function_1a21+0x4f>
0x1a3e:   00 00                              	add byte ptr [rax], al
; data inside code section at 0x1a40 -- 0x1a6b
0x1a40:   17 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1a50:   0e 00 00 00 00 00 00 00  4c 89 e0 4d 8d 64 24 10   |........L..M.d$.|
0x1a60:   4d 39 a5 58 03 00 00 72  16 48 c7                  |M9.X...r.H.     |
0x1a6b:   40 08 00                           	or byte ptr [rax], al
0x1a6e:   00 00                              	add byte ptr [rax], al
0x1a70:   00 4c 89 70                        	add byte ptr [rcx + rcx*4 + 0x70], cl
0x1a74:   10 4d 8d                           	adc byte ptr [rbp - 0x73], cl
0x1a77:   74 24                              	je 0x1a9d <function_1a21+0x7c>
0x1a79:   fa                                 	cli 
0x1a7a:   e9 3f 32 00 00                     	jmp 0x4cbe <base_GHCziShow_showListzuzu_info>
0x1a7f:   49 c7 85 88 03 00 00 10 00 00 00   	mov qword ptr [r13 + 0x388], 0x10
0x1a8a:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1a8e:   bb 00 00 00 00                     	mov ebx, 0
0x1a93:   ff e0                              	jmp rax
; data inside code section at 0x1a95 -- 0x1a9b
0x1a95:   66 66 2e 0f 1f 84                                  |ff....          |
0x1a9b:   00 00                              	add byte ptr [rax], al
0x1a9d:   00 00                              	add byte ptr [rax], al
0x1a9f:   00 0f                              	add byte ptr [rdi], cl
0x1aa1:   00 00                              	add byte ptr [rax], al
0x1aa3:   00 02                              	add byte ptr [rdx], al
0x1aa5:   00 00                              	add byte ptr [rax], al
0x1aa7:   00 01                              	add byte ptr [rcx], al
0x1aa9:   00 00                              	add byte ptr [rax], al
0x1aab:   00 00                              	add byte ptr [rax], al
0x1aad:   00 00                              	add byte ptr [rax], al
0x1aaf:   00 09                              	add byte ptr [rcx], cl
0x1ab1:   00 00                              	add byte ptr [rax], al
0x1ab3:   00 00                              	add byte ptr [rax], al
0x1ab5:   00 00                              	add byte ptr [rax], al
0x1ab7:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x1aba:   f7 4c 89 f6 4c 89 e0 4c            	test dword ptr [rcx + rcx*4 - 0xa], 0x4ce0894c
0x1ac2:   8b 73 06                           	mov esi, dword ptr [rbx + 6]
0x1ac5:   4d 8d 64 24 10                     	lea r12, [r12 + 0x10]
0x1aca:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1ad1:   72 16                              	jb 0x1ae9 <function_1a21+0xc8>
0x1ad3:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1adb:   4c 89 70 10                        	mov qword ptr [rax + 0x10], r14
0x1adf:   4d 8d 74 24 fa                     	lea r14, [r12 - 6]
0x1ae4:   e9 d5 31 00 00                     	jmp 0x4cbe <base_GHCziShow_showListzuzu_info>
0x1ae9:   49 c7 85 88 03 00 00 10 00 00 00   	mov qword ptr [r13 + 0x388], 0x10
0x1af4:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1af8:   bb 00 00 00 00                     	mov ebx, 0
0x1afd:   ff e0                              	jmp rax
; data inside code section at 0x1aff -- 0x1b00
0x1aff:   90                                                 |.               |
; function: function_1b00 at 0x1b00 -- 0x1b59
0x1b00:   05 00 00 00 01                     	add eax, 0x1000000
0x1b05:   00 00                              	add byte ptr [rax], al
0x1b07:   00 01                              	add byte ptr [rcx], al
0x1b09:   00 00                              	add byte ptr [rax], al
0x1b0b:   00 00                              	add byte ptr [rax], al
0x1b0d:   00 00                              	add byte ptr [rax], al
0x1b0f:   00 09                              	add byte ptr [rcx], cl
0x1b11:   00 00                              	add byte ptr [rax], al
0x1b13:   00 00                              	add byte ptr [rax], al
0x1b15:   00 00                              	add byte ptr [rax], al
0x1b17:   00 4c 89 f6                        	add byte ptr [rcx + rcx*4 - 0xa], cl
0x1b1b:   4c 8b 73 07                        	mov r14, qword ptr [rbx + 7]
0x1b1f:   48 8d 45 e8                        	lea rax, [rbp - 0x18]
0x1b23:   4c 39 f8                           	cmp rax, r15
0x1b26:   72 26                              	jb 0x1b4e <function_1b00+0x4e>
0x1b28:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x1b30:   4c 89 75 f8                        	mov qword ptr [rbp - 8], r14
0x1b34:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1b38:   40 f6 c6 07                        	test sil, 7
0x1b3c:   74 08                              	je 0x1b46 <function_1b00+0x46>
0x1b3e:   48 89 f3                           	mov rbx, rsi
0x1b41:   e9 ba f8 ff ff                     	jmp 0x1400 <c5g9_info$def>
0x1b46:   48 8b 06                           	mov rax, qword ptr [rsi]
0x1b49:   48 89 f3                           	mov rbx, rsi
0x1b4c:   ff e0                              	jmp rax
0x1b4e:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1b52:   bb 00 00 00 00                     	mov ebx, 0
0x1b57:   ff e0                              	jmp rax
; data inside code section at 0x1b59 -- 0x1b61
0x1b59:   0f 1f 80 00 00 00 00 17                            |........        |
; function: function_1b61 at 0x1b61 -- 0x1b8a
0x1b61:   00 00                              	add byte ptr [rax], al
0x1b63:   00 03                              	add byte ptr [rbx], al
0x1b65:   00 00                              	add byte ptr [rax], al
0x1b67:   00 01                              	add byte ptr [rcx], al
0x1b69:   00 00                              	add byte ptr [rax], al
0x1b6b:   00 00                              	add byte ptr [rax], al
0x1b6d:   00 00                              	add byte ptr [rax], al
0x1b6f:   00 09                              	add byte ptr [rcx], cl
0x1b71:   00 00                              	add byte ptr [rax], al
0x1b73:   00 00                              	add byte ptr [rax], al
0x1b75:   00 00                              	add byte ptr [rax], al
0x1b77:   00 49 89                           	add byte ptr [rcx - 0x77], cl
0x1b7a:   f8                                 	clc 
0x1b7b:   48 89 f7                           	mov rdi, rsi
0x1b7e:   4c 89 f6                           	mov rsi, r14
0x1b81:   4c 8b 73 05                        	mov r14, qword ptr [rbx + 5]
0x1b85:   e9 0e fb ff ff                     	jmp 0x1698
; data inside code section at 0x1b8a -- 0x1b90
0x1b8a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_1b90 at 0x1b90 -- 0x1c26
0x1b90:   05 00 00 00 01                     	add eax, 0x1000000
0x1b95:   00 00                              	add byte ptr [rax], al
0x1b97:   00 00                              	add byte ptr [rax], al
0x1b99:   00 00                              	add byte ptr [rax], al
0x1b9b:   00 00                              	add byte ptr [rax], al
0x1b9d:   00 00                              	add byte ptr [rax], al
0x1b9f:   00 0e                              	add byte ptr [rsi], cl
0x1ba1:   00 00                              	add byte ptr [rax], al
0x1ba3:   00 00                              	add byte ptr [rax], al
0x1ba5:   00 00                              	add byte ptr [rax], al
0x1ba7:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1bab:   4d 8d 64 24 50                     	lea r12, [r12 + 0x50]
0x1bb0:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1bb7:   72 57                              	jb 0x1c10 <function_1b90+0x80>
0x1bb9:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1bc1:   4c 89 70 10                        	mov qword ptr [rax + 0x10], r14
0x1bc5:   48 c7 40 18 00 00 00 00            	mov qword ptr [rax + 0x18], 0
0x1bcd:   4c 89 70 20                        	mov qword ptr [rax + 0x20], r14
0x1bd1:   48 c7 40 28 00 00 00 00            	mov qword ptr [rax + 0x28], 0
0x1bd9:   4c 89 70 30                        	mov qword ptr [rax + 0x30], r14
0x1bdd:   48 c7 40 38 00 00 00 00            	mov qword ptr [rax + 0x38], 0
0x1be5:   66 49 0f 6e c4                     	movq xmm0, r12
0x1bea:   66 0f 70 c0 44                     	pshufd xmm0, xmm0, 0x44
0x1bef:   66 0f d4 05 09 2f 00 00            	paddq xmm0, xmmword ptr [rip + 0x2f09]
0x1bf7:   f3 0f 7f 40 40                     	movdqu xmmword ptr [rax + 0x40], xmm0
0x1bfc:   49 8d 4c 24 ba                     	lea rcx, [r12 - 0x46]
0x1c01:   48 89 48 50                        	mov qword ptr [rax + 0x50], rcx
0x1c05:   48 8b 45 00                        	mov rax, qword ptr [rbp]
0x1c09:   49 8d 5c 24 e9                     	lea rbx, [r12 - 0x17]
0x1c0e:   ff e0                              	jmp rax
0x1c10:   49 c7 85 88 03 00 00 50 00 00 00   	mov qword ptr [r13 + 0x388], 0x50
0x1c1b:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x1c1f:   bb 00 00 00 00                     	mov ebx, 0
0x1c24:   ff e0                              	jmp rax
; data inside code section at 0x1c26 -- 0x1c30
0x1c26:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: DataziUArr_foldl_slow at 0x1c30 -- 0x1c4d
0x1c30:   4c 8b 4d 20                        	mov r9, qword ptr [rbp + 0x20]
0x1c34:   4c 8b 45 18                        	mov r8, qword ptr [rbp + 0x18]
0x1c38:   48 8b 7d 10                        	mov rdi, qword ptr [rbp + 0x10]
0x1c3c:   4c 8b 75 00                        	mov r14, qword ptr [rbp]
0x1c40:   48 8b 75 08                        	mov rsi, qword ptr [rbp + 8]
0x1c44:   48 83 c5 28                        	add rbp, 0x28
0x1c48:   e9 2b 09 00 00                     	jmp 0x2578 <DataziUArr_foldl_info>
; data inside code section at 0x1c4d -- 0x1c50
0x1c4d:   0f 1f 00                                           |...             |
; function: function_1c50 at 0x1c50 -- 0x1cd2
0x1c50:   04 00                              	add al, 0
0x1c52:   00 00                              	add byte ptr [rax], al
0x1c54:   00 00                              	add byte ptr [rax], al
0x1c56:   00 00                              	add byte ptr [rax], al
0x1c58:   0f 00 00                           	sldt word ptr [rax]
0x1c5b:   00 00                              	add byte ptr [rax], al
0x1c5d:   00 00                              	add byte ptr [rax], al
0x1c5f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1c63:   48 8d 4d f0                        	lea rcx, [rbp - 0x10]
0x1c67:   4c 39 f9                           	cmp rcx, r15
0x1c6a:   72 4c                              	jb 0x1cb8 <function_1c50+0x68>
0x1c6c:   4c 8d 60 28                        	lea r12, [rax + 0x28]
0x1c70:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1c77:   72 48                              	jb 0x1cc1 <function_1c50+0x71>
0x1c79:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x1c81:   48 89 5d f8                        	mov qword ptr [rbp - 8], rbx
0x1c85:   48 8b 53 10                        	mov rdx, qword ptr [rbx + 0x10]
0x1c89:   48 8b 73 18                        	mov rsi, qword ptr [rbx + 0x18]
0x1c8d:   48 8b 7b 20                        	mov rdi, qword ptr [rbx + 0x20]
0x1c91:   4c 8b 73 28                        	mov r14, qword ptr [rbx + 0x28]
0x1c95:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1c9d:   48 89 50 18                        	mov qword ptr [rax + 0x18], rdx
0x1ca1:   48 89 78 20                        	mov qword ptr [rax + 0x20], rdi
0x1ca5:   48 89 70 28                        	mov qword ptr [rax + 0x28], rsi
0x1ca9:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1cad:   48 89 cd                           	mov rbp, rcx
0x1cb0:   48 89 d3                           	mov rbx, rdx
0x1cb3:   e9 d6 2f 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1cb8:   49 89 c4                           	mov r12, rax
0x1cbb:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1cbf:   ff e0                              	jmp rax
0x1cc1:   49 c7 85 88 03 00 00 28 00 00 00   	mov qword ptr [r13 + 0x388], 0x28
0x1ccc:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1cd0:   ff e0                              	jmp rax
; data inside code section at 0x1cd2 -- 0x1ce0
0x1cd2:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: function_1ce0 at 0x1ce0 -- 0x1d62
0x1ce0:   05 00 00 00 00                     	add eax, 0
0x1ce5:   00 00                              	add byte ptr [rax], al
0x1ce7:   00 0f                              	add byte ptr [rdi], cl
0x1ce9:   00 00                              	add byte ptr [rax], al
0x1ceb:   00 00                              	add byte ptr [rax], al
0x1ced:   00 00                              	add byte ptr [rax], al
0x1cef:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1cf3:   48 8d 4d f0                        	lea rcx, [rbp - 0x10]
0x1cf7:   4c 39 f9                           	cmp rcx, r15
0x1cfa:   72 4c                              	jb 0x1d48 <function_1ce0+0x68>
0x1cfc:   4c 8d 60 30                        	lea r12, [rax + 0x30]
0x1d00:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1d07:   72 48                              	jb 0x1d51 <function_1ce0+0x71>
0x1d09:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x1d11:   48 89 5d f8                        	mov qword ptr [rbp - 8], rbx
0x1d15:   48 8b 53 10                        	mov rdx, qword ptr [rbx + 0x10]
0x1d19:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x1d1d:   48 8b 73 28                        	mov rsi, qword ptr [rbx + 0x28]
0x1d21:   4c 8b 73 30                        	mov r14, qword ptr [rbx + 0x30]
0x1d25:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1d2d:   48 89 50 18                        	mov qword ptr [rax + 0x18], rdx
0x1d31:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x1d35:   48 89 70 30                        	mov qword ptr [rax + 0x30], rsi
0x1d39:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1d3d:   48 89 cd                           	mov rbp, rcx
0x1d40:   48 89 d3                           	mov rbx, rdx
0x1d43:   e9 46 2f 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1d48:   49 89 c4                           	mov r12, rax
0x1d4b:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1d4f:   ff e0                              	jmp rax
0x1d51:   49 c7 85 88 03 00 00 30 00 00 00   	mov qword ptr [r13 + 0x388], 0x30
0x1d5c:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1d60:   ff e0                              	jmp rax
; data inside code section at 0x1d62 -- 0x1d71
0x1d62:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00 06      |ff............. |
; function: function_1d71 at 0x1d71 -- 0x1df2
0x1d71:   00 00                              	add byte ptr [rax], al
0x1d73:   00 00                              	add byte ptr [rax], al
0x1d75:   00 00                              	add byte ptr [rax], al
0x1d77:   00 0f                              	add byte ptr [rdi], cl
0x1d79:   00 00                              	add byte ptr [rax], al
0x1d7b:   00 00                              	add byte ptr [rax], al
0x1d7d:   00 00                              	add byte ptr [rax], al
0x1d7f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1d83:   48 8d 4d f0                        	lea rcx, [rbp - 0x10]
0x1d87:   4c 39 f9                           	cmp rcx, r15
0x1d8a:   72 4c                              	jb 0x1dd8 <function_1d71+0x67>
0x1d8c:   4c 8d 60 38                        	lea r12, [rax + 0x38]
0x1d90:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1d97:   72 48                              	jb 0x1de1 <function_1d71+0x70>
0x1d99:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x1da1:   48 89 5d f8                        	mov qword ptr [rbp - 8], rbx
0x1da5:   48 8b 53 10                        	mov rdx, qword ptr [rbx + 0x10]
0x1da9:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x1dad:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x1db1:   4c 8b 73 38                        	mov r14, qword ptr [rbx + 0x38]
0x1db5:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1dbd:   48 89 50 18                        	mov qword ptr [rax + 0x18], rdx
0x1dc1:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x1dc5:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x1dc9:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1dcd:   48 89 cd                           	mov rbp, rcx
0x1dd0:   48 89 d3                           	mov rbx, rdx
0x1dd3:   e9 b6 2e 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1dd8:   49 89 c4                           	mov r12, rax
0x1ddb:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1ddf:   ff e0                              	jmp rax
0x1de1:   49 c7 85 88 03 00 00 38 00 00 00   	mov qword ptr [r13 + 0x388], 0x38
0x1dec:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1df0:   ff e0                              	jmp rax
; data inside code section at 0x1df2 -- 0x1e01
0x1df2:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00 07      |ff............. |
; function: function_1e01 at 0x1e01 -- 0x1e89
0x1e01:   00 00                              	add byte ptr [rax], al
0x1e03:   00 00                              	add byte ptr [rax], al
0x1e05:   00 00                              	add byte ptr [rax], al
0x1e07:   00 0f                              	add byte ptr [rdi], cl
0x1e09:   00 00                              	add byte ptr [rax], al
0x1e0b:   00 00                              	add byte ptr [rax], al
0x1e0d:   00 00                              	add byte ptr [rax], al
0x1e0f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1e13:   48 89 e9                           	mov rcx, rbp
0x1e16:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1e1a:   4c 39 fd                           	cmp rbp, r15
0x1e1d:   72 51                              	jb 0x1e70 <function_1e01+0x6f>
0x1e1f:   4c 8d 60 40                        	lea r12, [rax + 0x40]
0x1e23:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1e2a:   72 49                              	jb 0x1e75 <function_1e01+0x74>
0x1e2c:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x1e34:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x1e38:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x1e3c:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x1e40:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x1e44:   48 8b 53 38                        	mov rdx, qword ptr [rbx + 0x38]
0x1e48:   4c 8b 73 40                        	mov r14, qword ptr [rbx + 0x40]
0x1e4c:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1e54:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x1e58:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x1e5c:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x1e60:   48 89 50 40                        	mov qword ptr [rax + 0x40], rdx
0x1e64:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1e68:   48 89 cb                           	mov rbx, rcx
0x1e6b:   e9 1e 2e 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1e70:   49 89 c4                           	mov r12, rax
0x1e73:   eb 0b                              	jmp 0x1e80 <function_1e01+0x7f>
0x1e75:   49 c7 85 88 03 00 00 40 00 00 00   	mov qword ptr [r13 + 0x388], 0x40
0x1e80:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1e84:   48 89 cd                           	mov rbp, rcx
0x1e87:   ff e0                              	jmp rax
; data inside code section at 0x1e89 -- 0x1e90
0x1e89:   0f 1f 80 00 00 00 00                               |.......         |
; function: function_1e90 at 0x1e90 -- 0x1f19
0x1e90:   08 00                              	or byte ptr [rax], al
0x1e92:   00 00                              	add byte ptr [rax], al
0x1e94:   00 00                              	add byte ptr [rax], al
0x1e96:   00 00                              	add byte ptr [rax], al
0x1e98:   0f 00 00                           	sldt word ptr [rax]
0x1e9b:   00 00                              	add byte ptr [rax], al
0x1e9d:   00 00                              	add byte ptr [rax], al
0x1e9f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1ea3:   48 89 e9                           	mov rcx, rbp
0x1ea6:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1eaa:   4c 39 fd                           	cmp rbp, r15
0x1ead:   72 51                              	jb 0x1f00 <function_1e90+0x70>
0x1eaf:   4c 8d 60 48                        	lea r12, [rax + 0x48]
0x1eb3:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1eba:   72 49                              	jb 0x1f05 <function_1e90+0x75>
0x1ebc:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x1ec4:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x1ec8:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x1ecc:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x1ed0:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x1ed4:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x1ed8:   4c 8b 73 48                        	mov r14, qword ptr [rbx + 0x48]
0x1edc:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1ee4:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x1ee8:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x1eec:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x1ef0:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x1ef4:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1ef8:   48 89 cb                           	mov rbx, rcx
0x1efb:   e9 8e 2d 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1f00:   49 89 c4                           	mov r12, rax
0x1f03:   eb 0b                              	jmp 0x1f10 <function_1e90+0x80>
0x1f05:   49 c7 85 88 03 00 00 48 00 00 00   	mov qword ptr [r13 + 0x388], 0x48
0x1f10:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1f14:   48 89 cd                           	mov rbp, rcx
0x1f17:   ff e0                              	jmp rax
; data inside code section at 0x1f19 -- 0x1f20
0x1f19:   0f 1f 80 00 00 00 00                               |.......         |
; function: function_1f20 at 0x1f20 -- 0x1fb1
0x1f20:   09 00                              	or dword ptr [rax], eax
0x1f22:   00 00                              	add byte ptr [rax], al
0x1f24:   00 00                              	add byte ptr [rax], al
0x1f26:   00 00                              	add byte ptr [rax], al
0x1f28:   0f 00 00                           	sldt word ptr [rax]
0x1f2b:   00 00                              	add byte ptr [rax], al
0x1f2d:   00 00                              	add byte ptr [rax], al
0x1f2f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1f33:   48 89 e9                           	mov rcx, rbp
0x1f36:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1f3a:   4c 39 fd                           	cmp rbp, r15
0x1f3d:   72 59                              	jb 0x1f98 <function_1f20+0x78>
0x1f3f:   4c 8d 60 50                        	lea r12, [rax + 0x50]
0x1f43:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1f4a:   72 51                              	jb 0x1f9d <function_1f20+0x7d>
0x1f4c:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x1f54:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x1f58:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x1f5c:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x1f60:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x1f64:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x1f68:   48 8b 53 48                        	mov rdx, qword ptr [rbx + 0x48]
0x1f6c:   4c 8b 73 50                        	mov r14, qword ptr [rbx + 0x50]
0x1f70:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x1f78:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x1f7c:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x1f80:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x1f84:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x1f88:   48 89 50 50                        	mov qword ptr [rax + 0x50], rdx
0x1f8c:   48 8d 70 08                        	lea rsi, [rax + 8]
0x1f90:   48 89 cb                           	mov rbx, rcx
0x1f93:   e9 f6 2c 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x1f98:   49 89 c4                           	mov r12, rax
0x1f9b:   eb 0b                              	jmp 0x1fa8 <function_1f20+0x88>
0x1f9d:   49 c7 85 88 03 00 00 50 00 00 00   	mov qword ptr [r13 + 0x388], 0x50
0x1fa8:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x1fac:   48 89 cd                           	mov rbp, rcx
0x1faf:   ff e0                              	jmp rax
; data inside code section at 0x1fb1 -- 0x1fc0
0x1fb1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_1fc0 at 0x1fc0 -- 0x2051
0x1fc0:   0a 00                              	or al, byte ptr [rax]
0x1fc2:   00 00                              	add byte ptr [rax], al
0x1fc4:   00 00                              	add byte ptr [rax], al
0x1fc6:   00 00                              	add byte ptr [rax], al
0x1fc8:   0f 00 00                           	sldt word ptr [rax]
0x1fcb:   00 00                              	add byte ptr [rax], al
0x1fcd:   00 00                              	add byte ptr [rax], al
0x1fcf:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x1fd3:   48 89 e9                           	mov rcx, rbp
0x1fd6:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x1fda:   4c 39 fd                           	cmp rbp, r15
0x1fdd:   72 59                              	jb 0x2038 <function_1fc0+0x78>
0x1fdf:   4c 8d 60 58                        	lea r12, [rax + 0x58]
0x1fe3:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x1fea:   72 51                              	jb 0x203d <function_1fc0+0x7d>
0x1fec:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x1ff4:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x1ff8:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x1ffc:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x2000:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x2004:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x2008:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x200c:   4c 8b 73 58                        	mov r14, qword ptr [rbx + 0x58]
0x2010:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x2018:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x201c:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x2020:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x2024:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x2028:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x202c:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2030:   48 89 cb                           	mov rbx, rcx
0x2033:   e9 56 2c 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x2038:   49 89 c4                           	mov r12, rax
0x203b:   eb 0b                              	jmp 0x2048 <function_1fc0+0x88>
0x203d:   49 c7 85 88 03 00 00 58 00 00 00   	mov qword ptr [r13 + 0x388], 0x58
0x2048:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x204c:   48 89 cd                           	mov rbp, rcx
0x204f:   ff e0                              	jmp rax
; data inside code section at 0x2051 -- 0x2060
0x2051:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_2060 at 0x2060 -- 0x20f9
0x2060:   0b 00                              	or eax, dword ptr [rax]
0x2062:   00 00                              	add byte ptr [rax], al
0x2064:   00 00                              	add byte ptr [rax], al
0x2066:   00 00                              	add byte ptr [rax], al
0x2068:   0f 00 00                           	sldt word ptr [rax]
0x206b:   00 00                              	add byte ptr [rax], al
0x206d:   00 00                              	add byte ptr [rax], al
0x206f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x2073:   48 89 e9                           	mov rcx, rbp
0x2076:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x207a:   4c 39 fd                           	cmp rbp, r15
0x207d:   72 61                              	jb 0x20e0 <function_2060+0x80>
0x207f:   4c 8d 60 60                        	lea r12, [rax + 0x60]
0x2083:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x208a:   72 59                              	jb 0x20e5 <function_2060+0x85>
0x208c:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x2094:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x2098:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x209c:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x20a0:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x20a4:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x20a8:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x20ac:   48 8b 53 58                        	mov rdx, qword ptr [rbx + 0x58]
0x20b0:   4c 8b 73 60                        	mov r14, qword ptr [rbx + 0x60]
0x20b4:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x20bc:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x20c0:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x20c4:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x20c8:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x20cc:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x20d0:   48 89 50 60                        	mov qword ptr [rax + 0x60], rdx
0x20d4:   48 8d 70 08                        	lea rsi, [rax + 8]
0x20d8:   48 89 cb                           	mov rbx, rcx
0x20db:   e9 ae 2b 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x20e0:   49 89 c4                           	mov r12, rax
0x20e3:   eb 0b                              	jmp 0x20f0 <function_2060+0x90>
0x20e5:   49 c7 85 88 03 00 00 60 00 00 00   	mov qword ptr [r13 + 0x388], 0x60
0x20f0:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x20f4:   48 89 cd                           	mov rbp, rcx
0x20f7:   ff e0                              	jmp rax
; data inside code section at 0x20f9 -- 0x2100
0x20f9:   0f 1f 80 00 00 00 00                               |.......         |
; function: function_2100 at 0x2100 -- 0x2199
0x2100:   0c 00                              	or al, 0
0x2102:   00 00                              	add byte ptr [rax], al
0x2104:   00 00                              	add byte ptr [rax], al
0x2106:   00 00                              	add byte ptr [rax], al
0x2108:   0f 00 00                           	sldt word ptr [rax]
0x210b:   00 00                              	add byte ptr [rax], al
0x210d:   00 00                              	add byte ptr [rax], al
0x210f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x2113:   48 89 e9                           	mov rcx, rbp
0x2116:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x211a:   4c 39 fd                           	cmp rbp, r15
0x211d:   72 61                              	jb 0x2180 <function_2100+0x80>
0x211f:   4c 8d 60 68                        	lea r12, [rax + 0x68]
0x2123:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x212a:   72 59                              	jb 0x2185 <function_2100+0x85>
0x212c:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x2134:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x2138:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x213c:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x2140:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x2144:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x2148:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x214c:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x2150:   4c 8b 73 68                        	mov r14, qword ptr [rbx + 0x68]
0x2154:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x215c:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x2160:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x2164:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x2168:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x216c:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x2170:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x2174:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2178:   48 89 cb                           	mov rbx, rcx
0x217b:   e9 0e 2b 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x2180:   49 89 c4                           	mov r12, rax
0x2183:   eb 0b                              	jmp 0x2190 <function_2100+0x90>
0x2185:   49 c7 85 88 03 00 00 68 00 00 00   	mov qword ptr [r13 + 0x388], 0x68
0x2190:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x2194:   48 89 cd                           	mov rbp, rcx
0x2197:   ff e0                              	jmp rax
; data inside code section at 0x2199 -- 0x21a0
0x2199:   0f 1f 80 00 00 00 00                               |.......         |
; function: function_21a0 at 0x21a0 -- 0x2241
0x21a0:   0d 00 00 00 00                     	or eax, 0
0x21a5:   00 00                              	add byte ptr [rax], al
0x21a7:   00 0f                              	add byte ptr [rdi], cl
0x21a9:   00 00                              	add byte ptr [rax], al
0x21ab:   00 00                              	add byte ptr [rax], al
0x21ad:   00 00                              	add byte ptr [rax], al
0x21af:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x21b3:   48 89 e9                           	mov rcx, rbp
0x21b6:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x21ba:   4c 39 fd                           	cmp rbp, r15
0x21bd:   72 69                              	jb 0x2228 <function_21a0+0x88>
0x21bf:   4c 8d 60 70                        	lea r12, [rax + 0x70]
0x21c3:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x21ca:   72 61                              	jb 0x222d <function_21a0+0x8d>
0x21cc:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x21d4:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x21d8:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x21dc:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x21e0:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x21e4:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x21e8:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x21ec:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x21f0:   48 8b 53 68                        	mov rdx, qword ptr [rbx + 0x68]
0x21f4:   4c 8b 73 70                        	mov r14, qword ptr [rbx + 0x70]
0x21f8:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x2200:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x2204:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x2208:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x220c:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x2210:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x2214:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x2218:   48 89 50 70                        	mov qword ptr [rax + 0x70], rdx
0x221c:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2220:   48 89 cb                           	mov rbx, rcx
0x2223:   e9 66 2a 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x2228:   49 89 c4                           	mov r12, rax
0x222b:   eb 0b                              	jmp 0x2238 <function_21a0+0x98>
0x222d:   49 c7 85 88 03 00 00 70 00 00 00   	mov qword ptr [r13 + 0x388], 0x70
0x2238:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x223c:   48 89 cd                           	mov rbp, rcx
0x223f:   ff e0                              	jmp rax
; data inside code section at 0x2241 -- 0x2251
0x2241:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 0e   |ff...........@..|
; function: function_2251 at 0x2251 -- 0x22f1
0x2251:   00 00                              	add byte ptr [rax], al
0x2253:   00 00                              	add byte ptr [rax], al
0x2255:   00 00                              	add byte ptr [rax], al
0x2257:   00 0f                              	add byte ptr [rdi], cl
0x2259:   00 00                              	add byte ptr [rax], al
0x225b:   00 00                              	add byte ptr [rax], al
0x225d:   00 00                              	add byte ptr [rax], al
0x225f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x2263:   48 89 e9                           	mov rcx, rbp
0x2266:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x226a:   4c 39 fd                           	cmp rbp, r15
0x226d:   72 69                              	jb 0x22d8 <function_2251+0x87>
0x226f:   4c 8d 60 78                        	lea r12, [rax + 0x78]
0x2273:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x227a:   72 61                              	jb 0x22dd <function_2251+0x8c>
0x227c:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x2284:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x2288:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x228c:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x2290:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x2294:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x2298:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x229c:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x22a0:   0f 10 6b 68                        	movups xmm5, xmmword ptr [rbx + 0x68]
0x22a4:   4c 8b 73 78                        	mov r14, qword ptr [rbx + 0x78]
0x22a8:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x22b0:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x22b4:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x22b8:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x22bc:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x22c0:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x22c4:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x22c8:   0f 11 68 70                        	movups xmmword ptr [rax + 0x70], xmm5
0x22cc:   48 8d 70 08                        	lea rsi, [rax + 8]
0x22d0:   48 89 cb                           	mov rbx, rcx
0x22d3:   e9 b6 29 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x22d8:   49 89 c4                           	mov r12, rax
0x22db:   eb 0b                              	jmp 0x22e8 <function_2251+0x97>
0x22dd:   49 c7 85 88 03 00 00 78 00 00 00   	mov qword ptr [r13 + 0x388], 0x78
0x22e8:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x22ec:   48 89 cd                           	mov rbp, rcx
0x22ef:   ff e0                              	jmp rax
; data inside code section at 0x22f1 -- 0x2300
0x22f1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: function_2300 at 0x2300 -- 0x23b2
0x2300:   0f 00 00                           	sldt word ptr [rax]
0x2303:   00 00                              	add byte ptr [rax], al
0x2305:   00 00                              	add byte ptr [rax], al
0x2307:   00 0f                              	add byte ptr [rdi], cl
0x2309:   00 00                              	add byte ptr [rax], al
0x230b:   00 00                              	add byte ptr [rax], al
0x230d:   00 00                              	add byte ptr [rax], al
0x230f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x2313:   48 89 e9                           	mov rcx, rbp
0x2316:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x231a:   4c 39 fd                           	cmp rbp, r15
0x231d:   72 7a                              	jb 0x2399 <function_2300+0x99>
0x231f:   49 89 c4                           	mov r12, rax
0x2322:   49 83 ec 80                        	sub r12, -0x80
0x2326:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x232d:   72 6f                              	jb 0x239e <function_2300+0x9e>
0x232f:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x2337:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x233b:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x233f:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x2343:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x2347:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x234b:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x234f:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x2353:   0f 10 6b 68                        	movups xmm5, xmmword ptr [rbx + 0x68]
0x2357:   48 8b 53 78                        	mov rdx, qword ptr [rbx + 0x78]
0x235b:   4c 8b b3 80 00 00 00               	mov r14, qword ptr [rbx + 0x80]
0x2362:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x236a:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x236e:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x2372:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x2376:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x237a:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x237e:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x2382:   0f 11 68 70                        	movups xmmword ptr [rax + 0x70], xmm5
0x2386:   48 89 90 80 00 00 00               	mov qword ptr [rax + 0x80], rdx
0x238d:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2391:   48 89 cb                           	mov rbx, rcx
0x2394:   e9 f5 28 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x2399:   49 89 c4                           	mov r12, rax
0x239c:   eb 0b                              	jmp 0x23a9 <function_2300+0xa9>
0x239e:   49 c7 85 88 03 00 00 80 00 00 00   	mov qword ptr [r13 + 0x388], 0x80
0x23a9:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x23ad:   48 89 cd                           	mov rbp, rcx
0x23b0:   ff e0                              	jmp rax
; data inside code section at 0x23b2 -- 0x23c0
0x23b2:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: function_23c0 at 0x23c0 -- 0x2472
0x23c0:   10 00                              	adc byte ptr [rax], al
0x23c2:   00 00                              	add byte ptr [rax], al
0x23c4:   00 00                              	add byte ptr [rax], al
0x23c6:   00 00                              	add byte ptr [rax], al
0x23c8:   0f 00 00                           	sldt word ptr [rax]
0x23cb:   00 00                              	add byte ptr [rax], al
0x23cd:   00 00                              	add byte ptr [rax], al
0x23cf:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x23d3:   48 89 e9                           	mov rcx, rbp
0x23d6:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x23da:   4c 39 fd                           	cmp rbp, r15
0x23dd:   72 7a                              	jb 0x2459 <function_23c0+0x99>
0x23df:   4c 8d a0 88 00 00 00               	lea r12, [rax + 0x88]
0x23e6:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x23ed:   72 6f                              	jb 0x245e <function_23c0+0x9e>
0x23ef:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x23f7:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x23fb:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x23ff:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x2403:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x2407:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x240b:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x240f:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x2413:   0f 10 6b 68                        	movups xmm5, xmmword ptr [rbx + 0x68]
0x2417:   0f 10 73 78                        	movups xmm6, xmmword ptr [rbx + 0x78]
0x241b:   4c 8b b3 88 00 00 00               	mov r14, qword ptr [rbx + 0x88]
0x2422:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x242a:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x242e:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x2432:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x2436:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x243a:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x243e:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x2442:   0f 11 68 70                        	movups xmmword ptr [rax + 0x70], xmm5
0x2446:   0f 11 b0 80 00 00 00               	movups xmmword ptr [rax + 0x80], xmm6
0x244d:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2451:   48 89 cb                           	mov rbx, rcx
0x2454:   e9 35 28 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x2459:   49 89 c4                           	mov r12, rax
0x245c:   eb 0b                              	jmp 0x2469 <function_23c0+0xa9>
0x245e:   49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0x2469:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x246d:   48 89 cd                           	mov rbp, rcx
0x2470:   ff e0                              	jmp rax
; data inside code section at 0x2472 -- 0x2480
0x2472:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: function_2480 at 0x2480 -- 0x2544
0x2480:   11 00                              	adc dword ptr [rax], eax
0x2482:   00 00                              	add byte ptr [rax], al
0x2484:   00 00                              	add byte ptr [rax], al
0x2486:   00 00                              	add byte ptr [rax], al
0x2488:   0f 00 00                           	sldt word ptr [rax]
0x248b:   00 00                              	add byte ptr [rax], al
0x248d:   00 00                              	add byte ptr [rax], al
0x248f:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x2493:   48 89 e9                           	mov rcx, rbp
0x2496:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x249a:   4c 39 fd                           	cmp rbp, r15
0x249d:   0f 82 88 00 00 00                  	jb 0x252b <function_2480+0xab>
0x24a3:   4c 8d a0 90 00 00 00               	lea r12, [rax + 0x90]
0x24aa:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x24b1:   72 7d                              	jb 0x2530 <function_2480+0xb0>
0x24b3:   48 c7 41 f0 00 00 00 00            	mov qword ptr [rcx - 0x10], 0
0x24bb:   48 89 59 f8                        	mov qword ptr [rcx - 8], rbx
0x24bf:   48 8b 4b 10                        	mov rcx, qword ptr [rbx + 0x10]
0x24c3:   0f 10 43 18                        	movups xmm0, xmmword ptr [rbx + 0x18]
0x24c7:   0f 10 4b 28                        	movups xmm1, xmmword ptr [rbx + 0x28]
0x24cb:   0f 10 53 38                        	movups xmm2, xmmword ptr [rbx + 0x38]
0x24cf:   0f 10 5b 48                        	movups xmm3, xmmword ptr [rbx + 0x48]
0x24d3:   0f 10 63 58                        	movups xmm4, xmmword ptr [rbx + 0x58]
0x24d7:   0f 10 6b 68                        	movups xmm5, xmmword ptr [rbx + 0x68]
0x24db:   0f 10 73 78                        	movups xmm6, xmmword ptr [rbx + 0x78]
0x24df:   48 8b 93 88 00 00 00               	mov rdx, qword ptr [rbx + 0x88]
0x24e6:   4c 8b b3 90 00 00 00               	mov r14, qword ptr [rbx + 0x90]
0x24ed:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x24f5:   48 89 48 18                        	mov qword ptr [rax + 0x18], rcx
0x24f9:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x24fd:   0f 11 48 30                        	movups xmmword ptr [rax + 0x30], xmm1
0x2501:   0f 11 50 40                        	movups xmmword ptr [rax + 0x40], xmm2
0x2505:   0f 11 58 50                        	movups xmmword ptr [rax + 0x50], xmm3
0x2509:   0f 11 60 60                        	movups xmmword ptr [rax + 0x60], xmm4
0x250d:   0f 11 68 70                        	movups xmmword ptr [rax + 0x70], xmm5
0x2511:   0f 11 b0 80 00 00 00               	movups xmmword ptr [rax + 0x80], xmm6
0x2518:   48 89 90 90 00 00 00               	mov qword ptr [rax + 0x90], rdx
0x251f:   48 8d 70 08                        	lea rsi, [rax + 8]
0x2523:   48 89 cb                           	mov rbx, rcx
0x2526:   e9 63 27 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x252b:   49 89 c4                           	mov r12, rax
0x252e:   eb 0b                              	jmp 0x253b <function_2480+0xbb>
0x2530:   49 c7 85 88 03 00 00 90 00 00 00   	mov qword ptr [r13 + 0x388], 0x90
0x253b:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x253f:   48 89 cd                           	mov rbp, rcx
0x2542:   ff e0                              	jmp rax
; data inside code section at 0x2544 -- 0x2578
0x2544:   66 66 2e 0f 1f 84 00 00  00 00 00 90 b8 f6 ff ff   |ff..............|
0x2554:   ff ff ff ff 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2564:   12 00 00 00 00 00 00 00  00 00 00 00 0e 00 00 00   |................|
0x2574:   00 00 00 00                                        |....            |
; function: DataziUArr_foldl_info at 0x2578 -- 0x2623
0x2578:   4c 89 e0                           	mov rax, r12
0x257b:   4d 8d a4 24 98 00 00 00            	lea r12, [r12 + 0x98]
0x2583:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x258a:   72 69                              	jb 0x25f5 <DataziUArr_foldl_info+0x7d>
0x258c:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x2594:   4c 89 70 18                        	mov qword ptr [rax + 0x18], r14
0x2598:   48 89 70 20                        	mov qword ptr [rax + 0x20], rsi
0x259c:   48 89 78 28                        	mov qword ptr [rax + 0x28], rdi
0x25a0:   4c 89 40 30                        	mov qword ptr [rax + 0x30], r8
0x25a4:   4c 89 48 38                        	mov qword ptr [rax + 0x38], r9
0x25a8:   0f 10 45 00                        	movups xmm0, xmmword ptr [rbp]
0x25ac:   0f 11 40 40                        	movups xmmword ptr [rax + 0x40], xmm0
0x25b0:   0f 10 45 10                        	movups xmm0, xmmword ptr [rbp + 0x10]
0x25b4:   0f 11 40 50                        	movups xmmword ptr [rax + 0x50], xmm0
0x25b8:   0f 10 45 20                        	movups xmm0, xmmword ptr [rbp + 0x20]
0x25bc:   0f 11 40 60                        	movups xmmword ptr [rax + 0x60], xmm0
0x25c0:   0f 10 45 30                        	movups xmm0, xmmword ptr [rbp + 0x30]
0x25c4:   0f 11 40 70                        	movups xmmword ptr [rax + 0x70], xmm0
0x25c8:   0f 10 45 40                        	movups xmm0, xmmword ptr [rbp + 0x40]
0x25cc:   0f 11 80 80 00 00 00               	movups xmmword ptr [rax + 0x80], xmm0
0x25d3:   0f 10 45 50                        	movups xmm0, xmmword ptr [rbp + 0x50]
0x25d7:   0f 11 80 90 00 00 00               	movups xmmword ptr [rax + 0x90], xmm0
0x25de:   48 8d 70 08                        	lea rsi, [rax + 8]
0x25e2:   48 8b 45 60                        	mov rax, qword ptr [rbp + 0x60]
0x25e6:   48 83 c5 68                        	add rbp, 0x68
0x25ea:   4c 89 f3                           	mov rbx, r14
0x25ed:   49 89 c6                           	mov r14, rax
0x25f0:   e9 99 26 00 00                     	jmp 0x4c8e <stg_ap_pp_fast>
0x25f5:   49 c7 85 88 03 00 00 98 00 00 00   	mov qword ptr [r13 + 0x388], 0x98
0x2600:   4c 89 75 d8                        	mov qword ptr [rbp - 0x28], r14
0x2604:   48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0x2608:   48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0x260c:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x2610:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x2614:   48 8d 6d d8                        	lea rbp, [rbp - 0x28]
0x2618:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x261c:   bb 00 00 00 00                     	mov ebx, 0
0x2621:   ff e0                              	jmp rax
; data inside code section at 0x2623 -- 0x2630
0x2623:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: DataziUArr_map_slow at 0x2630 -- 0x264a
0x2630:   4c 8b 4d 20                        	mov r9, qword ptr [rbp + 0x20]
0x2634:   4c 8b 45 18                        	mov r8, qword ptr [rbp + 0x18]
0x2638:   48 8b 7d 10                        	mov rdi, qword ptr [rbp + 0x10]
0x263c:   4c 8b 75 00                        	mov r14, qword ptr [rbp]
0x2640:   48 8b 75 08                        	mov rsi, qword ptr [rbp + 8]
0x2644:   48 83 c5 28                        	add rbp, 0x28
0x2648:   eb 2e                              	jmp 0x2678 <DataziUArr_map_info>
; data inside code section at 0x264a -- 0x2672
0x264a:   66 0f 1f 44 00 00 b8 ff  ff ff ff ff ff ff 11 00   |f..D............|
0x265a:   00 00 00 00 00 00 00 00  00 00 11 00 00 00 00 00   |................|
0x266a:   00 00 00 00 00 00 0e 00                            |........        |
; function: function_2672 at 0x2672 -- 0x2678
0x2672:   00 00                              	add byte ptr [rax], al
0x2674:   00 00                              	add byte ptr [rax], al
0x2676:   00 00                              	add byte ptr [rax], al
; function: DataziUArr_map_info at 0x2678 -- 0x28f9
0x2678:   4c 89 e0                           	mov rax, r12
0x267b:   4d 8d a4 24 00 02 00 00            	lea r12, [r12 + 0x200]
0x2683:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x268a:   0f 82 38 02 00 00                  	jb 0x28c8 <DataziUArr_map_info+0x250>
0x2690:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x2698:   4c 89 70 18                        	mov qword ptr [rax + 0x18], r14
0x269c:   48 8b 4d 58                        	mov rcx, qword ptr [rbp + 0x58]
0x26a0:   48 89 48 20                        	mov qword ptr [rax + 0x20], rcx
0x26a4:   48 c7 40 28 00 00 00 00            	mov qword ptr [rax + 0x28], 0
0x26ac:   4c 89 70 38                        	mov qword ptr [rax + 0x38], r14
0x26b0:   48 8b 4d 50                        	mov rcx, qword ptr [rbp + 0x50]
0x26b4:   48 89 48 40                        	mov qword ptr [rax + 0x40], rcx
0x26b8:   48 c7 40 48 00 00 00 00            	mov qword ptr [rax + 0x48], 0
0x26c0:   4c 89 70 58                        	mov qword ptr [rax + 0x58], r14
0x26c4:   48 8b 4d 48                        	mov rcx, qword ptr [rbp + 0x48]
0x26c8:   48 89 48 60                        	mov qword ptr [rax + 0x60], rcx
0x26cc:   48 c7 40 68 00 00 00 00            	mov qword ptr [rax + 0x68], 0
0x26d4:   4c 89 70 78                        	mov qword ptr [rax + 0x78], r14
0x26d8:   48 8b 4d 40                        	mov rcx, qword ptr [rbp + 0x40]
0x26dc:   48 89 88 80 00 00 00               	mov qword ptr [rax + 0x80], rcx
0x26e3:   48 c7 80 88 00 00 00 00 00 00 00   	mov qword ptr [rax + 0x88], 0
0x26ee:   4c 89 b0 98 00 00 00               	mov qword ptr [rax + 0x98], r14
0x26f5:   48 8b 4d 38                        	mov rcx, qword ptr [rbp + 0x38]
0x26f9:   48 89 88 a0 00 00 00               	mov qword ptr [rax + 0xa0], rcx
0x2700:   48 c7 80 a8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xa8], 0
0x270b:   4c 89 b0 b8 00 00 00               	mov qword ptr [rax + 0xb8], r14
0x2712:   48 8b 4d 30                        	mov rcx, qword ptr [rbp + 0x30]
0x2716:   48 89 88 c0 00 00 00               	mov qword ptr [rax + 0xc0], rcx
0x271d:   48 c7 80 c8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xc8], 0
0x2728:   4c 89 b0 d8 00 00 00               	mov qword ptr [rax + 0xd8], r14
0x272f:   48 8b 4d 28                        	mov rcx, qword ptr [rbp + 0x28]
0x2733:   48 89 88 e0 00 00 00               	mov qword ptr [rax + 0xe0], rcx
0x273a:   48 c7 80 e8 00 00 00 00 00 00 00   	mov qword ptr [rax + 0xe8], 0
0x2745:   4c 89 b0 f8 00 00 00               	mov qword ptr [rax + 0xf8], r14
0x274c:   48 8b 4d 20                        	mov rcx, qword ptr [rbp + 0x20]
0x2750:   48 89 88 00 01 00 00               	mov qword ptr [rax + 0x100], rcx
0x2757:   48 c7 80 08 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x108], 0
0x2762:   4c 89 b0 18 01 00 00               	mov qword ptr [rax + 0x118], r14
0x2769:   48 8b 4d 18                        	mov rcx, qword ptr [rbp + 0x18]
0x276d:   48 89 88 20 01 00 00               	mov qword ptr [rax + 0x120], rcx
0x2774:   48 c7 80 28 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x128], 0
0x277f:   4c 89 b0 38 01 00 00               	mov qword ptr [rax + 0x138], r14
0x2786:   48 8b 4d 10                        	mov rcx, qword ptr [rbp + 0x10]
0x278a:   48 89 88 40 01 00 00               	mov qword ptr [rax + 0x140], rcx
0x2791:   48 c7 80 48 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x148], 0
0x279c:   4c 89 b0 58 01 00 00               	mov qword ptr [rax + 0x158], r14
0x27a3:   48 8b 4d 08                        	mov rcx, qword ptr [rbp + 8]
0x27a7:   48 89 88 60 01 00 00               	mov qword ptr [rax + 0x160], rcx
0x27ae:   48 c7 80 68 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x168], 0
0x27b9:   4c 89 b0 78 01 00 00               	mov qword ptr [rax + 0x178], r14
0x27c0:   48 8b 4d 00                        	mov rcx, qword ptr [rbp]
0x27c4:   48 89 88 80 01 00 00               	mov qword ptr [rax + 0x180], rcx
0x27cb:   4c 8d 50 08                        	lea r10, [rax + 8]
0x27cf:   48 c7 80 88 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x188], 0
0x27da:   4c 89 b0 98 01 00 00               	mov qword ptr [rax + 0x198], r14
0x27e1:   4c 89 88 a0 01 00 00               	mov qword ptr [rax + 0x1a0], r9
0x27e8:   4c 8d 58 28                        	lea r11, [rax + 0x28]
0x27ec:   48 c7 80 a8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1a8], 0
0x27f7:   4c 89 b0 b8 01 00 00               	mov qword ptr [rax + 0x1b8], r14
0x27fe:   4c 89 80 c0 01 00 00               	mov qword ptr [rax + 0x1c0], r8
0x2805:   48 8d 50 48                        	lea rdx, [rax + 0x48]
0x2809:   48 c7 80 c8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1c8], 0
0x2814:   4c 89 b0 d8 01 00 00               	mov qword ptr [rax + 0x1d8], r14
0x281b:   48 89 b8 e0 01 00 00               	mov qword ptr [rax + 0x1e0], rdi
0x2822:   48 8d 78 68                        	lea rdi, [rax + 0x68]
0x2826:   48 c7 80 e8 01 00 00 00 00 00 00   	mov qword ptr [rax + 0x1e8], 0
0x2831:   4c 89 b0 f8 01 00 00               	mov qword ptr [rax + 0x1f8], r14
0x2838:   48 8d 98 88 00 00 00               	lea rbx, [rax + 0x88]
0x283f:   48 89 b0 00 02 00 00               	mov qword ptr [rax + 0x200], rsi
0x2846:   48 8d 88 28 01 00 00               	lea rcx, [rax + 0x128]
0x284d:   48 89 4d 10                        	mov qword ptr [rbp + 0x10], rcx
0x2851:   48 8d 88 08 01 00 00               	lea rcx, [rax + 0x108]
0x2858:   48 89 4d 18                        	mov qword ptr [rbp + 0x18], rcx
0x285c:   48 8d 88 e8 00 00 00               	lea rcx, [rax + 0xe8]
0x2863:   48 89 4d 20                        	mov qword ptr [rbp + 0x20], rcx
0x2867:   48 8d 88 c8 00 00 00               	lea rcx, [rax + 0xc8]
0x286e:   48 89 4d 28                        	mov qword ptr [rbp + 0x28], rcx
0x2872:   48 8d 88 a8 00 00 00               	lea rcx, [rax + 0xa8]
0x2879:   48 89 4d 30                        	mov qword ptr [rbp + 0x30], rcx
0x287d:   48 8d 4d 10                        	lea rcx, [rbp + 0x10]
0x2881:   48 89 5d 38                        	mov qword ptr [rbp + 0x38], rbx
0x2885:   4c 8d 88 48 01 00 00               	lea r9, [rax + 0x148]
0x288c:   48 89 7d 40                        	mov qword ptr [rbp + 0x40], rdi
0x2890:   4c 8d 80 68 01 00 00               	lea r8, [rax + 0x168]
0x2897:   48 89 55 48                        	mov qword ptr [rbp + 0x48], rdx
0x289b:   48 8d b8 88 01 00 00               	lea rdi, [rax + 0x188]
0x28a2:   4c 89 5d 50                        	mov qword ptr [rbp + 0x50], r11
0x28a6:   48 8d b0 a8 01 00 00               	lea rsi, [rax + 0x1a8]
0x28ad:   4c 89 55 58                        	mov qword ptr [rbp + 0x58], r10
0x28b1:   4c 8d b0 c8 01 00 00               	lea r14, [rax + 0x1c8]
0x28b8:   48 8d 98 e8 01 00 00               	lea rbx, [rax + 0x1e8]
0x28bf:   48 8b 45 60                        	mov rax, qword ptr [rbp + 0x60]
0x28c3:   48 89 cd                           	mov rbp, rcx
0x28c6:   ff e0                              	jmp rax
0x28c8:   49 c7 85 88 03 00 00 00 02 00 00   	mov qword ptr [r13 + 0x388], 0x200
0x28d3:   48 8d 45 d8                        	lea rax, [rbp - 0x28]
0x28d7:   4c 89 75 d8                        	mov qword ptr [rbp - 0x28], r14
0x28db:   48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0x28df:   48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0x28e3:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x28e7:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x28eb:   49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x28ef:   bb 00 00 00 00                     	mov ebx, 0
0x28f4:   48 89 c5                           	mov rbp, rax
0x28f7:   ff e1                              	jmp rcx
; data inside code section at 0x28f9 -- 0x2900
0x28f9:   0f 1f 80 00 00 00 00                               |.......         |
; function: function_2900 at 0x2900 -- 0x29be
0x2900:   0f 00 00                           	sldt word ptr [rax]
0x2903:   00 02                              	add byte ptr [rdx], al
0x2905:   00 00                              	add byte ptr [rax], al
0x2907:   00 00                              	add byte ptr [rax], al
0x2909:   00 00                              	add byte ptr [rax], al
0x290b:   00 00                              	add byte ptr [rax], al
0x290d:   00 00                              	add byte ptr [rax], al
0x290f:   00 0e                              	add byte ptr [rsi], cl
0x2911:   00 00                              	add byte ptr [rax], al
0x2913:   00 00                              	add byte ptr [rax], al
0x2915:   00 00                              	add byte ptr [rax], al
0x2917:   00 48 8d                           	add byte ptr [rax - 0x73], cl
0x291a:   45 a0 4c 39 f8 0f 82 99 00 00      	movabs al, byte ptr [0x99820ff8394c]
0x2924:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2927:   45 f0 00 00                        	lock add byte ptr [rax], al
0x292b:   00 00                              	add byte ptr [rax], al
0x292d:   4c 89 75 f8                        	mov qword ptr [rbp - 8], r14
0x2931:   40 f6 c6 07                        	test sil, 7
0x2935:   74 7b                              	je 0x29b2 <function_2900+0xb2>
0x2937:   4c 8b 4e 1f                        	mov r9, qword ptr [rsi + 0x1f]
0x293b:   4c 8b 46 17                        	mov r8, qword ptr [rsi + 0x17]
0x293f:   48 8b 4e 07                        	mov rcx, qword ptr [rsi + 7]
0x2943:   48 8b 7e 0f                        	mov rdi, qword ptr [rsi + 0xf]
0x2947:   48 8b 56 27                        	mov rdx, qword ptr [rsi + 0x27]
0x294b:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x294f:   48 8b 56 2f                        	mov rdx, qword ptr [rsi + 0x2f]
0x2953:   48 89 55 a8                        	mov qword ptr [rbp - 0x58], rdx
0x2957:   48 8b 56 37                        	mov rdx, qword ptr [rsi + 0x37]
0x295b:   48 89 55 b0                        	mov qword ptr [rbp - 0x50], rdx
0x295f:   48 8b 56 3f                        	mov rdx, qword ptr [rsi + 0x3f]
0x2963:   48 89 55 b8                        	mov qword ptr [rbp - 0x48], rdx
0x2967:   48 8b 56 47                        	mov rdx, qword ptr [rsi + 0x47]
0x296b:   48 89 55 c0                        	mov qword ptr [rbp - 0x40], rdx
0x296f:   48 8b 56 4f                        	mov rdx, qword ptr [rsi + 0x4f]
0x2973:   48 89 55 c8                        	mov qword ptr [rbp - 0x38], rdx
0x2977:   48 8b 56 57                        	mov rdx, qword ptr [rsi + 0x57]
0x297b:   48 89 55 d0                        	mov qword ptr [rbp - 0x30], rdx
0x297f:   48 8b 56 5f                        	mov rdx, qword ptr [rsi + 0x5f]
0x2983:   48 89 55 d8                        	mov qword ptr [rbp - 0x28], rdx
0x2987:   48 8b 56 67                        	mov rdx, qword ptr [rsi + 0x67]
0x298b:   48 89 55 e0                        	mov qword ptr [rbp - 0x20], rdx
0x298f:   48 8b 56 6f                        	mov rdx, qword ptr [rsi + 0x6f]
0x2993:   48 89 55 e8                        	mov qword ptr [rbp - 0x18], rdx
0x2997:   48 8b 56 77                        	mov rdx, qword ptr [rsi + 0x77]
0x299b:   48 89 55 f0                        	mov qword ptr [rbp - 0x10], rdx
0x299f:   48 8b 56 7f                        	mov rdx, qword ptr [rsi + 0x7f]
0x29a3:   48 89 55 f8                        	mov qword ptr [rbp - 8], rdx
0x29a7:   48 89 c5                           	mov rbp, rax
0x29aa:   48 89 ce                           	mov rsi, rcx
0x29ad:   e9 c6 fc ff ff                     	jmp 0x2678 <DataziUArr_map_info>
0x29b2:   48 83 c5 f0                        	add rbp, -0x10
0x29b6:   48 8b 06                           	mov rax, qword ptr [rsi]
0x29b9:   48 89 f3                           	mov rbx, rsi
0x29bc:   ff e0                              	jmp rax
; function: function_29be at 0x29be -- 0x29c9
0x29be:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x29c2:   bb 00 00 00 00                     	mov ebx, 0
0x29c7:   ff e0                              	jmp rax
; data inside code section at 0x29c9 -- 0x29da
0x29c9:   0f 1f 80 00 00 00 00 01  00 00 00 00 00 00 00 1e   |................|
0x29d9:   00                                                 |.               |
; function: function_29da at 0x29da -- 0x2a5d
0x29da:   00 00                              	add byte ptr [rax], al
0x29dc:   00 00                              	add byte ptr [rax], al
0x29de:   00 00                              	add byte ptr [rax], al
0x29e0:   4c 8b 4b 1f                        	mov r9, qword ptr [rbx + 0x1f]
0x29e4:   4c 8b 43 17                        	mov r8, qword ptr [rbx + 0x17]
0x29e8:   48 8b 73 07                        	mov rsi, qword ptr [rbx + 7]
0x29ec:   48 8b 7b 0f                        	mov rdi, qword ptr [rbx + 0xf]
0x29f0:   4c 8b 75 08                        	mov r14, qword ptr [rbp + 8]
0x29f4:   48 8b 43 27                        	mov rax, qword ptr [rbx + 0x27]
0x29f8:   48 89 45 b0                        	mov qword ptr [rbp - 0x50], rax
0x29fc:   48 8b 43 2f                        	mov rax, qword ptr [rbx + 0x2f]
0x2a00:   48 89 45 b8                        	mov qword ptr [rbp - 0x48], rax
0x2a04:   48 8b 43 37                        	mov rax, qword ptr [rbx + 0x37]
0x2a08:   48 89 45 c0                        	mov qword ptr [rbp - 0x40], rax
0x2a0c:   48 8b 43 3f                        	mov rax, qword ptr [rbx + 0x3f]
0x2a10:   48 89 45 c8                        	mov qword ptr [rbp - 0x38], rax
0x2a14:   48 8b 43 47                        	mov rax, qword ptr [rbx + 0x47]
0x2a18:   48 89 45 d0                        	mov qword ptr [rbp - 0x30], rax
0x2a1c:   48 8b 43 4f                        	mov rax, qword ptr [rbx + 0x4f]
0x2a20:   48 89 45 d8                        	mov qword ptr [rbp - 0x28], rax
0x2a24:   48 8b 43 57                        	mov rax, qword ptr [rbx + 0x57]
0x2a28:   48 89 45 e0                        	mov qword ptr [rbp - 0x20], rax
0x2a2c:   48 8b 43 5f                        	mov rax, qword ptr [rbx + 0x5f]
0x2a30:   48 89 45 e8                        	mov qword ptr [rbp - 0x18], rax
0x2a34:   48 8b 43 67                        	mov rax, qword ptr [rbx + 0x67]
0x2a38:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x2a3c:   48 8b 43 6f                        	mov rax, qword ptr [rbx + 0x6f]
0x2a40:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x2a44:   48 8b 43 77                        	mov rax, qword ptr [rbx + 0x77]
0x2a48:   48 89 45 00                        	mov qword ptr [rbp], rax
0x2a4c:   48 8b 43 7f                        	mov rax, qword ptr [rbx + 0x7f]
0x2a50:   48 89 45 08                        	mov qword ptr [rbp + 8], rax
0x2a54:   48 8d 6d b0                        	lea rbp, [rbp - 0x50]
0x2a58:   e9 1b fc ff ff                     	jmp 0x2678 <DataziUArr_map_info>
; data inside code section at 0x2a5d -- 0x2a60
0x2a5d:   0f 1f 00                                           |...             |
; function: DataziUArr_new_slow at 0x2a60 -- 0x2a81
0x2a60:   4c 39 fd                           	cmp rbp, r15
0x2a63:   72 11                              	jb 0x2a76 <DataziUArr_new_slow+0x16>
0x2a65:   48 8b 5d 00                        	mov rbx, qword ptr [rbp]
0x2a69:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x2a71:   e9 58 22 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x2a76:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x2a7a:   bb 00 00 00 00                     	mov ebx, 0
0x2a7f:   ff e0                              	jmp rax
; data inside code section at 0x2a81 -- 0x2a97
0x2a81:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 a8   |ff...........@..|
0x2a91:   ff ff ff ff ff ff                                  |......          |
; function: function_2a97 at 0x2a97 -- 0x2b03
0x2a97:   ff 10                              	call qword ptr [rax]
0x2a99:   00 00                              	add byte ptr [rax], al
0x2a9b:   00 00                              	add byte ptr [rax], al
0x2a9d:   00 00                              	add byte ptr [rax], al
0x2a9f:   00 00                              	add byte ptr [rax], al
0x2aa1:   00 00                              	add byte ptr [rax], al
0x2aa3:   00 10                              	add byte ptr [rax], dl
0x2aa5:   00 00                              	add byte ptr [rax], al
0x2aa7:   00 00                              	add byte ptr [rax], al
0x2aa9:   00 00                              	add byte ptr [rax], al
0x2aab:   00 00                              	add byte ptr [rax], al
0x2aad:   00 00                              	add byte ptr [rax], al
0x2aaf:   00 0e                              	add byte ptr [rsi], cl
0x2ab1:   00 00                              	add byte ptr [rax], al
0x2ab3:   00 00                              	add byte ptr [rax], al
0x2ab5:   00 00                              	add byte ptr [rax], al
0x2ab7:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x2aba:   e8 48 8d 6d d8                     	call 0xffffffffd86db807 <unknown_ffffffffd86db807>
0x2abf:   4c 39 fd                           	cmp rbp, r15
0x2ac2:   72 20                              	jb 0x2ae4 <function_2a97+0x4d>
0x2ac4:   48 c7 40 d8 00 00 00 00            	mov qword ptr [rax - 0x28], 0
0x2acc:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x2ad0:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x2ad4:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x2ad8:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x2adc:   4c 89 f3                           	mov rbx, r14
0x2adf:   e9 ea 21 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x2ae4:   4c 89 70 d8                        	mov qword ptr [rax - 0x28], r14
0x2ae8:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x2aec:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x2af0:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x2af4:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x2af8:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x2afc:   bb 00 00 00 00                     	mov ebx, 0
0x2b01:   ff e0                              	jmp rax
; data inside code section at 0x2b03 -- 0x2b10
0x2b03:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: function_2b10 at 0x2b10 -- 0x2b33
0x2b10:   0f 00 00                           	sldt word ptr [rax]
0x2b13:   00 00                              	add byte ptr [rax], al
0x2b15:   00 00                              	add byte ptr [rax], al
0x2b17:   00 1e                              	add byte ptr [rsi], bl
0x2b19:   00 00                              	add byte ptr [rax], al
0x2b1b:   00 00                              	add byte ptr [rax], al
0x2b1d:   00 00                              	add byte ptr [rax], al
0x2b1f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2b22:   45 00 00                           	add byte ptr [r8], r8b
0x2b25:   00 00                              	add byte ptr [rax], al
0x2b27:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2b2a:   45 08 48 89                        	or byte ptr [r8 - 0x77], r9b
0x2b2e:   5d                                 	pop rbp
0x2b2f:   08 48 89                           	or byte ptr [rax - 0x77], cl
0x2b32:   c3                                 	ret 
; function: function_2b33 at 0x2b33 -- 0x2b38
0x2b33:   e9 96 21 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2b38 -- 0x2b40
0x2b38:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2b40 at 0x2b40 -- 0x2b63
0x2b40:   0f 00 00                           	sldt word ptr [rax]
0x2b43:   00 00                              	add byte ptr [rax], al
0x2b45:   00 00                              	add byte ptr [rax], al
0x2b47:   00 1e                              	add byte ptr [rsi], bl
0x2b49:   00 00                              	add byte ptr [rax], al
0x2b4b:   00 00                              	add byte ptr [rax], al
0x2b4d:   00 00                              	add byte ptr [rax], al
0x2b4f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2b52:   45 00 00                           	add byte ptr [r8], r8b
0x2b55:   00 00                              	add byte ptr [rax], al
0x2b57:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2b5a:   45 10 48 89                        	adc byte ptr [r8 - 0x77], r9b
0x2b5e:   5d                                 	pop rbp
0x2b5f:   10 48 89                           	adc byte ptr [rax - 0x77], cl
0x2b62:   c3                                 	ret 
; function: function_2b63 at 0x2b63 -- 0x2b68
0x2b63:   e9 66 21 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2b68 -- 0x2b70
0x2b68:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2b70 at 0x2b70 -- 0x2b93
0x2b70:   0f 00 00                           	sldt word ptr [rax]
0x2b73:   00 00                              	add byte ptr [rax], al
0x2b75:   00 00                              	add byte ptr [rax], al
0x2b77:   00 1e                              	add byte ptr [rsi], bl
0x2b79:   00 00                              	add byte ptr [rax], al
0x2b7b:   00 00                              	add byte ptr [rax], al
0x2b7d:   00 00                              	add byte ptr [rax], al
0x2b7f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2b82:   45 00 00                           	add byte ptr [r8], r8b
0x2b85:   00 00                              	add byte ptr [rax], al
0x2b87:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2b8a:   45 18 48 89                        	sbb byte ptr [r8 - 0x77], r9b
0x2b8e:   5d                                 	pop rbp
0x2b8f:   18 48 89                           	sbb byte ptr [rax - 0x77], cl
0x2b92:   c3                                 	ret 
; function: function_2b93 at 0x2b93 -- 0x2b98
0x2b93:   e9 36 21 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2b98 -- 0x2ba0
0x2b98:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2ba0 at 0x2ba0 -- 0x2bc3
0x2ba0:   0f 00 00                           	sldt word ptr [rax]
0x2ba3:   00 00                              	add byte ptr [rax], al
0x2ba5:   00 00                              	add byte ptr [rax], al
0x2ba7:   00 1e                              	add byte ptr [rsi], bl
0x2ba9:   00 00                              	add byte ptr [rax], al
0x2bab:   00 00                              	add byte ptr [rax], al
0x2bad:   00 00                              	add byte ptr [rax], al
0x2baf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2bb2:   45 00 00                           	add byte ptr [r8], r8b
0x2bb5:   00 00                              	add byte ptr [rax], al
0x2bb7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2bba:   45 20 48 89                        	and byte ptr [r8 - 0x77], r9b
0x2bbe:   5d                                 	pop rbp
0x2bbf:   20 48 89                           	and byte ptr [rax - 0x77], cl
0x2bc2:   c3                                 	ret 
; function: function_2bc3 at 0x2bc3 -- 0x2bc8
0x2bc3:   e9 06 21 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2bc8 -- 0x2bd0
0x2bc8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2bd0 at 0x2bd0 -- 0x2bf3
0x2bd0:   0f 00 00                           	sldt word ptr [rax]
0x2bd3:   00 00                              	add byte ptr [rax], al
0x2bd5:   00 00                              	add byte ptr [rax], al
0x2bd7:   00 1e                              	add byte ptr [rsi], bl
0x2bd9:   00 00                              	add byte ptr [rax], al
0x2bdb:   00 00                              	add byte ptr [rax], al
0x2bdd:   00 00                              	add byte ptr [rax], al
0x2bdf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2be2:   45 00 00                           	add byte ptr [r8], r8b
0x2be5:   00 00                              	add byte ptr [rax], al
0x2be7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2bea:   45 28 48 89                        	sub byte ptr [r8 - 0x77], r9b
0x2bee:   5d                                 	pop rbp
0x2bef:   28 48 89                           	sub byte ptr [rax - 0x77], cl
0x2bf2:   c3                                 	ret 
; function: function_2bf3 at 0x2bf3 -- 0x2bf8
0x2bf3:   e9 d6 20 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2bf8 -- 0x2c00
0x2bf8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2c00 at 0x2c00 -- 0x2c23
0x2c00:   0f 00 00                           	sldt word ptr [rax]
0x2c03:   00 00                              	add byte ptr [rax], al
0x2c05:   00 00                              	add byte ptr [rax], al
0x2c07:   00 1e                              	add byte ptr [rsi], bl
0x2c09:   00 00                              	add byte ptr [rax], al
0x2c0b:   00 00                              	add byte ptr [rax], al
0x2c0d:   00 00                              	add byte ptr [rax], al
0x2c0f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2c12:   45 00 00                           	add byte ptr [r8], r8b
0x2c15:   00 00                              	add byte ptr [rax], al
0x2c17:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2c1a:   45 30 48 89                        	xor byte ptr [r8 - 0x77], r9b
0x2c1e:   5d                                 	pop rbp
0x2c1f:   30 48 89                           	xor byte ptr [rax - 0x77], cl
0x2c22:   c3                                 	ret 
; function: function_2c23 at 0x2c23 -- 0x2c28
0x2c23:   e9 a6 20 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2c28 -- 0x2c30
0x2c28:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2c30 at 0x2c30 -- 0x2c53
0x2c30:   0f 00 00                           	sldt word ptr [rax]
0x2c33:   00 00                              	add byte ptr [rax], al
0x2c35:   00 00                              	add byte ptr [rax], al
0x2c37:   00 1e                              	add byte ptr [rsi], bl
0x2c39:   00 00                              	add byte ptr [rax], al
0x2c3b:   00 00                              	add byte ptr [rax], al
0x2c3d:   00 00                              	add byte ptr [rax], al
0x2c3f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2c42:   45 00 00                           	add byte ptr [r8], r8b
0x2c45:   00 00                              	add byte ptr [rax], al
0x2c47:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2c4a:   45 38 48 89                        	cmp byte ptr [r8 - 0x77], r9b
0x2c4e:   5d                                 	pop rbp
0x2c4f:   38 48 89                           	cmp byte ptr [rax - 0x77], cl
0x2c52:   c3                                 	ret 
; function: function_2c53 at 0x2c53 -- 0x2c58
0x2c53:   e9 76 20 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2c58 -- 0x2c60
0x2c58:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2c60 at 0x2c60 -- 0x2c88
0x2c60:   0f 00 00                           	sldt word ptr [rax]
0x2c63:   00 00                              	add byte ptr [rax], al
0x2c65:   00 00                              	add byte ptr [rax], al
0x2c67:   00 1e                              	add byte ptr [rsi], bl
0x2c69:   00 00                              	add byte ptr [rax], al
0x2c6b:   00 00                              	add byte ptr [rax], al
0x2c6d:   00 00                              	add byte ptr [rax], al
0x2c6f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2c72:   45 00 00                           	add byte ptr [r8], r8b
0x2c75:   00 00                              	add byte ptr [rax], al
0x2c77:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2c7a:   45 40 48 89 5d 40                  	mov qword ptr [rbp + 0x40], rbx
0x2c80:   48 89 c3                           	mov rbx, rax
0x2c83:   e9 46 20 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2c88 -- 0x2c90
0x2c88:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2c90 at 0x2c90 -- 0x2cb8
0x2c90:   0f 00 00                           	sldt word ptr [rax]
0x2c93:   00 00                              	add byte ptr [rax], al
0x2c95:   00 00                              	add byte ptr [rax], al
0x2c97:   00 1e                              	add byte ptr [rsi], bl
0x2c99:   00 00                              	add byte ptr [rax], al
0x2c9b:   00 00                              	add byte ptr [rax], al
0x2c9d:   00 00                              	add byte ptr [rax], al
0x2c9f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2ca2:   45 00 00                           	add byte ptr [r8], r8b
0x2ca5:   00 00                              	add byte ptr [rax], al
0x2ca7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2caa:   45 48 48 89 5d 48                  	mov qword ptr [rbp + 0x48], rbx
0x2cb0:   48 89 c3                           	mov rbx, rax
0x2cb3:   e9 16 20 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2cb8 -- 0x2cc0
0x2cb8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2cc0 at 0x2cc0 -- 0x2ce8
0x2cc0:   0f 00 00                           	sldt word ptr [rax]
0x2cc3:   00 00                              	add byte ptr [rax], al
0x2cc5:   00 00                              	add byte ptr [rax], al
0x2cc7:   00 1e                              	add byte ptr [rsi], bl
0x2cc9:   00 00                              	add byte ptr [rax], al
0x2ccb:   00 00                              	add byte ptr [rax], al
0x2ccd:   00 00                              	add byte ptr [rax], al
0x2ccf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2cd2:   45 00 00                           	add byte ptr [r8], r8b
0x2cd5:   00 00                              	add byte ptr [rax], al
0x2cd7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2cda:   45 50                              	push r8
0x2cdc:   48 89 5d 50                        	mov qword ptr [rbp + 0x50], rbx
0x2ce0:   48 89 c3                           	mov rbx, rax
0x2ce3:   e9 e6 1f 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2ce8 -- 0x2cf0
0x2ce8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2cf0 at 0x2cf0 -- 0x2d18
0x2cf0:   0f 00 00                           	sldt word ptr [rax]
0x2cf3:   00 00                              	add byte ptr [rax], al
0x2cf5:   00 00                              	add byte ptr [rax], al
0x2cf7:   00 1e                              	add byte ptr [rsi], bl
0x2cf9:   00 00                              	add byte ptr [rax], al
0x2cfb:   00 00                              	add byte ptr [rax], al
0x2cfd:   00 00                              	add byte ptr [rax], al
0x2cff:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2d02:   45 00 00                           	add byte ptr [r8], r8b
0x2d05:   00 00                              	add byte ptr [rax], al
0x2d07:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2d0a:   45 58                              	pop r8
0x2d0c:   48 89 5d 58                        	mov qword ptr [rbp + 0x58], rbx
0x2d10:   48 89 c3                           	mov rbx, rax
0x2d13:   e9 b6 1f 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2d18 -- 0x2d2a
0x2d18:   0f 1f 84 00 00 00 00 00  0f 00 00 00 00 00 00 00   |................|
0x2d28:   1e 00                                              |..              |
; function: function_2d2a at 0x2d2a -- 0x2d48
0x2d2a:   00 00                              	add byte ptr [rax], al
0x2d2c:   00 00                              	add byte ptr [rax], al
0x2d2e:   00 00                              	add byte ptr [rax], al
0x2d30:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x2d38:   48 8b 45 60                        	mov rax, qword ptr [rbp + 0x60]
0x2d3c:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x2d40:   48 89 c3                           	mov rbx, rax
0x2d43:   e9 86 1f 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2d48 -- 0x2d50
0x2d48:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2d50 at 0x2d50 -- 0x2d78
0x2d50:   0f 00 00                           	sldt word ptr [rax]
0x2d53:   00 00                              	add byte ptr [rax], al
0x2d55:   00 00                              	add byte ptr [rax], al
0x2d57:   00 1e                              	add byte ptr [rsi], bl
0x2d59:   00 00                              	add byte ptr [rax], al
0x2d5b:   00 00                              	add byte ptr [rax], al
0x2d5d:   00 00                              	add byte ptr [rax], al
0x2d5f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2d62:   45 00 00                           	add byte ptr [r8], r8b
0x2d65:   00 00                              	add byte ptr [rax], al
0x2d67:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2d6a:   45 68 48 89 5d 68                  	push 0x685d8948
0x2d70:   48 89 c3                           	mov rbx, rax
0x2d73:   e9 56 1f 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2d78 -- 0x2d80
0x2d78:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2d80 at 0x2d80 -- 0x2e44
0x2d80:   0f 00 00                           	sldt word ptr [rax]
0x2d83:   00 00                              	add byte ptr [rax], al
0x2d85:   00 00                              	add byte ptr [rax], al
0x2d87:   00 1e                              	add byte ptr [rsi], bl
0x2d89:   00 00                              	add byte ptr [rax], al
0x2d8b:   00 00                              	add byte ptr [rax], al
0x2d8d:   00 00                              	add byte ptr [rax], al
0x2d8f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2d92:   45 00 00                           	add byte ptr [r8], r8b
0x2d95:   00 00                              	add byte ptr [rax], al
0x2d97:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2d9a:   45 70 48                           	jo 0x2de5 <function_2d80+0x65>
0x2d9d:   89 5d 70                           	mov dword ptr [rbp + 0x70], ebx
0x2da0:   48 89 c3                           	mov rbx, rax
0x2da3:   e9 26 1f 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2da8 -- 0x2db0
0x2da8:   0f 1f 84 00 00 00 00 00                            |........        |
0x2db0:   0f 00 00                           	sldt word ptr [rax]
0x2db3:   00 00                              	add byte ptr [rax], al
0x2db5:   00 00                              	add byte ptr [rax], al
0x2db7:   00 1e                              	add byte ptr [rsi], bl
0x2db9:   00 00                              	add byte ptr [rax], al
0x2dbb:   00 00                              	add byte ptr [rax], al
0x2dbd:   00 00                              	add byte ptr [rax], al
0x2dbf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2dc2:   45 00 00                           	add byte ptr [r8], r8b
0x2dc5:   00 00                              	add byte ptr [rax], al
0x2dc7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2dca:   45 78 48                           	js 0x2e15
0x2dcd:   89 5d 78                           	mov dword ptr [rbp + 0x78], ebx
0x2dd0:   48 89 c3                           	mov rbx, rax
0x2dd3:   e9 f6 1e 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2dd8 -- 0x2de0
0x2dd8:   0f 1f 84 00 00 00 00 00                            |........        |
0x2de0:   0f 00 00                           	sldt word ptr [rax]
0x2de3:   00 00                              	add byte ptr [rax], al
0x2de5:   00 00                              	add byte ptr [rax], al
0x2de7:   00 1e                              	add byte ptr [rsi], bl
0x2de9:   00 00                              	add byte ptr [rax], al
0x2deb:   00 00                              	add byte ptr [rax], al
0x2ded:   00 00                              	add byte ptr [rax], al
0x2def:   00 4c 8b 4d                        	add byte ptr [rbx + rcx*4 + 0x4d], cl
0x2df3:   30 4c 8b 45                        	xor byte ptr [rbx + rcx*4 + 0x45], cl
0x2df7:   28 48 8b                           	sub byte ptr [rax - 0x75], cl
0x2dfa:   7d 20                              	jge 0x2e1c <function_2d80+0x9c>
0x2dfc:   48 8b 75 18                        	mov rsi, qword ptr [rbp + 0x18]
0x2e00:   48 8b 45 08                        	mov rax, qword ptr [rbp + 8]
0x2e04:   4c 8b 75 10                        	mov r14, qword ptr [rbp + 0x10]
0x2e08:   0f 10 45 38                        	movups xmm0, xmmword ptr [rbp + 0x38]
0x2e0c:   0f 11 45 30                        	movups xmmword ptr [rbp + 0x30], xmm0
0x2e10:   0f 10 45 48                        	movups xmm0, xmmword ptr [rbp + 0x48]
0x2e14:   0f 11 45 40                        	movups xmmword ptr [rbp + 0x40], xmm0
0x2e18:   0f 10 45 58                        	movups xmm0, xmmword ptr [rbp + 0x58]
0x2e1c:   0f 11 45 50                        	movups xmmword ptr [rbp + 0x50], xmm0
0x2e20:   0f 10 45 68                        	movups xmm0, xmmword ptr [rbp + 0x68]
0x2e24:   0f 11 45 60                        	movups xmmword ptr [rbp + 0x60], xmm0
0x2e28:   48 8b 4d 78                        	mov rcx, qword ptr [rbp + 0x78]
0x2e2c:   48 89 4d 70                        	mov qword ptr [rbp + 0x70], rcx
0x2e30:   48 89 5d 78                        	mov qword ptr [rbp + 0x78], rbx
0x2e34:   48 8b 8d 80 00 00 00               	mov rcx, qword ptr [rbp + 0x80]
0x2e3b:   48 8d 6d 30                        	lea rbp, [rbp + 0x30]
0x2e3f:   48 89 c3                           	mov rbx, rax
0x2e42:   ff e1                              	jmp rcx
; data inside code section at 0x2e44 -- 0x2e50
0x2e44:   66 66 2e 0f 1f 84 00 00  00 00 00 90               |ff..........    |
; function: DataziUArr_newb_slow at 0x2e50 -- 0x2e71
0x2e50:   4c 39 fd                           	cmp rbp, r15
0x2e53:   72 11                              	jb 0x2e66 <DataziUArr_newb_slow+0x16>
0x2e55:   48 8b 5d 00                        	mov rbx, qword ptr [rbp]
0x2e59:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x2e61:   e9 68 1e 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x2e66:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x2e6a:   bb 00 00 00 00                     	mov ebx, 0
0x2e6f:   ff e0                              	jmp rax
; data inside code section at 0x2e71 -- 0x2e87
0x2e71:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 a8   |ff...........@..|
0x2e81:   ff ff ff ff ff ff                                  |......          |
; function: function_2e87 at 0x2e87 -- 0x2ef3
0x2e87:   ff 10                              	call qword ptr [rax]
0x2e89:   00 00                              	add byte ptr [rax], al
0x2e8b:   00 00                              	add byte ptr [rax], al
0x2e8d:   00 00                              	add byte ptr [rax], al
0x2e8f:   00 00                              	add byte ptr [rax], al
0x2e91:   00 00                              	add byte ptr [rax], al
0x2e93:   00 10                              	add byte ptr [rax], dl
0x2e95:   00 00                              	add byte ptr [rax], al
0x2e97:   00 00                              	add byte ptr [rax], al
0x2e99:   00 00                              	add byte ptr [rax], al
0x2e9b:   00 00                              	add byte ptr [rax], al
0x2e9d:   00 00                              	add byte ptr [rax], al
0x2e9f:   00 0e                              	add byte ptr [rsi], cl
0x2ea1:   00 00                              	add byte ptr [rax], al
0x2ea3:   00 00                              	add byte ptr [rax], al
0x2ea5:   00 00                              	add byte ptr [rax], al
0x2ea7:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x2eaa:   e8 48 8d 6d d8                     	call 0xffffffffd86dbbf7 <unknown_ffffffffd86dbbf7>
0x2eaf:   4c 39 fd                           	cmp rbp, r15
0x2eb2:   72 20                              	jb 0x2ed4 <function_2e87+0x4d>
0x2eb4:   48 c7 40 d8 00 00 00 00            	mov qword ptr [rax - 0x28], 0
0x2ebc:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x2ec0:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x2ec4:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x2ec8:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x2ecc:   4c 89 f3                           	mov rbx, r14
0x2ecf:   e9 fa 1d 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x2ed4:   4c 89 70 d8                        	mov qword ptr [rax - 0x28], r14
0x2ed8:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x2edc:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x2ee0:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x2ee4:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x2ee8:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x2eec:   bb 00 00 00 00                     	mov ebx, 0
0x2ef1:   ff e0                              	jmp rax
; data inside code section at 0x2ef3 -- 0x2f00
0x2ef3:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: function_2f00 at 0x2f00 -- 0x2f23
0x2f00:   0f 00 00                           	sldt word ptr [rax]
0x2f03:   00 00                              	add byte ptr [rax], al
0x2f05:   00 00                              	add byte ptr [rax], al
0x2f07:   00 1e                              	add byte ptr [rsi], bl
0x2f09:   00 00                              	add byte ptr [rax], al
0x2f0b:   00 00                              	add byte ptr [rax], al
0x2f0d:   00 00                              	add byte ptr [rax], al
0x2f0f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2f12:   45 00 00                           	add byte ptr [r8], r8b
0x2f15:   00 00                              	add byte ptr [rax], al
0x2f17:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2f1a:   45 08 48 89                        	or byte ptr [r8 - 0x77], r9b
0x2f1e:   5d                                 	pop rbp
0x2f1f:   08 48 89                           	or byte ptr [rax - 0x77], cl
0x2f22:   c3                                 	ret 
; function: function_2f23 at 0x2f23 -- 0x2f28
0x2f23:   e9 a6 1d 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2f28 -- 0x2f30
0x2f28:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2f30 at 0x2f30 -- 0x2f53
0x2f30:   0f 00 00                           	sldt word ptr [rax]
0x2f33:   00 00                              	add byte ptr [rax], al
0x2f35:   00 00                              	add byte ptr [rax], al
0x2f37:   00 1e                              	add byte ptr [rsi], bl
0x2f39:   00 00                              	add byte ptr [rax], al
0x2f3b:   00 00                              	add byte ptr [rax], al
0x2f3d:   00 00                              	add byte ptr [rax], al
0x2f3f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2f42:   45 00 00                           	add byte ptr [r8], r8b
0x2f45:   00 00                              	add byte ptr [rax], al
0x2f47:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2f4a:   45 10 48 89                        	adc byte ptr [r8 - 0x77], r9b
0x2f4e:   5d                                 	pop rbp
0x2f4f:   10 48 89                           	adc byte ptr [rax - 0x77], cl
0x2f52:   c3                                 	ret 
; function: function_2f53 at 0x2f53 -- 0x2f58
0x2f53:   e9 76 1d 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2f58 -- 0x2f60
0x2f58:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2f60 at 0x2f60 -- 0x2f83
0x2f60:   0f 00 00                           	sldt word ptr [rax]
0x2f63:   00 00                              	add byte ptr [rax], al
0x2f65:   00 00                              	add byte ptr [rax], al
0x2f67:   00 1e                              	add byte ptr [rsi], bl
0x2f69:   00 00                              	add byte ptr [rax], al
0x2f6b:   00 00                              	add byte ptr [rax], al
0x2f6d:   00 00                              	add byte ptr [rax], al
0x2f6f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2f72:   45 00 00                           	add byte ptr [r8], r8b
0x2f75:   00 00                              	add byte ptr [rax], al
0x2f77:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2f7a:   45 18 48 89                        	sbb byte ptr [r8 - 0x77], r9b
0x2f7e:   5d                                 	pop rbp
0x2f7f:   18 48 89                           	sbb byte ptr [rax - 0x77], cl
0x2f82:   c3                                 	ret 
; function: function_2f83 at 0x2f83 -- 0x2f88
0x2f83:   e9 46 1d 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2f88 -- 0x2f90
0x2f88:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2f90 at 0x2f90 -- 0x2fb3
0x2f90:   0f 00 00                           	sldt word ptr [rax]
0x2f93:   00 00                              	add byte ptr [rax], al
0x2f95:   00 00                              	add byte ptr [rax], al
0x2f97:   00 1e                              	add byte ptr [rsi], bl
0x2f99:   00 00                              	add byte ptr [rax], al
0x2f9b:   00 00                              	add byte ptr [rax], al
0x2f9d:   00 00                              	add byte ptr [rax], al
0x2f9f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2fa2:   45 00 00                           	add byte ptr [r8], r8b
0x2fa5:   00 00                              	add byte ptr [rax], al
0x2fa7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2faa:   45 20 48 89                        	and byte ptr [r8 - 0x77], r9b
0x2fae:   5d                                 	pop rbp
0x2faf:   20 48 89                           	and byte ptr [rax - 0x77], cl
0x2fb2:   c3                                 	ret 
; function: function_2fb3 at 0x2fb3 -- 0x2fb8
0x2fb3:   e9 16 1d 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2fb8 -- 0x2fc0
0x2fb8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2fc0 at 0x2fc0 -- 0x2fe3
0x2fc0:   0f 00 00                           	sldt word ptr [rax]
0x2fc3:   00 00                              	add byte ptr [rax], al
0x2fc5:   00 00                              	add byte ptr [rax], al
0x2fc7:   00 1e                              	add byte ptr [rsi], bl
0x2fc9:   00 00                              	add byte ptr [rax], al
0x2fcb:   00 00                              	add byte ptr [rax], al
0x2fcd:   00 00                              	add byte ptr [rax], al
0x2fcf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x2fd2:   45 00 00                           	add byte ptr [r8], r8b
0x2fd5:   00 00                              	add byte ptr [rax], al
0x2fd7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x2fda:   45 28 48 89                        	sub byte ptr [r8 - 0x77], r9b
0x2fde:   5d                                 	pop rbp
0x2fdf:   28 48 89                           	sub byte ptr [rax - 0x77], cl
0x2fe2:   c3                                 	ret 
; function: function_2fe3 at 0x2fe3 -- 0x2fe8
0x2fe3:   e9 e6 1c 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x2fe8 -- 0x2ff0
0x2fe8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_2ff0 at 0x2ff0 -- 0x3013
0x2ff0:   0f 00 00                           	sldt word ptr [rax]
0x2ff3:   00 00                              	add byte ptr [rax], al
0x2ff5:   00 00                              	add byte ptr [rax], al
0x2ff7:   00 1e                              	add byte ptr [rsi], bl
0x2ff9:   00 00                              	add byte ptr [rax], al
0x2ffb:   00 00                              	add byte ptr [rax], al
0x2ffd:   00 00                              	add byte ptr [rax], al
0x2fff:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3002:   45 00 00                           	add byte ptr [r8], r8b
0x3005:   00 00                              	add byte ptr [rax], al
0x3007:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x300a:   45 30 48 89                        	xor byte ptr [r8 - 0x77], r9b
0x300e:   5d                                 	pop rbp
0x300f:   30 48 89                           	xor byte ptr [rax - 0x77], cl
0x3012:   c3                                 	ret 
; function: function_3013 at 0x3013 -- 0x3018
0x3013:   e9 b6 1c 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3018 -- 0x3020
0x3018:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_3020 at 0x3020 -- 0x3043
0x3020:   0f 00 00                           	sldt word ptr [rax]
0x3023:   00 00                              	add byte ptr [rax], al
0x3025:   00 00                              	add byte ptr [rax], al
0x3027:   00 1e                              	add byte ptr [rsi], bl
0x3029:   00 00                              	add byte ptr [rax], al
0x302b:   00 00                              	add byte ptr [rax], al
0x302d:   00 00                              	add byte ptr [rax], al
0x302f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3032:   45 00 00                           	add byte ptr [r8], r8b
0x3035:   00 00                              	add byte ptr [rax], al
0x3037:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x303a:   45 38 48 89                        	cmp byte ptr [r8 - 0x77], r9b
0x303e:   5d                                 	pop rbp
0x303f:   38 48 89                           	cmp byte ptr [rax - 0x77], cl
0x3042:   c3                                 	ret 
; function: function_3043 at 0x3043 -- 0x3048
0x3043:   e9 86 1c 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3048 -- 0x3050
0x3048:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_3050 at 0x3050 -- 0x3078
0x3050:   0f 00 00                           	sldt word ptr [rax]
0x3053:   00 00                              	add byte ptr [rax], al
0x3055:   00 00                              	add byte ptr [rax], al
0x3057:   00 1e                              	add byte ptr [rsi], bl
0x3059:   00 00                              	add byte ptr [rax], al
0x305b:   00 00                              	add byte ptr [rax], al
0x305d:   00 00                              	add byte ptr [rax], al
0x305f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3062:   45 00 00                           	add byte ptr [r8], r8b
0x3065:   00 00                              	add byte ptr [rax], al
0x3067:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x306a:   45 40 48 89 5d 40                  	mov qword ptr [rbp + 0x40], rbx
0x3070:   48 89 c3                           	mov rbx, rax
0x3073:   e9 56 1c 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3078 -- 0x3080
0x3078:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_3080 at 0x3080 -- 0x30a8
0x3080:   0f 00 00                           	sldt word ptr [rax]
0x3083:   00 00                              	add byte ptr [rax], al
0x3085:   00 00                              	add byte ptr [rax], al
0x3087:   00 1e                              	add byte ptr [rsi], bl
0x3089:   00 00                              	add byte ptr [rax], al
0x308b:   00 00                              	add byte ptr [rax], al
0x308d:   00 00                              	add byte ptr [rax], al
0x308f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3092:   45 00 00                           	add byte ptr [r8], r8b
0x3095:   00 00                              	add byte ptr [rax], al
0x3097:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x309a:   45 48 48 89 5d 48                  	mov qword ptr [rbp + 0x48], rbx
0x30a0:   48 89 c3                           	mov rbx, rax
0x30a3:   e9 26 1c 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x30a8 -- 0x30b0
0x30a8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_30b0 at 0x30b0 -- 0x30d8
0x30b0:   0f 00 00                           	sldt word ptr [rax]
0x30b3:   00 00                              	add byte ptr [rax], al
0x30b5:   00 00                              	add byte ptr [rax], al
0x30b7:   00 1e                              	add byte ptr [rsi], bl
0x30b9:   00 00                              	add byte ptr [rax], al
0x30bb:   00 00                              	add byte ptr [rax], al
0x30bd:   00 00                              	add byte ptr [rax], al
0x30bf:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x30c2:   45 00 00                           	add byte ptr [r8], r8b
0x30c5:   00 00                              	add byte ptr [rax], al
0x30c7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x30ca:   45 50                              	push r8
0x30cc:   48 89 5d 50                        	mov qword ptr [rbp + 0x50], rbx
0x30d0:   48 89 c3                           	mov rbx, rax
0x30d3:   e9 f6 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x30d8 -- 0x30e0
0x30d8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_30e0 at 0x30e0 -- 0x3108
0x30e0:   0f 00 00                           	sldt word ptr [rax]
0x30e3:   00 00                              	add byte ptr [rax], al
0x30e5:   00 00                              	add byte ptr [rax], al
0x30e7:   00 1e                              	add byte ptr [rsi], bl
0x30e9:   00 00                              	add byte ptr [rax], al
0x30eb:   00 00                              	add byte ptr [rax], al
0x30ed:   00 00                              	add byte ptr [rax], al
0x30ef:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x30f2:   45 00 00                           	add byte ptr [r8], r8b
0x30f5:   00 00                              	add byte ptr [rax], al
0x30f7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x30fa:   45 58                              	pop r8
0x30fc:   48 89 5d 58                        	mov qword ptr [rbp + 0x58], rbx
0x3100:   48 89 c3                           	mov rbx, rax
0x3103:   e9 c6 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3108 -- 0x311a
0x3108:   0f 1f 84 00 00 00 00 00  0f 00 00 00 00 00 00 00   |................|
0x3118:   1e 00                                              |..              |
; function: function_311a at 0x311a -- 0x3138
0x311a:   00 00                              	add byte ptr [rax], al
0x311c:   00 00                              	add byte ptr [rax], al
0x311e:   00 00                              	add byte ptr [rax], al
0x3120:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x3128:   48 8b 45 60                        	mov rax, qword ptr [rbp + 0x60]
0x312c:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3130:   48 89 c3                           	mov rbx, rax
0x3133:   e9 96 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3138 -- 0x3140
0x3138:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_3140 at 0x3140 -- 0x3168
0x3140:   0f 00 00                           	sldt word ptr [rax]
0x3143:   00 00                              	add byte ptr [rax], al
0x3145:   00 00                              	add byte ptr [rax], al
0x3147:   00 1e                              	add byte ptr [rsi], bl
0x3149:   00 00                              	add byte ptr [rax], al
0x314b:   00 00                              	add byte ptr [rax], al
0x314d:   00 00                              	add byte ptr [rax], al
0x314f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3152:   45 00 00                           	add byte ptr [r8], r8b
0x3155:   00 00                              	add byte ptr [rax], al
0x3157:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x315a:   45 68 48 89 5d 68                  	push 0x685d8948
0x3160:   48 89 c3                           	mov rbx, rax
0x3163:   e9 66 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3168 -- 0x3170
0x3168:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_3170 at 0x3170 -- 0x3268
0x3170:   0f 00 00                           	sldt word ptr [rax]
0x3173:   00 00                              	add byte ptr [rax], al
0x3175:   00 00                              	add byte ptr [rax], al
0x3177:   00 1e                              	add byte ptr [rsi], bl
0x3179:   00 00                              	add byte ptr [rax], al
0x317b:   00 00                              	add byte ptr [rax], al
0x317d:   00 00                              	add byte ptr [rax], al
0x317f:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x3182:   45 00 00                           	add byte ptr [r8], r8b
0x3185:   00 00                              	add byte ptr [rax], al
0x3187:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x318a:   45 70 48                           	jo 0x31d5 <function_3170+0x65>
0x318d:   89 5d 70                           	mov dword ptr [rbp + 0x70], ebx
0x3190:   48 89 c3                           	mov rbx, rax
0x3193:   e9 36 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x3198 -- 0x31a0
0x3198:   0f 1f 84 00 00 00 00 00                            |........        |
0x31a0:   0f 00 00                           	sldt word ptr [rax]
0x31a3:   00 00                              	add byte ptr [rax], al
0x31a5:   00 00                              	add byte ptr [rax], al
0x31a7:   00 1e                              	add byte ptr [rsi], bl
0x31a9:   00 00                              	add byte ptr [rax], al
0x31ab:   00 00                              	add byte ptr [rax], al
0x31ad:   00 00                              	add byte ptr [rax], al
0x31af:   00 48 c7                           	add byte ptr [rax - 0x39], cl
0x31b2:   45 00 00                           	add byte ptr [r8], r8b
0x31b5:   00 00                              	add byte ptr [rax], al
0x31b7:   00 48 8b                           	add byte ptr [rax - 0x75], cl
0x31ba:   45 78 48                           	js 0x3205
0x31bd:   89 5d 78                           	mov dword ptr [rbp + 0x78], ebx
0x31c0:   48 89 c3                           	mov rbx, rax
0x31c3:   e9 06 1b 00 00                     	jmp 0x4cce <stg_ap_0_fast>
; data inside code section at 0x31c8 -- 0x31d0
0x31c8:   0f 1f 84 00 00 00 00 00                            |........        |
0x31d0:   0f 00 00                           	sldt word ptr [rax]
0x31d3:   00 00                              	add byte ptr [rax], al
0x31d5:   00 00                              	add byte ptr [rax], al
0x31d7:   00 1e                              	add byte ptr [rsi], bl
0x31d9:   00 00                              	add byte ptr [rax], al
0x31db:   00 00                              	add byte ptr [rax], al
0x31dd:   00 00                              	add byte ptr [rax], al
0x31df:   00 4c 89 e0                        	add byte ptr [rcx + rcx*4 - 0x20], cl
0x31e3:   4d 8d a4 24 88 00 00 00            	lea r12, [r12 + 0x88]
0x31eb:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x31f2:   72 64                              	jb 0x3258 <function_3170+0xe8>
0x31f4:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x31fc:   0f 10 45 08                        	movups xmm0, xmmword ptr [rbp + 8]
0x3200:   0f 11 40 10                        	movups xmmword ptr [rax + 0x10], xmm0
0x3204:   0f 10 45 18                        	movups xmm0, xmmword ptr [rbp + 0x18]
0x3208:   0f 11 40 20                        	movups xmmword ptr [rax + 0x20], xmm0
0x320c:   0f 10 45 28                        	movups xmm0, xmmword ptr [rbp + 0x28]
0x3210:   0f 11 40 30                        	movups xmmword ptr [rax + 0x30], xmm0
0x3214:   0f 10 45 38                        	movups xmm0, xmmword ptr [rbp + 0x38]
0x3218:   0f 11 40 40                        	movups xmmword ptr [rax + 0x40], xmm0
0x321c:   0f 10 45 48                        	movups xmm0, xmmword ptr [rbp + 0x48]
0x3220:   0f 11 40 50                        	movups xmmword ptr [rax + 0x50], xmm0
0x3224:   0f 10 45 58                        	movups xmm0, xmmword ptr [rbp + 0x58]
0x3228:   0f 11 40 60                        	movups xmmword ptr [rax + 0x60], xmm0
0x322c:   0f 10 45 68                        	movups xmm0, xmmword ptr [rbp + 0x68]
0x3230:   0f 11 40 70                        	movups xmmword ptr [rax + 0x70], xmm0
0x3234:   48 8b 4d 78                        	mov rcx, qword ptr [rbp + 0x78]
0x3238:   48 89 88 80 00 00 00               	mov qword ptr [rax + 0x80], rcx
0x323f:   48 89 98 88 00 00 00               	mov qword ptr [rax + 0x88], rbx
0x3246:   48 8b 85 80 00 00 00               	mov rax, qword ptr [rbp + 0x80]
0x324d:   48 83 ed 80                        	sub rbp, -0x80
0x3251:   49 8d 5c 24 81                     	lea rbx, [r12 - 0x7f]
0x3256:   ff e0                              	jmp rax
0x3258:   49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0x3263:   e9 06 1a 00 00                     	jmp 0x4c6e <stg_gc_unpt_r1>
; data inside code section at 0x3268 -- 0x327a
0x3268:   0f 1f 84 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3278:   15 00                                              |..              |
; function: function_327a at 0x327a -- 0x32d3
0x327a:   00 00                              	add byte ptr [rax], al
0x327c:   00 00                              	add byte ptr [rax], al
0x327e:   00 00                              	add byte ptr [rax], al
0x3280:   4d 89 fe                           	mov r14, r15
0x3283:   4c 8d 7d f0                        	lea r15, [rbp - 0x10]
0x3287:   4d 39 f7                           	cmp r15, r14
0x328a:   72 3e                              	jb 0x32ca <function_327a+0x50>
0x328c:   50                                 	push rax
0x328d:   4c 89 ef                           	mov rdi, r13
0x3290:   48 89 de                           	mov rsi, rbx
0x3293:   e8 3e 1a 00 00                     	call 0x4cd6 <newCAF>
0x3298:   48 85 c0                           	test rax, rax
0x329b:   48 8d 64 24 08                     	lea rsp, [rsp + 8]
0x32a0:   74 20                              	je 0x32c2 <function_327a+0x48>
0x32a2:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x32aa:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x32ae:   4c 89 f0                           	mov rax, r14
0x32b1:   41 be 00 00 00 00                  	mov r14d, 0
0x32b7:   4c 89 fd                           	mov rbp, r15
0x32ba:   49 89 c7                           	mov r15, rax
0x32bd:   e9 24 1a 00 00                     	jmp 0x4ce6 <ghczmprim_GHCziCString_unpackCStringzh_info>
0x32c2:   48 8b 03                           	mov rax, qword ptr [rbx]
0x32c5:   4d 89 f7                           	mov r15, r14
0x32c8:   ff e0                              	jmp rax
0x32ca:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x32ce:   4d 89 f7                           	mov r15, r14
0x32d1:   ff e0                              	jmp rax
; data inside code section at 0x32d3 -- 0x32ea
0x32d3:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 00 00 00   |ff.........f....|
0x32e3:   00 00 00 00 00 15 00                               |.......         |
; function: function_32ea at 0x32ea -- 0x3343
0x32ea:   00 00                              	add byte ptr [rax], al
0x32ec:   00 00                              	add byte ptr [rax], al
0x32ee:   00 00                              	add byte ptr [rax], al
0x32f0:   4d 89 fe                           	mov r14, r15
0x32f3:   4c 8d 7d f0                        	lea r15, [rbp - 0x10]
0x32f7:   4d 39 f7                           	cmp r15, r14
0x32fa:   72 3e                              	jb 0x333a <function_32ea+0x50>
0x32fc:   50                                 	push rax
0x32fd:   4c 89 ef                           	mov rdi, r13
0x3300:   48 89 de                           	mov rsi, rbx
0x3303:   e8 ce 19 00 00                     	call 0x4cd6 <newCAF>
0x3308:   48 85 c0                           	test rax, rax
0x330b:   48 8d 64 24 08                     	lea rsp, [rsp + 8]
0x3310:   74 20                              	je 0x3332 <function_32ea+0x48>
0x3312:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x331a:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x331e:   4c 89 f0                           	mov rax, r14
0x3321:   41 be 00 00 00 00                  	mov r14d, 0
0x3327:   4c 89 fd                           	mov rbp, r15
0x332a:   49 89 c7                           	mov r15, rax
0x332d:   e9 b4 19 00 00                     	jmp 0x4ce6 <ghczmprim_GHCziCString_unpackCStringzh_info>
0x3332:   48 8b 03                           	mov rax, qword ptr [rbx]
0x3335:   4d 89 f7                           	mov r15, r14
0x3338:   ff e0                              	jmp rax
0x333a:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x333e:   4d 89 f7                           	mov r15, r14
0x3341:   ff e0                              	jmp rax
; data inside code section at 0x3343 -- 0x335a
0x3343:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 00 00 00   |ff.........f....|
0x3353:   00 00 00 00 00 15 00                               |.......         |
; function: function_335a at 0x335a -- 0x33b3
0x335a:   00 00                              	add byte ptr [rax], al
0x335c:   00 00                              	add byte ptr [rax], al
0x335e:   00 00                              	add byte ptr [rax], al
0x3360:   4d 89 fe                           	mov r14, r15
0x3363:   4c 8d 7d f0                        	lea r15, [rbp - 0x10]
0x3367:   4d 39 f7                           	cmp r15, r14
0x336a:   72 3e                              	jb 0x33aa <function_335a+0x50>
0x336c:   50                                 	push rax
0x336d:   4c 89 ef                           	mov rdi, r13
0x3370:   48 89 de                           	mov rsi, rbx
0x3373:   e8 5e 19 00 00                     	call 0x4cd6 <newCAF>
0x3378:   48 85 c0                           	test rax, rax
0x337b:   48 8d 64 24 08                     	lea rsp, [rsp + 8]
0x3380:   74 20                              	je 0x33a2 <function_335a+0x48>
0x3382:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x338a:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x338e:   4c 89 f0                           	mov rax, r14
0x3391:   41 be 00 00 00 00                  	mov r14d, 0
0x3397:   4c 89 fd                           	mov rbp, r15
0x339a:   49 89 c7                           	mov r15, rax
0x339d:   e9 44 19 00 00                     	jmp 0x4ce6 <ghczmprim_GHCziCString_unpackCStringzh_info>
0x33a2:   48 8b 03                           	mov rax, qword ptr [rbx]
0x33a5:   4d 89 f7                           	mov r15, r14
0x33a8:   ff e0                              	jmp rax
0x33aa:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x33ae:   4d 89 f7                           	mov r15, r14
0x33b1:   ff e0                              	jmp rax
; data inside code section at 0x33b3 -- 0x33ca
0x33b3:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 00 00 00   |ff.........f....|
0x33c3:   00 00 00 00 00 15 00                               |.......         |
; function: function_33ca at 0x33ca -- 0x3423
0x33ca:   00 00                              	add byte ptr [rax], al
0x33cc:   00 00                              	add byte ptr [rax], al
0x33ce:   00 00                              	add byte ptr [rax], al
0x33d0:   4d 89 fe                           	mov r14, r15
0x33d3:   4c 8d 7d f0                        	lea r15, [rbp - 0x10]
0x33d7:   4d 39 f7                           	cmp r15, r14
0x33da:   72 3e                              	jb 0x341a <function_33ca+0x50>
0x33dc:   50                                 	push rax
0x33dd:   4c 89 ef                           	mov rdi, r13
0x33e0:   48 89 de                           	mov rsi, rbx
0x33e3:   e8 ee 18 00 00                     	call 0x4cd6 <newCAF>
0x33e8:   48 85 c0                           	test rax, rax
0x33eb:   48 8d 64 24 08                     	lea rsp, [rsp + 8]
0x33f0:   74 20                              	je 0x3412 <function_33ca+0x48>
0x33f2:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x33fa:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x33fe:   4c 89 f0                           	mov rax, r14
0x3401:   41 be 00 00 00 00                  	mov r14d, 0
0x3407:   4c 89 fd                           	mov rbp, r15
0x340a:   49 89 c7                           	mov r15, rax
0x340d:   e9 d4 18 00 00                     	jmp 0x4ce6 <ghczmprim_GHCziCString_unpackCStringzh_info>
0x3412:   48 8b 03                           	mov rax, qword ptr [rbx]
0x3415:   4d 89 f7                           	mov r15, r14
0x3418:   ff e0                              	jmp rax
0x341a:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x341e:   4d 89 f7                           	mov r15, r14
0x3421:   ff e0                              	jmp rax
; data inside code section at 0x3423 -- 0x343a
0x3423:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 00 00 00   |ff.........f....|
0x3433:   00 00 00 00 00 15 00                               |.......         |
; function: function_343a at 0x343a -- 0x3493
0x343a:   00 00                              	add byte ptr [rax], al
0x343c:   00 00                              	add byte ptr [rax], al
0x343e:   00 00                              	add byte ptr [rax], al
0x3440:   4d 89 fe                           	mov r14, r15
0x3443:   4c 8d 7d f0                        	lea r15, [rbp - 0x10]
0x3447:   4d 39 f7                           	cmp r15, r14
0x344a:   72 3e                              	jb 0x348a <function_343a+0x50>
0x344c:   50                                 	push rax
0x344d:   4c 89 ef                           	mov rdi, r13
0x3450:   48 89 de                           	mov rsi, rbx
0x3453:   e8 7e 18 00 00                     	call 0x4cd6 <newCAF>
0x3458:   48 85 c0                           	test rax, rax
0x345b:   48 8d 64 24 08                     	lea rsp, [rsp + 8]
0x3460:   74 20                              	je 0x3482 <function_343a+0x48>
0x3462:   48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0x346a:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x346e:   4c 89 f0                           	mov rax, r14
0x3471:   41 be 00 00 00 00                  	mov r14d, 0
0x3477:   4c 89 fd                           	mov rbp, r15
0x347a:   49 89 c7                           	mov r15, rax
0x347d:   e9 64 18 00 00                     	jmp 0x4ce6 <ghczmprim_GHCziCString_unpackCStringzh_info>
0x3482:   48 8b 03                           	mov rax, qword ptr [rbx]
0x3485:   4d 89 f7                           	mov r15, r14
0x3488:   ff e0                              	jmp rax
0x348a:   49 8b 45 f0                        	mov rax, qword ptr [r13 - 0x10]
0x348e:   4d 89 f7                           	mov r15, r14
0x3491:   ff e0                              	jmp rax
; data inside code section at 0x3493 -- 0x34a0
0x3493:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90            |ff.........f.   |
; function: function_34a0 at 0x34a0 -- 0x34f7
0x34a0:   00 00                              	add byte ptr [rax], al
0x34a2:   00 00                              	add byte ptr [rax], al
0x34a4:   01 00                              	add dword ptr [rax], eax
0x34a6:   00 00                              	add byte ptr [rax], al
0x34a8:   11 00                              	adc dword ptr [rax], eax
0x34aa:   00 00                              	add byte ptr [rax], al
0x34ac:   40 0f 00 00                        	sldt word ptr [rax]
0x34b0:   48 89 e8                           	mov rax, rbp
0x34b3:   48 8d 6d e8                        	lea rbp, [rbp - 0x18]
0x34b7:   4c 39 fd                           	cmp rbp, r15
0x34ba:   72 32                              	jb 0x34ee <function_34a0+0x4e>
0x34bc:   48 89 58 f8                        	mov qword ptr [rax - 8], rbx
0x34c0:   b9 00 00 00 00                     	mov ecx, 0
0x34c5:   66 48 0f 6e c1                     	movq xmm0, rcx
0x34ca:   b9 00 00 00 00                     	mov ecx, 0
0x34cf:   66 48 0f 6e c9                     	movq xmm1, rcx
0x34d4:   66 0f 6c c8                        	punpcklqdq xmm1, xmm0
0x34d8:   f3 0f 7f 48 e8                     	movdqu xmmword ptr [rax - 0x18], xmm1
0x34dd:   48 8b 73 10                        	mov rsi, qword ptr [rbx + 0x10]
0x34e1:   bf 00 00 00 00                     	mov edi, 0
0x34e6:   45 31 f6                           	xor r14d, r14d
0x34e9:   e9 00 18 00 00                     	jmp 0x4cee <base_GHCziShow_zdwshowSignedInt_info>
0x34ee:   49 8b 4d f0                        	mov rcx, qword ptr [r13 - 0x10]
0x34f2:   48 89 c5                           	mov rbp, rax
0x34f5:   ff e1                              	jmp rcx
; data inside code section at 0x34f7 -- 0x350a
0x34f7:   66 0f 1f 84 00 00 00 00  00 00 00 00 00 00 00 00   |f...............|
0x3507:   00 1e 00                                           |...             |
; function: function_350a at 0x350a -- 0x3540
0x350a:   00 00                              	add byte ptr [rax], al
0x350c:   e0 0e                              	loopne 0x351c <function_350a+0x12>
0x350e:   00 00                              	add byte ptr [rax], al
0x3510:   4c 89 f7                           	mov rdi, r14
0x3513:   48 83 c5 08                        	add rbp, 8
; data inside code section at 0x3517 -- 0x351a
0x3517:   41 be 00                                           |A..             |
0x351a:   00 00                              	add byte ptr [rax], al
0x351c:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x351f:   de e9                              	fsubp st(1)
0x3521:   d1 17                              	rcl dword ptr [rdi], 1
0x3523:   00 00                              	add byte ptr [rax], al
0x3525:   66 66 2e 0f 1f 84 00 00 00 00 00   	nop word ptr cs:[rax + rax]
0x3530:   04 00                              	add al, 0
0x3532:   00 00                              	add byte ptr [rax], al
0x3534:   01 00                              	add dword ptr [rax], eax
0x3536:   00 00                              	add byte ptr [rax], al
0x3538:   02 00                              	add al, byte ptr [rax]
0x353a:   00 00                              	add byte ptr [rax], al
0x353c:   00 00                              	add byte ptr [rax], al
0x353e:   00 00                              	add byte ptr [rax], al
; data inside code section at 0x3540 -- 0x3541
0x3540:   0e                                                 |.               |
; function: function_3541 at 0x3541 -- 0x35a1
0x3541:   00 00                              	add byte ptr [rax], al
0x3543:   00 00                              	add byte ptr [rax], al
0x3545:   00 00                              	add byte ptr [rax], al
0x3547:   00 4c 89 e1                        	add byte ptr [rcx + rcx*4 - 0x1f], cl
0x354b:   48 8d 45 f8                        	lea rax, [rbp - 8]
0x354f:   4c 39 f8                           	cmp rax, r15
0x3552:   72 32                              	jb 0x3586 <function_3541+0x45>
0x3554:   4c 8d 61 18                        	lea r12, [rcx + 0x18]
0x3558:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x355f:   72 2a                              	jb 0x358b <function_3541+0x4a>
0x3561:   48 c7 41 08 00 00 00 00            	mov qword ptr [rcx + 8], 0
0x3569:   4c 89 71 18                        	mov qword ptr [rcx + 0x18], r14
0x356d:   48 8d 71 08                        	lea rsi, [rcx + 8]
0x3571:   48 c7 00 00 00 00 00               	mov qword ptr [rax], 0
0x3578:   41 be 00 00 00 00                  	mov r14d, 0
0x357e:   48 89 c5                           	mov rbp, rax
0x3581:   e9 78 17 00 00                     	jmp 0x4cfe <ghczmprim_GHCziCString_unpackAppendCStringzh_info>
0x3586:   49 89 cc                           	mov r12, rcx
0x3589:   eb 0b                              	jmp 0x3596 <function_3541+0x55>
0x358b:   49 c7 85 88 03 00 00 18 00 00 00   	mov qword ptr [r13 + 0x388], 0x18
0x3596:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x359a:   bb 00 00 00 00                     	mov ebx, 0
0x359f:   ff e0                              	jmp rax
; data inside code section at 0x35a1 -- 0x35b1
0x35a1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 00   |ff...........@..|
; function: function_35b1 at 0x35b1 -- 0x35d2
0x35b1:   00 00                              	add byte ptr [rax], al
0x35b3:   00 00                              	add byte ptr [rax], al
0x35b5:   00 00                              	add byte ptr [rax], al
0x35b7:   00 1e                              	add byte ptr [rsi], bl
0x35b9:   00 00                              	add byte ptr [rax], al
0x35bb:   00 50 0e                           	add byte ptr [rax + 0xe], dl
0x35be:   00 00                              	add byte ptr [rax], al
0x35c0:   48 83 c5 08                        	add rbp, 8
0x35c4:   41 be 00 00 00 00                  	mov r14d, 0
0x35ca:   48 89 de                           	mov rsi, rbx
0x35cd:   e9 34 17 00 00                     	jmp 0x4d06 <base_GHCziErr_error_info>
; data inside code section at 0x35d2 -- 0x35e0
0x35d2:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: DataziUArr_index_slow at 0x35e0 -- 0x3619
0x35e0:   4c 39 fd                           	cmp rbp, r15
0x35e3:   72 29                              	jb 0x360e <DataziUArr_index_slow+0x2e>
0x35e5:   48 8b 45 00                        	mov rax, qword ptr [rbp]
0x35e9:   48 8b 9d 80 00 00 00               	mov rbx, qword ptr [rbp + 0x80]
0x35f0:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x35f8:   48 89 85 80 00 00 00               	mov qword ptr [rbp + 0x80], rax
0x35ff:   f6 c3 07                           	test bl, 7
0x3602:   74 05                              	je 0x3609 <DataziUArr_index_slow+0x29>
0x3604:   e9 a7 00 00 00                     	jmp 0x36b0 <c6D7_info$def>
0x3609:   48 8b 03                           	mov rax, qword ptr [rbx]
0x360c:   ff e0                              	jmp rax
0x360e:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3612:   bb 00 00 00 00                     	mov ebx, 0
0x3617:   ff e0                              	jmp rax
; data inside code section at 0x3619 -- 0x3627
0x3619:   0f 1f 80 00 00 00 00 98  ff ff ff ff ff ff         |..............  |
; function: function_3627 at 0x3627 -- 0x369f
0x3627:   ff 11                              	call qword ptr [rcx]
0x3629:   00 00                              	add byte ptr [rax], al
0x362b:   00 00                              	add byte ptr [rax], al
0x362d:   00 00                              	add byte ptr [rax], al
0x362f:   00 00                              	add byte ptr [rax], al
0x3631:   00 00                              	add byte ptr [rax], al
0x3633:   00 11                              	add byte ptr [rcx], dl
0x3635:   00 00                              	add byte ptr [rax], al
0x3637:   00 00                              	add byte ptr [rax], al
0x3639:   00 00                              	add byte ptr [rax], al
0x363b:   00 00                              	add byte ptr [rax], al
0x363d:   00 00                              	add byte ptr [rax], al
0x363f:   00 0e                              	add byte ptr [rsi], cl
0x3641:   00 00                              	add byte ptr [rax], al
0x3643:   00 e8                              	add al, ch
0x3645:   0d 00 00 48 89                     	or eax, 0x89480000
0x364a:   e8 48 8d 6d d8                     	call 0xffffffffd86dc397 <unknown_ffffffffd86dc397>
0x364f:   4c 39 fd                           	cmp rbp, r15
0x3652:   72 2c                              	jb 0x3680 <function_3627+0x59>
0x3654:   48 c7 40 d8 00 00 00 00            	mov qword ptr [rax - 0x28], 0
0x365c:   48 8b 58 58                        	mov rbx, qword ptr [rax + 0x58]
0x3660:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x3664:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x3668:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x366c:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x3670:   4c 89 70 58                        	mov qword ptr [rax + 0x58], r14
0x3674:   f6 c3 07                           	test bl, 7
0x3677:   74 02                              	je 0x367b <function_3627+0x54>
0x3679:   eb 35                              	jmp 0x36b0 <c6D7_info$def>
0x367b:   48 8b 03                           	mov rax, qword ptr [rbx]
0x367e:   ff e0                              	jmp rax
0x3680:   4c 89 70 d8                        	mov qword ptr [rax - 0x28], r14
0x3684:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x3688:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x368c:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x3690:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x3694:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3698:   bb 00 00 00 00                     	mov ebx, 0
0x369d:   ff e0                              	jmp rax
; data inside code section at 0x369f -- 0x36b0
0x369f:   90 10 00 00 00 00 00 00  00 1e 00 00 00 80 0d 00   |................|
0x36af:   00                                                 |.               |
; function: c6D7_info$def at 0x36b0 -- 0x3837
0x36b0:   4c 8b 73 07                        	mov r14, qword ptr [rbx + 7]
0x36b4:   49 83 fe 0f                        	cmp r14, 0xf
0x36b8:   77 1b                              	ja 0x36d5 <c6D7_info$def+0x25>
0x36ba:   42 ff 24 f5 00 00 00 00            	jmp qword ptr [r14*8]
0x36c2:   48 8b 9d 80 00 00 00               	mov rbx, qword ptr [rbp + 0x80]
0x36c9:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x36d0:   e9 f9 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x36d5:   48 89 e9                           	mov rcx, rbp
0x36d8:   48 83 e9 80                        	sub rcx, -0x80
0x36dc:   4c 39 f9                           	cmp rcx, r15
0x36df:   0f 82 2d 01 00 00                  	jb 0x3812 <c6D7_info$def+0x162>
0x36e5:   49 8d 44 24 18                     	lea rax, [r12 + 0x18]
0x36ea:   49 39 85 58 03 00 00               	cmp qword ptr [r13 + 0x358], rax
0x36f1:   0f 82 20 01 00 00                  	jb 0x3817 <c6D7_info$def+0x167>
0x36f7:   49 8d 74 24 08                     	lea rsi, [r12 + 8]
0x36fc:   49 c7 44 24 08 00 00 00 00         	mov qword ptr [r12 + 8], 0
0x3705:   4d 89 74 24 18                     	mov qword ptr [r12 + 0x18], r14
0x370a:   48 c7 01 00 00 00 00               	mov qword ptr [rcx], 0
0x3711:   41 be 00 00 00 00                  	mov r14d, 0
0x3717:   48 89 cd                           	mov rbp, rcx
0x371a:   49 89 c4                           	mov r12, rax
0x371d:   e9 dc 15 00 00                     	jmp 0x4cfe <ghczmprim_GHCziCString_unpackAppendCStringzh_info>
0x3722:   48 8b 5d 08                        	mov rbx, qword ptr [rbp + 8]
0x3726:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x372d:   e9 9c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3732:   48 8b 5d 10                        	mov rbx, qword ptr [rbp + 0x10]
0x3736:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x373d:   e9 8c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3742:   48 8b 5d 18                        	mov rbx, qword ptr [rbp + 0x18]
0x3746:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x374d:   e9 7c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3752:   48 8b 5d 20                        	mov rbx, qword ptr [rbp + 0x20]
0x3756:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x375d:   e9 6c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3762:   48 8b 5d 28                        	mov rbx, qword ptr [rbp + 0x28]
0x3766:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x376d:   e9 5c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3772:   48 8b 5d 30                        	mov rbx, qword ptr [rbp + 0x30]
0x3776:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x377d:   e9 4c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3782:   48 8b 5d 38                        	mov rbx, qword ptr [rbp + 0x38]
0x3786:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x378d:   e9 3c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3792:   48 8b 5d 40                        	mov rbx, qword ptr [rbp + 0x40]
0x3796:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x379d:   e9 2c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37a2:   48 8b 5d 48                        	mov rbx, qword ptr [rbp + 0x48]
0x37a6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37ad:   e9 1c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37b2:   48 8b 5d 50                        	mov rbx, qword ptr [rbp + 0x50]
0x37b6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37bd:   e9 0c 15 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37c2:   48 8b 5d 58                        	mov rbx, qword ptr [rbp + 0x58]
0x37c6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37cd:   e9 fc 14 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37d2:   48 8b 5d 60                        	mov rbx, qword ptr [rbp + 0x60]
0x37d6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37dd:   e9 ec 14 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37e2:   48 8b 5d 68                        	mov rbx, qword ptr [rbp + 0x68]
0x37e6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37ed:   e9 dc 14 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x37f2:   48 8b 5d 70                        	mov rbx, qword ptr [rbp + 0x70]
0x37f6:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x37fd:   e9 cc 14 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3802:   48 8b 5d 78                        	mov rbx, qword ptr [rbp + 0x78]
0x3806:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x380d:   e9 bc 14 00 00                     	jmp 0x4cce <stg_ap_0_fast>
0x3812:   4c 89 e0                           	mov rax, r12
0x3815:   eb 0b                              	jmp 0x3822 <c6D7_info$def+0x172>
0x3817:   49 c7 85 88 03 00 00 18 00 00 00   	mov qword ptr [r13 + 0x388], 0x18
0x3822:   48 81 c5 88 00 00 00               	add rbp, 0x88
0x3829:   49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x382d:   bb 00 00 00 00                     	mov ebx, 0
0x3832:   49 89 c4                           	mov r12, rax
0x3835:   ff e1                              	jmp rcx
; data inside code section at 0x3837 -- 0x3840
0x3837:   66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_3840 at 0x3840 -- 0x3884
0x3840:   0f 00 00                           	sldt word ptr [rax]
0x3843:   00 02                              	add byte ptr [rdx], al
0x3845:   00 00                              	add byte ptr [rax], al
0x3847:   00 00                              	add byte ptr [rax], al
0x3849:   00 00                              	add byte ptr [rax], al
0x384b:   00 00                              	add byte ptr [rax], al
0x384d:   00 00                              	add byte ptr [rax], al
0x384f:   00 0e                              	add byte ptr [rsi], cl
0x3851:   00 00                              	add byte ptr [rax], al
0x3853:   00 f8                              	add al, bh
0x3855:   0b 00                              	or eax, dword ptr [rax]
0x3857:   00 48 8d                           	add byte ptr [rax - 0x73], cl
0x385a:   45 a0 4c 39 f8 72 23 48 c7 45      	movabs al, byte ptr [0x45c7482372f8394c]
0x3864:   f0 00 00                           	lock add byte ptr [rax], al
0x3867:   00 00                              	add byte ptr [rax], al
0x3869:   48 89 75 f8                        	mov qword ptr [rbp - 8], rsi
0x386d:   48 8d 6d f0                        	lea rbp, [rbp - 0x10]
0x3871:   41 f6 c6 07                        	test r14b, 7
0x3875:   74 05                              	je 0x387c <function_3840+0x3c>
0x3877:   4c 89 f3                           	mov rbx, r14
0x387a:   eb 24                              	jmp 0x38a0 <c6If_info$def>
0x387c:   49 8b 06                           	mov rax, qword ptr [r14]
0x387f:   4c 89 f3                           	mov rbx, r14
0x3882:   ff e0                              	jmp rax
; function: function_3884 at 0x3884 -- 0x388f
0x3884:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3888:   bb 00 00 00 00                     	mov ebx, 0
0x388d:   ff e0                              	jmp rax
; data inside code section at 0x388f -- 0x38a0
0x388f:   90 01 00 00 00 00 00 00  00 1e 00 00 00 b0 0b 00   |................|
0x389f:   00                                                 |.               |
; function: c6If_info$def at 0x38a0 -- 0x396c
0x38a0:   4c 8b 43 27                        	mov r8, qword ptr [rbx + 0x27]
0x38a4:   48 8b 53 1f                        	mov rdx, qword ptr [rbx + 0x1f]
0x38a8:   48 8b 73 17                        	mov rsi, qword ptr [rbx + 0x17]
0x38ac:   48 8b 7b 07                        	mov rdi, qword ptr [rbx + 7]
0x38b0:   48 8b 4b 0f                        	mov rcx, qword ptr [rbx + 0xf]
0x38b4:   48 8b 43 2f                        	mov rax, qword ptr [rbx + 0x2f]
0x38b8:   48 89 45 b0                        	mov qword ptr [rbp - 0x50], rax
0x38bc:   48 8b 43 37                        	mov rax, qword ptr [rbx + 0x37]
0x38c0:   48 89 45 b8                        	mov qword ptr [rbp - 0x48], rax
0x38c4:   48 8b 43 3f                        	mov rax, qword ptr [rbx + 0x3f]
0x38c8:   48 89 45 c0                        	mov qword ptr [rbp - 0x40], rax
0x38cc:   48 8b 43 47                        	mov rax, qword ptr [rbx + 0x47]
0x38d0:   48 89 45 c8                        	mov qword ptr [rbp - 0x38], rax
0x38d4:   48 8b 43 4f                        	mov rax, qword ptr [rbx + 0x4f]
0x38d8:   48 89 45 d0                        	mov qword ptr [rbp - 0x30], rax
0x38dc:   48 8b 43 57                        	mov rax, qword ptr [rbx + 0x57]
0x38e0:   48 89 45 d8                        	mov qword ptr [rbp - 0x28], rax
0x38e4:   48 8b 43 5f                        	mov rax, qword ptr [rbx + 0x5f]
0x38e8:   48 89 45 e0                        	mov qword ptr [rbp - 0x20], rax
0x38ec:   48 8b 43 67                        	mov rax, qword ptr [rbx + 0x67]
0x38f0:   48 89 45 e8                        	mov qword ptr [rbp - 0x18], rax
0x38f4:   48 8b 43 6f                        	mov rax, qword ptr [rbx + 0x6f]
0x38f8:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x38fc:   48 8b 43 77                        	mov rax, qword ptr [rbx + 0x77]
0x3900:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x3904:   48 8b 43 7f                        	mov rax, qword ptr [rbx + 0x7f]
0x3908:   48 89 45 00                        	mov qword ptr [rbp], rax
0x390c:   48 8d 45 88                        	lea rax, [rbp - 0x78]
0x3910:   4c 39 f8                           	cmp rax, r15
0x3913:   72 35                              	jb 0x394a <c6If_info$def+0xaa>
0x3915:   48 c7 45 88 00 00 00 00            	mov qword ptr [rbp - 0x78], 0
0x391d:   48 8b 5d 08                        	mov rbx, qword ptr [rbp + 8]
0x3921:   48 89 4d 90                        	mov qword ptr [rbp - 0x70], rcx
0x3925:   48 89 75 98                        	mov qword ptr [rbp - 0x68], rsi
0x3929:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x392d:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x3931:   48 89 7d 08                        	mov qword ptr [rbp + 8], rdi
0x3935:   f6 c3 07                           	test bl, 7
0x3938:   74 08                              	je 0x3942 <c6If_info$def+0xa2>
0x393a:   48 89 c5                           	mov rbp, rax
0x393d:   e9 6e fd ff ff                     	jmp 0x36b0 <c6D7_info$def>
0x3942:   48 8b 0b                           	mov rcx, qword ptr [rbx]
0x3945:   48 89 c5                           	mov rbp, rax
0x3948:   ff e1                              	jmp rcx
0x394a:   48 89 7d 88                        	mov qword ptr [rbp - 0x78], rdi
0x394e:   48 89 4d 90                        	mov qword ptr [rbp - 0x70], rcx
0x3952:   48 89 75 98                        	mov qword ptr [rbp - 0x68], rsi
0x3956:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x395a:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x395e:   49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x3962:   bb 00 00 00 00                     	mov ebx, 0
0x3967:   48 89 c5                           	mov rbp, rax
0x396a:   ff e1                              	jmp rcx
; data inside code section at 0x396c -- 0x3970
0x396c:   0f 1f 40 00                                        |..@.            |
; function: function_3970 at 0x3970 -- 0x39c7
0x3970:   00 00                              	add byte ptr [rax], al
0x3972:   00 00                              	add byte ptr [rax], al
0x3974:   01 00                              	add dword ptr [rax], eax
0x3976:   00 00                              	add byte ptr [rax], al
0x3978:   11 00                              	adc dword ptr [rax], eax
0x397a:   00 00                              	add byte ptr [rax], al
0x397c:   70 0a                              	jo 0x3988 <function_3970+0x18>
0x397e:   00 00                              	add byte ptr [rax], al
0x3980:   48 89 e8                           	mov rax, rbp
0x3983:   48 8d 6d e8                        	lea rbp, [rbp - 0x18]
; data inside code section at 0x3987 -- 0x3988
0x3987:   4c                                                 |L               |
0x3988:   39 fd                              	cmp ebp, edi
0x398a:   72 32                              	jb 0x39be <function_3970+0x4e>
0x398c:   48 89 58 f8                        	mov qword ptr [rax - 8], rbx
0x3990:   b9 00 00 00 00                     	mov ecx, 0
0x3995:   66 48 0f 6e c1                     	movq xmm0, rcx
0x399a:   b9 00 00 00 00                     	mov ecx, 0
0x399f:   66 48 0f 6e c9                     	movq xmm1, rcx
0x39a4:   66 0f 6c c8                        	punpcklqdq xmm1, xmm0
0x39a8:   f3 0f 7f 48 e8                     	movdqu xmmword ptr [rax - 0x18], xmm1
0x39ad:   48 8b 73 10                        	mov rsi, qword ptr [rbx + 0x10]
0x39b1:   bf 00 00 00 00                     	mov edi, 0
0x39b6:   45 31 f6                           	xor r14d, r14d
0x39b9:   e9 30 13 00 00                     	jmp 0x4cee <base_GHCziShow_zdwshowSignedInt_info>
0x39be:   49 8b 4d f0                        	mov rcx, qword ptr [r13 - 0x10]
0x39c2:   48 89 c5                           	mov rbp, rax
0x39c5:   ff e1                              	jmp rcx
; data inside code section at 0x39c7 -- 0x39d1
0x39c7:   66 0f 1f 84 00 00 00 00  00 00                     |f.........      |
; function: function_39d1 at 0x39d1 -- 0x39f5
0x39d1:   00 00                              	add byte ptr [rax], al
0x39d3:   00 00                              	add byte ptr [rax], al
0x39d5:   00 00                              	add byte ptr [rax], al
0x39d7:   00 1e                              	add byte ptr [rsi], bl
0x39d9:   00 00                              	add byte ptr [rax], al
0x39db:   00 10                              	add byte ptr [rax], dl
0x39dd:   0a 00                              	or al, byte ptr [rax]
0x39df:   00 4c 89 f7                        	add byte ptr [rcx + rcx*4 - 9], cl
0x39e3:   48 83 c5 08                        	add rbp, 8
0x39e7:   41 be 00 00 00 00                  	mov r14d, 0
0x39ed:   48 89 de                           	mov rsi, rbx
0x39f0:   e9 01 13 00 00                     	jmp 0x4cf6 <base_GHCziBase_zpzpzuzdszpzp_info>
; data inside code section at 0x39f5 -- 0x3a01
0x39f5:   66 66 2e 0f 1f 84 00 00  00 00 00 04               |ff..........    |
; function: function_3a01 at 0x3a01 -- 0x3a71
0x3a01:   00 00                              	add byte ptr [rax], al
0x3a03:   00 01                              	add byte ptr [rcx], al
0x3a05:   00 00                              	add byte ptr [rax], al
0x3a07:   00 02                              	add byte ptr [rdx], al
0x3a09:   00 00                              	add byte ptr [rax], al
0x3a0b:   00 00                              	add byte ptr [rax], al
0x3a0d:   00 00                              	add byte ptr [rax], al
0x3a0f:   00 0e                              	add byte ptr [rsi], cl
0x3a11:   00 00                              	add byte ptr [rax], al
0x3a13:   00 00                              	add byte ptr [rax], al
0x3a15:   00 00                              	add byte ptr [rax], al
0x3a17:   00 4c 89 e1                        	add byte ptr [rcx + rcx*4 - 0x1f], cl
0x3a1b:   48 8d 45 f8                        	lea rax, [rbp - 8]
0x3a1f:   4c 39 f8                           	cmp rax, r15
0x3a22:   72 32                              	jb 0x3a56 <function_3a01+0x55>
0x3a24:   4c 8d 61 18                        	lea r12, [rcx + 0x18]
0x3a28:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x3a2f:   72 2a                              	jb 0x3a5b <function_3a01+0x5a>
0x3a31:   48 c7 41 08 00 00 00 00            	mov qword ptr [rcx + 8], 0
0x3a39:   4c 89 71 18                        	mov qword ptr [rcx + 0x18], r14
0x3a3d:   48 8d 71 08                        	lea rsi, [rcx + 8]
0x3a41:   48 c7 00 00 00 00 00               	mov qword ptr [rax], 0
0x3a48:   41 be 00 00 00 00                  	mov r14d, 0
0x3a4e:   48 89 c5                           	mov rbp, rax
0x3a51:   e9 a8 12 00 00                     	jmp 0x4cfe <ghczmprim_GHCziCString_unpackAppendCStringzh_info>
0x3a56:   49 89 cc                           	mov r12, rcx
0x3a59:   eb 0b                              	jmp 0x3a66 <function_3a01+0x65>
0x3a5b:   49 c7 85 88 03 00 00 18 00 00 00   	mov qword ptr [r13 + 0x388], 0x18
0x3a66:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3a6a:   bb 00 00 00 00                     	mov ebx, 0
0x3a6f:   ff e0                              	jmp rax
; data inside code section at 0x3a71 -- 0x3a81
0x3a71:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00 00   |ff...........@..|
; function: function_3a81 at 0x3a81 -- 0x3aa2
0x3a81:   00 00                              	add byte ptr [rax], al
0x3a83:   00 00                              	add byte ptr [rax], al
0x3a85:   00 00                              	add byte ptr [rax], al
0x3a87:   00 1e                              	add byte ptr [rsi], bl
0x3a89:   00 00                              	add byte ptr [rax], al
0x3a8b:   00 90 0a 00 00 48                  	add byte ptr [rax + 0x4800000a], dl
0x3a91:   83 c5 08                           	add ebp, 8
0x3a94:   41 be 00 00 00 00                  	mov r14d, 0
0x3a9a:   48 89 de                           	mov rsi, rbx
0x3a9d:   e9 64 12 00 00                     	jmp 0x4d06 <base_GHCziErr_error_info>
; data inside code section at 0x3aa2 -- 0x3ab0
0x3aa2:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: DataziUArr_update_slow at 0x3ab0 -- 0x3ae9
0x3ab0:   4c 39 fd                           	cmp rbp, r15
0x3ab3:   72 29                              	jb 0x3ade <DataziUArr_update_slow+0x2e>
0x3ab5:   48 8b 45 00                        	mov rax, qword ptr [rbp]
0x3ab9:   48 8b 9d 80 00 00 00               	mov rbx, qword ptr [rbp + 0x80]
0x3ac0:   48 c7 45 00 00 00 00 00            	mov qword ptr [rbp], 0
0x3ac8:   48 89 85 80 00 00 00               	mov qword ptr [rbp + 0x80], rax
0x3acf:   f6 c3 07                           	test bl, 7
0x3ad2:   74 05                              	je 0x3ad9 <DataziUArr_update_slow+0x29>
0x3ad4:   e9 a7 00 00 00                     	jmp 0x3b80 <c6MD_info$def>
0x3ad9:   48 8b 03                           	mov rax, qword ptr [rbx]
0x3adc:   ff e0                              	jmp rax
0x3ade:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3ae2:   bb 00 00 00 00                     	mov ebx, 0
0x3ae7:   ff e0                              	jmp rax
; data inside code section at 0x3ae9 -- 0x3af7
0x3ae9:   0f 1f 80 00 00 00 00 98  ff ff ff ff ff ff         |..............  |
; function: function_3af7 at 0x3af7 -- 0x3b6f
0x3af7:   ff 12                              	call qword ptr [rdx]
0x3af9:   00 00                              	add byte ptr [rax], al
0x3afb:   00 00                              	add byte ptr [rax], al
0x3afd:   00 00                              	add byte ptr [rax], al
0x3aff:   00 00                              	add byte ptr [rax], al
0x3b01:   00 00                              	add byte ptr [rax], al
0x3b03:   00 12                              	add byte ptr [rdx], dl
0x3b05:   00 00                              	add byte ptr [rax], al
0x3b07:   00 00                              	add byte ptr [rax], al
0x3b09:   00 00                              	add byte ptr [rax], al
0x3b0b:   00 00                              	add byte ptr [rax], al
0x3b0d:   00 00                              	add byte ptr [rax], al
0x3b0f:   00 0e                              	add byte ptr [rsi], cl
0x3b11:   00 00                              	add byte ptr [rax], al
0x3b13:   00 28                              	add byte ptr [rax], ch
0x3b15:   0a 00                              	or al, byte ptr [rax]
0x3b17:   00 48 89                           	add byte ptr [rax - 0x77], cl
0x3b1a:   e8 48 8d 6d d8                     	call 0xffffffffd86dc867 <unknown_ffffffffd86dc867>
0x3b1f:   4c 39 fd                           	cmp rbp, r15
0x3b22:   72 2c                              	jb 0x3b50 <function_3af7+0x59>
0x3b24:   48 c7 40 d8 00 00 00 00            	mov qword ptr [rax - 0x28], 0
0x3b2c:   48 8b 58 58                        	mov rbx, qword ptr [rax + 0x58]
0x3b30:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x3b34:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x3b38:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x3b3c:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x3b40:   4c 89 70 58                        	mov qword ptr [rax + 0x58], r14
0x3b44:   f6 c3 07                           	test bl, 7
0x3b47:   74 02                              	je 0x3b4b <function_3af7+0x54>
0x3b49:   eb 35                              	jmp 0x3b80 <c6MD_info$def>
0x3b4b:   48 8b 03                           	mov rax, qword ptr [rbx]
0x3b4e:   ff e0                              	jmp rax
0x3b50:   4c 89 70 d8                        	mov qword ptr [rax - 0x28], r14
0x3b54:   48 89 70 e0                        	mov qword ptr [rax - 0x20], rsi
0x3b58:   48 89 78 e8                        	mov qword ptr [rax - 0x18], rdi
0x3b5c:   4c 89 40 f0                        	mov qword ptr [rax - 0x10], r8
0x3b60:   4c 89 48 f8                        	mov qword ptr [rax - 8], r9
0x3b64:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x3b68:   bb 00 00 00 00                     	mov ebx, 0
0x3b6d:   ff e0                              	jmp rax
; data inside code section at 0x3b6f -- 0x3b80
0x3b6f:   90 11 00 00 00 00 00 00  00 1e 00 00 00 c0 09 00   |................|
0x3b7f:   00                                                 |.               |
; function: c6MD_info$def at 0x3b80 -- 0x3fc9
0x3b80:   48 8b 53 07                        	mov rdx, qword ptr [rbx + 7]
0x3b84:   48 83 fa 0f                        	cmp rdx, 0xf
0x3b88:   0f 87 dd 00 00 00                  	ja 0x3c6b <c6MD_info$def+0xeb>
0x3b8e:   4c 89 64 24 c0                     	mov qword ptr [rsp - 0x40], r12
0x3b93:   4c 89 7c 24 c8                     	mov qword ptr [rsp - 0x38], r15
0x3b98:   48 8b 85 80 00 00 00               	mov rax, qword ptr [rbp + 0x80]
0x3b9f:   48 89 44 24 f0                     	mov qword ptr [rsp - 0x10], rax
0x3ba4:   48 8b 45 08                        	mov rax, qword ptr [rbp + 8]
0x3ba8:   48 89 44 24 d0                     	mov qword ptr [rsp - 0x30], rax
0x3bad:   48 8b 45 10                        	mov rax, qword ptr [rbp + 0x10]
0x3bb1:   48 89 44 24 f8                     	mov qword ptr [rsp - 8], rax
0x3bb6:   48 8b 45 18                        	mov rax, qword ptr [rbp + 0x18]
0x3bba:   48 89 44 24 d8                     	mov qword ptr [rsp - 0x28], rax
0x3bbf:   48 8b 45 20                        	mov rax, qword ptr [rbp + 0x20]
0x3bc3:   48 89 44 24 e0                     	mov qword ptr [rsp - 0x20], rax
0x3bc8:   48 8b 45 28                        	mov rax, qword ptr [rbp + 0x28]
0x3bcc:   48 89 44 24 e8                     	mov qword ptr [rsp - 0x18], rax
0x3bd1:   4c 8b 75 30                        	mov r14, qword ptr [rbp + 0x30]
0x3bd5:   48 8b 7d 38                        	mov rdi, qword ptr [rbp + 0x38]
0x3bd9:   4c 8d 65 40                        	lea r12, [rbp + 0x40]
0x3bdd:   4c 8b 45 40                        	mov r8, qword ptr [rbp + 0x40]
0x3be1:   4c 8b 4d 48                        	mov r9, qword ptr [rbp + 0x48]
0x3be5:   48 8b 5d 50                        	mov rbx, qword ptr [rbp + 0x50]
0x3be9:   48 8b 75 58                        	mov rsi, qword ptr [rbp + 0x58]
0x3bed:   4c 8b 7d 60                        	mov r15, qword ptr [rbp + 0x60]
0x3bf1:   4c 8b 55 68                        	mov r10, qword ptr [rbp + 0x68]
0x3bf5:   48 8b 4d 70                        	mov rcx, qword ptr [rbp + 0x70]
0x3bf9:   48 8b 45 78                        	mov rax, qword ptr [rbp + 0x78]
0x3bfd:   4c 8b 9d 88 00 00 00               	mov r11, qword ptr [rbp + 0x88]
0x3c04:   ff 24 d5 00 00 00 00               	jmp qword ptr [rdx*8]
0x3c0b:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3c0f:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3c13:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3c17:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3c1b:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3c1f:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3c23:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3c27:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3c2b:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3c32:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3c39:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3c40:   4c 89 e5                           	mov rbp, r12
0x3c43:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3c48:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3c4d:   48 8b 7c 24 d8                     	mov rdi, qword ptr [rsp - 0x28]
0x3c52:   4c 8b 44 24 e0                     	mov r8, qword ptr [rsp - 0x20]
0x3c57:   4c 8b 4c 24 e8                     	mov r9, qword ptr [rsp - 0x18]
0x3c5c:   4c 8b 7c 24 c8                     	mov r15, qword ptr [rsp - 0x38]
0x3c61:   4c 89 db                           	mov rbx, r11
0x3c64:   48 8b 74 24 f8                     	mov rsi, qword ptr [rsp - 8]
0x3c69:   ff e0                              	jmp rax
0x3c6b:   48 8d 8d 88 00 00 00               	lea rcx, [rbp + 0x88]
0x3c72:   4c 39 f9                           	cmp rcx, r15
0x3c75:   0f 82 26 03 00 00                  	jb 0x3fa1 <c6MD_info$def+0x421>
0x3c7b:   49 8d 44 24 18                     	lea rax, [r12 + 0x18]
0x3c80:   49 39 85 58 03 00 00               	cmp qword ptr [r13 + 0x358], rax
0x3c87:   0f 82 19 03 00 00                  	jb 0x3fa6 <c6MD_info$def+0x426>
0x3c8d:   49 8d 74 24 08                     	lea rsi, [r12 + 8]
0x3c92:   49 c7 44 24 08 00 00 00 00         	mov qword ptr [r12 + 8], 0
0x3c9b:   49 89 54 24 18                     	mov qword ptr [r12 + 0x18], rdx
0x3ca0:   48 c7 01 00 00 00 00               	mov qword ptr [rcx], 0
0x3ca7:   41 be 00 00 00 00                  	mov r14d, 0
0x3cad:   48 89 cd                           	mov rbp, rcx
0x3cb0:   49 89 c4                           	mov r12, rax
0x3cb3:   e9 46 10 00 00                     	jmp 0x4cfe <ghczmprim_GHCziCString_unpackAppendCStringzh_info>
0x3cb8:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3cbc:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3cc0:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3cc4:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3cc8:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3ccc:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3cd0:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3cd4:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3cd8:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3cdf:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3ce6:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3ced:   4c 89 e5                           	mov rbp, r12
0x3cf0:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3cf5:   4d 89 de                           	mov r14, r11
0x3cf8:   e9 cf 01 00 00                     	jmp 0x3ecc <c6MD_info$def+0x34c>
0x3cfd:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3d01:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3d05:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3d09:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3d0d:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3d11:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3d15:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3d19:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3d1d:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3d24:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3d2b:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3d32:   4c 89 e5                           	mov rbp, r12
0x3d35:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3d3a:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3d3f:   48 8b 7c 24 d8                     	mov rdi, qword ptr [rsp - 0x28]
0x3d44:   4c 8b 44 24 e0                     	mov r8, qword ptr [rsp - 0x20]
0x3d49:   4c 8b 4c 24 e8                     	mov r9, qword ptr [rsp - 0x18]
0x3d4e:   4c 8b 7c 24 c8                     	mov r15, qword ptr [rsp - 0x38]
0x3d53:   48 8b 5c 24 f0                     	mov rbx, qword ptr [rsp - 0x10]
0x3d58:   4c 89 de                           	mov rsi, r11
0x3d5b:   ff e0                              	jmp rax
0x3d5d:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3d61:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3d65:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3d69:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3d6d:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3d71:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3d75:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3d79:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3d7d:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3d84:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3d8b:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3d92:   4c 89 e5                           	mov rbp, r12
0x3d95:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3d9a:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3d9f:   4c 89 df                           	mov rdi, r11
0x3da2:   e9 2a 01 00 00                     	jmp 0x3ed1 <c6MD_info$def+0x351>
0x3da7:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3dab:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3daf:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3db3:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3db7:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3dbb:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3dbf:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3dc3:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3dc7:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3dce:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3dd5:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3ddc:   4c 89 e5                           	mov rbp, r12
0x3ddf:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3de4:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3de9:   48 8b 7c 24 d8                     	mov rdi, qword ptr [rsp - 0x28]
0x3dee:   4d 89 d8                           	mov r8, r11
0x3df1:   e9 e0 00 00 00                     	jmp 0x3ed6 <c6MD_info$def+0x356>
0x3df6:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3dfa:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3dfe:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3e02:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3e06:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3e0a:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3e0e:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3e12:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3e16:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3e1d:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3e24:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3e2b:   4c 89 e5                           	mov rbp, r12
0x3e2e:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3e33:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3e38:   48 8b 7c 24 d8                     	mov rdi, qword ptr [rsp - 0x28]
0x3e3d:   4c 8b 44 24 e0                     	mov r8, qword ptr [rsp - 0x20]
0x3e42:   4d 89 d9                           	mov r9, r11
0x3e45:   e9 91 00 00 00                     	jmp 0x3edb <c6MD_info$def+0x35b>
0x3e4a:   4c 89 5d 40                        	mov qword ptr [rbp + 0x40], r11
0x3e4e:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3e52:   eb 08                              	jmp 0x3e5c <c6MD_info$def+0x2dc>
0x3e54:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3e58:   4c 89 5d 48                        	mov qword ptr [rbp + 0x48], r11
0x3e5c:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3e60:   eb 0c                              	jmp 0x3e6e <c6MD_info$def+0x2ee>
0x3e62:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3e66:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3e6a:   4c 89 5d 50                        	mov qword ptr [rbp + 0x50], r11
0x3e6e:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3e72:   eb 10                              	jmp 0x3e84 <c6MD_info$def+0x304>
0x3e74:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3e78:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3e7c:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3e80:   4c 89 5d 58                        	mov qword ptr [rbp + 0x58], r11
0x3e84:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3e88:   eb 14                              	jmp 0x3e9e <c6MD_info$def+0x31e>
0x3e8a:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3e8e:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3e92:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3e96:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3e9a:   4c 89 5d 60                        	mov qword ptr [rbp + 0x60], r11
0x3e9e:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3ea2:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3ea6:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3eaa:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3eb1:   48 89 85 88 00 00 00               	mov qword ptr [rbp + 0x88], rax
0x3eb8:   48 8b 85 90 00 00 00               	mov rax, qword ptr [rbp + 0x90]
0x3ebf:   4c 89 e5                           	mov rbp, r12
0x3ec2:   4c 8b 64 24 c0                     	mov r12, qword ptr [rsp - 0x40]
0x3ec7:   4c 8b 74 24 d0                     	mov r14, qword ptr [rsp - 0x30]
0x3ecc:   48 8b 7c 24 d8                     	mov rdi, qword ptr [rsp - 0x28]
0x3ed1:   4c 8b 44 24 e0                     	mov r8, qword ptr [rsp - 0x20]
0x3ed6:   4c 8b 4c 24 e8                     	mov r9, qword ptr [rsp - 0x18]
0x3edb:   4c 8b 7c 24 c8                     	mov r15, qword ptr [rsp - 0x38]
0x3ee0:   48 8b 5c 24 f0                     	mov rbx, qword ptr [rsp - 0x10]
0x3ee5:   48 8b 74 24 f8                     	mov rsi, qword ptr [rsp - 8]
0x3eea:   ff e0                              	jmp rax
0x3eec:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3ef0:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3ef4:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3ef8:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3efc:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3f00:   4c 89 5d 68                        	mov qword ptr [rbp + 0x68], r11
0x3f04:   eb 9c                              	jmp 0x3ea2 <c6MD_info$def+0x322>
0x3f06:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3f0a:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3f0e:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3f12:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3f16:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3f1a:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3f1e:   4c 89 5d 70                        	mov qword ptr [rbp + 0x70], r11
0x3f22:   eb 82                              	jmp 0x3ea6 <c6MD_info$def+0x326>
0x3f24:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3f28:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3f2c:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3f30:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3f34:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3f38:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3f3c:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3f40:   4c 89 5d 78                        	mov qword ptr [rbp + 0x78], r11
0x3f44:   e9 61 ff ff ff                     	jmp 0x3eaa <c6MD_info$def+0x32a>
0x3f49:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3f4d:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3f51:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3f55:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3f59:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3f5d:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3f61:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3f65:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3f69:   4c 89 9d 80 00 00 00               	mov qword ptr [rbp + 0x80], r11
0x3f70:   e9 3c ff ff ff                     	jmp 0x3eb1 <c6MD_info$def+0x331>
0x3f75:   4c 89 75 40                        	mov qword ptr [rbp + 0x40], r14
0x3f79:   48 89 7d 48                        	mov qword ptr [rbp + 0x48], rdi
0x3f7d:   4c 89 45 50                        	mov qword ptr [rbp + 0x50], r8
0x3f81:   4c 89 4d 58                        	mov qword ptr [rbp + 0x58], r9
0x3f85:   48 89 5d 60                        	mov qword ptr [rbp + 0x60], rbx
0x3f89:   48 89 75 68                        	mov qword ptr [rbp + 0x68], rsi
0x3f8d:   4c 89 7d 70                        	mov qword ptr [rbp + 0x70], r15
0x3f91:   4c 89 55 78                        	mov qword ptr [rbp + 0x78], r10
0x3f95:   48 89 8d 80 00 00 00               	mov qword ptr [rbp + 0x80], rcx
0x3f9c:   e9 17 ff ff ff                     	jmp 0x3eb8 <c6MD_info$def+0x338>
0x3fa1:   4c 89 e0                           	mov rax, r12
0x3fa4:   eb 0b                              	jmp 0x3fb1 <c6MD_info$def+0x431>
0x3fa6:   49 c7 85 88 03 00 00 18 00 00 00   	mov qword ptr [r13 + 0x388], 0x18
0x3fb1:   48 81 c5 90 00 00 00               	add rbp, 0x90
0x3fb8:   49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x3fbc:   bb 00 00 00 00                     	mov ebx, 0
0x3fc1:   49 89 c4                           	mov r12, rax
0x3fc4:   49 89 d6                           	mov r14, rdx
0x3fc7:   ff e1                              	jmp rcx
; data inside code section at 0x3fc9 -- 0x3fd1
0x3fc9:   0f 1f 80 00 00 00 00 17                            |........        |
; function: function_3fd1 at 0x3fd1 -- 0x4023
0x3fd1:   00 00                              	add byte ptr [rax], al
0x3fd3:   00 03                              	add byte ptr [rbx], al
0x3fd5:   00 00                              	add byte ptr [rax], al
0x3fd7:   00 00                              	add byte ptr [rax], al
0x3fd9:   00 00                              	add byte ptr [rax], al
0x3fdb:   00 00                              	add byte ptr [rax], al
0x3fdd:   00 00                              	add byte ptr [rax], al
0x3fdf:   00 0e                              	add byte ptr [rsi], cl
0x3fe1:   00 00                              	add byte ptr [rax], al
0x3fe3:   00 78 05                           	add byte ptr [rax + 5], bh
0x3fe6:   00 00                              	add byte ptr [rax], al
0x3fe8:   48 8d 45 98                        	lea rax, [rbp - 0x68]
0x3fec:   4c 39 f8                           	cmp rax, r15
0x3fef:   72 27                              	jb 0x4018 <function_3fd1+0x47>
0x3ff1:   48 c7 45 e8 00 00 00 00            	mov qword ptr [rbp - 0x18], 0
0x3ff9:   48 89 75 f0                        	mov qword ptr [rbp - 0x10], rsi
0x3ffd:   48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0x4001:   48 8d 6d e8                        	lea rbp, [rbp - 0x18]
0x4005:   41 f6 c6 07                        	test r14b, 7
0x4009:   74 05                              	je 0x4010 <function_3fd1+0x3f>
0x400b:   4c 89 f3                           	mov rbx, r14
0x400e:   eb 30                              	jmp 0x4040 <c73o_info$def>
0x4010:   49 8b 06                           	mov rax, qword ptr [r14]
0x4013:   4c 89 f3                           	mov rbx, r14
0x4016:   ff e0                              	jmp rax
0x4018:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x401c:   bb 00 00 00 00                     	mov ebx, 0
0x4021:   ff e0                              	jmp rax
; data inside code section at 0x4023 -- 0x403e
0x4023:   66 66 2e 0f 1f 84 00 00  00 00 00 66 90 02 00 00   |ff.........f....|
0x4033:   00 00 00 00 00 1e 00 00  00 20 05                  |......... .     |
; function: function_403e at 0x403e -- 0x4040
0x403e:   00 00                              	add byte ptr [rax], al
; function: c73o_info$def at 0x4040 -- 0x410c
0x4040:   4c 8b 43 27                        	mov r8, qword ptr [rbx + 0x27]
0x4044:   48 8b 53 1f                        	mov rdx, qword ptr [rbx + 0x1f]
0x4048:   48 8b 73 17                        	mov rsi, qword ptr [rbx + 0x17]
0x404c:   48 8b 7b 07                        	mov rdi, qword ptr [rbx + 7]
0x4050:   48 8b 4b 0f                        	mov rcx, qword ptr [rbx + 0xf]
0x4054:   48 8b 43 2f                        	mov rax, qword ptr [rbx + 0x2f]
0x4058:   48 89 45 b0                        	mov qword ptr [rbp - 0x50], rax
0x405c:   48 8b 43 37                        	mov rax, qword ptr [rbx + 0x37]
0x4060:   48 89 45 b8                        	mov qword ptr [rbp - 0x48], rax
0x4064:   48 8b 43 3f                        	mov rax, qword ptr [rbx + 0x3f]
0x4068:   48 89 45 c0                        	mov qword ptr [rbp - 0x40], rax
0x406c:   48 8b 43 47                        	mov rax, qword ptr [rbx + 0x47]
0x4070:   48 89 45 c8                        	mov qword ptr [rbp - 0x38], rax
0x4074:   48 8b 43 4f                        	mov rax, qword ptr [rbx + 0x4f]
0x4078:   48 89 45 d0                        	mov qword ptr [rbp - 0x30], rax
0x407c:   48 8b 43 57                        	mov rax, qword ptr [rbx + 0x57]
0x4080:   48 89 45 d8                        	mov qword ptr [rbp - 0x28], rax
0x4084:   48 8b 43 5f                        	mov rax, qword ptr [rbx + 0x5f]
0x4088:   48 89 45 e0                        	mov qword ptr [rbp - 0x20], rax
0x408c:   48 8b 43 67                        	mov rax, qword ptr [rbx + 0x67]
0x4090:   48 89 45 e8                        	mov qword ptr [rbp - 0x18], rax
0x4094:   48 8b 43 6f                        	mov rax, qword ptr [rbx + 0x6f]
0x4098:   48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0x409c:   48 8b 43 77                        	mov rax, qword ptr [rbx + 0x77]
0x40a0:   48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0x40a4:   48 8b 43 7f                        	mov rax, qword ptr [rbx + 0x7f]
0x40a8:   48 89 45 00                        	mov qword ptr [rbp], rax
0x40ac:   48 8d 45 88                        	lea rax, [rbp - 0x78]
0x40b0:   4c 39 f8                           	cmp rax, r15
0x40b3:   72 35                              	jb 0x40ea <c73o_info$def+0xaa>
0x40b5:   48 c7 45 88 00 00 00 00            	mov qword ptr [rbp - 0x78], 0
0x40bd:   48 8b 5d 08                        	mov rbx, qword ptr [rbp + 8]
0x40c1:   48 89 4d 90                        	mov qword ptr [rbp - 0x70], rcx
0x40c5:   48 89 75 98                        	mov qword ptr [rbp - 0x68], rsi
0x40c9:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x40cd:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x40d1:   48 89 7d 08                        	mov qword ptr [rbp + 8], rdi
0x40d5:   f6 c3 07                           	test bl, 7
0x40d8:   74 08                              	je 0x40e2 <c73o_info$def+0xa2>
0x40da:   48 89 c5                           	mov rbp, rax
0x40dd:   e9 9e fa ff ff                     	jmp 0x3b80 <c6MD_info$def>
0x40e2:   48 8b 0b                           	mov rcx, qword ptr [rbx]
0x40e5:   48 89 c5                           	mov rbp, rax
0x40e8:   ff e1                              	jmp rcx
0x40ea:   48 89 7d 88                        	mov qword ptr [rbp - 0x78], rdi
0x40ee:   48 89 4d 90                        	mov qword ptr [rbp - 0x70], rcx
0x40f2:   48 89 75 98                        	mov qword ptr [rbp - 0x68], rsi
0x40f6:   48 89 55 a0                        	mov qword ptr [rbp - 0x60], rdx
0x40fa:   4c 89 45 a8                        	mov qword ptr [rbp - 0x58], r8
0x40fe:   49 8b 4d f8                        	mov rcx, qword ptr [r13 - 8]
0x4102:   bb 00 00 00 00                     	mov ebx, 0
0x4107:   48 89 c5                           	mov rbp, rax
0x410a:   ff e1                              	jmp rcx
; data inside code section at 0x410c -- 0x4110
0x410c:   0f 1f 40 00                                        |..@.            |
; function: DataziUArr_BoxArray_slow at 0x4110 -- 0x412a
0x4110:   4c 8b 4d 20                        	mov r9, qword ptr [rbp + 0x20]
0x4114:   4c 8b 45 18                        	mov r8, qword ptr [rbp + 0x18]
0x4118:   48 8b 7d 10                        	mov rdi, qword ptr [rbp + 0x10]
0x411c:   4c 8b 75 00                        	mov r14, qword ptr [rbp]
0x4120:   48 8b 75 08                        	mov rsi, qword ptr [rbp + 8]
0x4124:   48 83 c5 28                        	add rbp, 0x28
0x4128:   eb 2e                              	jmp 0x4158 <DataziUArr_BoxArray_info$def>
; data inside code section at 0x412a -- 0x4152
0x412a:   66 0f 1f 44 00 00 b8 ff  ff ff ff ff ff ff 10 00   |f..D............|
0x413a:   00 00 00 00 00 00 00 00  00 00 10 00 00 00 00 00   |................|
0x414a:   00 00 00 00 00 00 0e 00                            |........        |
; function: function_4152 at 0x4152 -- 0x4158
0x4152:   00 00                              	add byte ptr [rax], al
0x4154:   00 00                              	add byte ptr [rax], al
0x4156:   00 00                              	add byte ptr [rax], al
; function: DataziUArr_BoxArray_info$def at 0x4158 -- 0x41f8
0x4158:   4c 89 e0                           	mov rax, r12
0x415b:   4d 8d a4 24 88 00 00 00            	lea r12, [r12 + 0x88]
0x4163:   4d 39 a5 58 03 00 00               	cmp qword ptr [r13 + 0x358], r12
0x416a:   72 5e                              	jb 0x41ca <DataziUArr_BoxArray_info$def+0x72>
0x416c:   48 c7 40 08 00 00 00 00            	mov qword ptr [rax + 8], 0
0x4174:   4c 89 70 10                        	mov qword ptr [rax + 0x10], r14
0x4178:   48 89 70 18                        	mov qword ptr [rax + 0x18], rsi
0x417c:   48 89 78 20                        	mov qword ptr [rax + 0x20], rdi
0x4180:   4c 89 40 28                        	mov qword ptr [rax + 0x28], r8
0x4184:   4c 89 48 30                        	mov qword ptr [rax + 0x30], r9
0x4188:   0f 10 45 00                        	movups xmm0, xmmword ptr [rbp]
0x418c:   0f 11 40 38                        	movups xmmword ptr [rax + 0x38], xmm0
0x4190:   0f 10 45 10                        	movups xmm0, xmmword ptr [rbp + 0x10]
0x4194:   0f 11 40 48                        	movups xmmword ptr [rax + 0x48], xmm0
0x4198:   0f 10 45 20                        	movups xmm0, xmmword ptr [rbp + 0x20]
0x419c:   0f 11 40 58                        	movups xmmword ptr [rax + 0x58], xmm0
0x41a0:   0f 10 45 30                        	movups xmm0, xmmword ptr [rbp + 0x30]
0x41a4:   0f 11 40 68                        	movups xmmword ptr [rax + 0x68], xmm0
0x41a8:   0f 10 45 40                        	movups xmm0, xmmword ptr [rbp + 0x40]
0x41ac:   0f 11 40 78                        	movups xmmword ptr [rax + 0x78], xmm0
0x41b0:   48 8b 4d 50                        	mov rcx, qword ptr [rbp + 0x50]
0x41b4:   48 89 88 88 00 00 00               	mov qword ptr [rax + 0x88], rcx
0x41bb:   48 8b 45 58                        	mov rax, qword ptr [rbp + 0x58]
0x41bf:   48 83 c5 58                        	add rbp, 0x58
0x41c3:   49 8d 5c 24 81                     	lea rbx, [r12 - 0x7f]
0x41c8:   ff e0                              	jmp rax
0x41ca:   49 c7 85 88 03 00 00 88 00 00 00   	mov qword ptr [r13 + 0x388], 0x88
0x41d5:   4c 89 75 d8                        	mov qword ptr [rbp - 0x28], r14
0x41d9:   48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0x41dd:   48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0x41e1:   4c 89 45 f0                        	mov qword ptr [rbp - 0x10], r8
0x41e5:   4c 89 4d f8                        	mov qword ptr [rbp - 8], r9
0x41e9:   48 8d 6d d8                        	lea rbp, [rbp - 0x28]
0x41ed:   49 8b 45 f8                        	mov rax, qword ptr [r13 - 8]
0x41f1:   bb 00 00 00 00                     	mov ebx, 0
0x41f6:   ff e0                              	jmp rax
; data inside code section at 0x41f8 -- 0x4200
0x41f8:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_4200 at 0x4200 -- 0x4222
0x4200:   00 00                              	add byte ptr [rax], al
0x4202:   00 00                              	add byte ptr [rax], al
0x4204:   00 00                              	add byte ptr [rax], al
0x4206:   00 00                              	add byte ptr [rax], al
0x4208:   10 00                              	adc byte ptr [rax], al
0x420a:   00 00                              	add byte ptr [rax], al
0x420c:   00 00                              	add byte ptr [rax], al
0x420e:   00 00                              	add byte ptr [rax], al
0x4210:   01 00                              	add dword ptr [rax], eax
0x4212:   00 00                              	add byte ptr [rax], al
0x4214:   00 00                              	add byte ptr [rax], al
0x4216:   00 00                              	add byte ptr [rax], al
0x4218:   48 83 c3 01                        	add rbx, 1
0x421c:   48 8b 45 00                        	mov rax, qword ptr [rbp]
0x4220:   ff e0                              	jmp rax

;;
;; Data Segment
;;

; section: .data
0x4230:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4240:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4250:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4260:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4270:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4280:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4290:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x42f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4300:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4310:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4320:   00 00 00 00 00 00 00 00  a6 00 00 00 00 00 00 00   |................|
0x4330:   00 00 00 00 00 00 00 00  0f 00 00 00 00 00 00 00   |................|
0x4340:   00 00 00 00 00 00 00 00  3d 00 00 00 00 00 00 00   |........=.......|
0x4350:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4360:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4370:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4380:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4390:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x43f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4400:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4410:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4420:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4430:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4440:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4450:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4460:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4470:   00 00 00 00 00 00 00 00  cc 01 00 00 00 00 00 00   |................|
0x4480:   00 00 00 00 00 00 00 00  0e 00 00 00 00 00 00 00   |................|
0x4490:   00 00 00 00 00 00 00 00  3c 00 00 00 00 00 00 00   |........<.......|
0x44a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x44b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x44c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x44d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x44e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x44f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4500:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4510:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4520:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4530:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4540:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4550:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4560:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4570:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4580:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4590:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x45a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x45b0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x45c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x45d0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x45e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x45f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4600:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4610:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4620:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4630:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4640:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4650:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4660:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4670:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4680:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4690:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x46a0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x46b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x46c0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x46d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x46e0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x46f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4700:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4710:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4720:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4730:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4740:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4750:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4760:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4770:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4780:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4790:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x47a0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x47b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x47c0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x47d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x47e0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x47f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4800:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4810:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4820:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4830:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4840:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4850:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4860:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4870:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4880:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4890:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x48a0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x48b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x48c0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x48d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x48e0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x48f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4900:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4910:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4920:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4930:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4940:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4950:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4960:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4970:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4980:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4990:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x49a0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x49b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x49c0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x49d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x49e0:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x49f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a00:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4a10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a40:   d6 ee f3 29 ee 35 e8 ac  19 e7 0b 44 d8 7b 47 a5   |...).5.....D.{G.|
0x4a50:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4a60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a70:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4a80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a90:   00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4aa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ab0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ac0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ad0:   17 19 05 ec c1 79 1d 67  b5 cb 40 2f 02 bd 1c 55   |.....y.g..@/...U|
0x4ae0:   01 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00   |................|
0x4af0:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .rodata.cst16
0x4b00:   db ff ff ff ff ff ff ff  c9 ff ff ff ff ff ff ff   |................|
0x4b10:   00                                                 |.               |
; section: .rodata
0x4b10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ba0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4bb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4bc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4bd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4be0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4bf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c10:   6d 61 69 6e 00 44 61 74  61 2e 55 41 72 72 00 55   |main.Data.UArr.U|
0x4c20:   61 72 72 2e 68 73 00 65  72 72 6f 72 00 49 6e 64   |arr.hs.error.Ind|
0x4c30:   65 78 20 00 20 6f 75 74  20 6f 66 20 62 6f 75 6e   |ex . out of boun|
0x4c40:   64 73 00 42 6f 78 41 72  72 61 79 00 27 42 6f 78   |ds.BoxArray.'Box|
0x4c50:   41 72 72 61 79 00 6d 61  69 6e 3a 44 61 74 61 2e   |Array.main:Data.|
0x4c60:   55 41 72 72 2e 42 6f 78  41 72 72 61 79 00 00      |UArr.BoxArray.. |
; section: .EXTERN
0x4c6e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c7e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c8e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c9e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cae:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cbe:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cce:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cde:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cee:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cfe:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d0e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d1e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d2e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d3e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d4e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d5e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d6e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d7e:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d8e:   00 00 00 00 00 00 00 00  ??                        |........?       |
